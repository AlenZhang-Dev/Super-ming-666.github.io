<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AlenZhang&#39;s Blog</title>
  
  
  <link href="https://superming.life/atom.xml" rel="self"/>
  
  <link href="https://superming.life/"/>
  <updated>2021-01-05T16:14:47.879Z</updated>
  <id>https://superming.life/</id>
  
  <author>
    <name>AlenZhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu18.04 Tensorflow 1.x</title>
    <link href="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/"/>
    <id>https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/</id>
    <published>2021-01-03T12:22:19.000Z</published>
    <updated>2021-01-05T16:14:47.879Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu18-04-Tensorflow-1-x-安装（一）：Nvidia软件安装"><a href="#Ubuntu18-04-Tensorflow-1-x-安装（一）：Nvidia软件安装" class="headerlink" title="Ubuntu18.04 Tensorflow 1.x 安装（一）：Nvidia软件安装"></a>Ubuntu18.04 Tensorflow 1.x 安装（一）：Nvidia软件安装</h1><p>文章包含以下几个内容：</p><ul><li>Nvidia驱动安装</li><li>CUDA版本选择及安装</li><li>cuDNN选择及安装</li></ul><p>我的配置[参考]：</p><ul><li>GTX965M</li><li>Ubuntu18.04 LTS</li></ul><h2 id="Nvidia驱动安装"><a href="#Nvidia驱动安装" class="headerlink" title="Nvidia驱动安装"></a>Nvidia驱动安装</h2><p>需考虑：GPU硬件型号，GPU驱动，CUDA，TensorFlow，PyTorch以及CuDNN等适配信息。</p><ol><li><strong>检查GPU是否支持CUDA。这决定了你能否安装TensorFlow的GPU版本。</strong></li></ol><p>通过下面链接检查GPU是否支持CUDA，如果GPU能在列表中找到，即支持CUDA。</p><p><a href="https://developer.nvidia.com/cuda-gpus" target="_blank" rel="noopener">CUDA GPUs</a></p><a id="more"></a><p>例如：我使用的GPU为GTX965M，相关信息能在Nvidia官网找到：</p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_4.09.17_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_4.09.17_PM.png"></p><p>计算能力5.2</p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_3.58.30_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_3.58.30_PM.png"></p><ol start="2"><li><strong>确定安装驱动的版本</strong></li></ol><p>下面链接可以查到GPU所对应操作系统可安装最新的驱动版本：</p><p><a href="https://www.nvidia.com/Download/index.aspx" target="_blank" rel="noopener">Download Drivers</a></p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_11.05.58_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_11.05.58_PM.png"></p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_8.27.17_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_8.27.17_PM.png"></p><p>接下来执行如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers <span class="comment">#添加NVIDIA显卡的驱动库</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">ubuntu-drivers devices <span class="comment">#显示可安装的驱动版本</span></span></pre></td></tr></table></figure><p>![Ubuntu18.04+Tensorflow-1.x/Screen Shot 2020-12-27 at 10.41.05 PM.png](Ubuntu18.04+Tensorflow-1.x/Screen Shot 2020-12-27 at 10.41.05 PM.png)</p><p>显示有390-455的版本，其中推荐安装455版本。</p><p>需要注意的是，在下一步安装CUDA时，<u>不同版本的CUDA对驱动版本有要求</u>，详细要求在<a href>Nvidia CUDA Compatibility</a>页面中进行查看。</p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_10.01.29_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_10.01.29_PM.png"></p><p><strong>如何确定安装的CUDA版本？</strong></p><p>CUDA的版本根据Tensorflow版本确定。如下图所示，假设要安装tensorflow_gpu-1.14.0版本，那么我需要安装的CUDA版本为10.0[10.1或9都不行，版本间一一对应]。<a href>检查Tensorflow对应版本</a>。</p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_10.12.59_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-24_at_10.12.59_PM.png"></p><p>综上，根据我要安装的tensorflow版本，需要安装CUDA10.0以及cuDNN7.4。</p><p>回到CUDA对驱动要求查看对应GPU驱动版本的要求：<code>&gt; = 410.48</code> 。</p><p>执行如下命令安装驱动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo apt list nvidia-drivers* <span class="comment">#列出可安装的驱动版本</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo apt install nvidia-driver-450 <span class="comment">#安装450的驱动</span></span></pre></td></tr></table></figure><p>检验驱动是否安装完成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo reboot</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">nvidia-smi</span></pre></td></tr></table></figure><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_11.41.06_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_11.41.06_PM.png"></p><p>执行nvidia-smi显示如图表示驱动安装完成</p><p>训练时检测GPU使用情况：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">watch -n 0.5 nvidia-smi  #即每隔0.5秒执行一次nvidia-smi；</span></pre></td></tr></table></figure><h2 id="CUDA安装："><a href="#CUDA安装：" class="headerlink" title="CUDA安装："></a>CUDA安装：</h2><p>在<a href="https://developer.nvidia.com/Cuda-Toolkit-Archive" target="_blank" rel="noopener">官方页面</a>中找到对应的CUDA版本</p><p><a href="https://developer.nvidia.com/cuda-10.0-download-archive" target="_blank" rel="noopener">CUDA Toolkit 10.0 Archive</a></p><p>可以采用多种教程进行安装，根据给出的参考进行安装：</p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-27_at_12.26.44_AM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-27_at_12.26.44_AM.png"></p><p>选择deb(local)进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo dpkg -i cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64.deb</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo apt-key add /var/cuda-repo-&lt;version&gt;/7fa2af80.pub</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">sudo apt-get install cuda</span></pre></td></tr></table></figure><p>安装完成：</p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_10.25.53_AM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_10.25.53_AM.png"></p><p><strong>CUDA配置</strong>：</p><p>执行<code>vim ~/.bashrc</code>在bash配置文件下添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># added by cuda 10.0 installer</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/usr/local/cuda-10.0/bin:<span class="variable">$PATH</span>"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">"/usr/local/cuda-10.0/lib64:<span class="variable">$LD_LIBRARY_PATH</span>"</span></span></pre></td></tr></table></figure><p><code>source ~/.bashrc</code><br><code>nvcc -V</code> 检查CUDA版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Copyright (c) 2005-2018 NVIDIA Corporation</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Built on Sat_Aug_25_21:08:01_CDT_2018</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Cuda compilation tools, release 10.0, V10.0.130</span></pre></td></tr></table></figure><p><strong>检查CUDA是否正常工作：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cuda-install-samples-10.x.sh ~  <span class="comment">#安装cuda 10.x的样本到~目录下，替换x为你的版本号</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/NVIDIA_CUDA-10.x_Samples  <span class="comment">#进入Sample目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">make  <span class="comment">#有点耗时，如果系统版本不匹配，gcc版本可能会导致报错。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">./1_Utilities/deviceQuery/deviceQuery  <span class="comment">#执行检查程序</span></span></pre></td></tr></table></figure><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_12.12.08_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_12.12.08_PM.png"></p><p>结果出现Result==Pass表示通过，CUDA安装完成。</p><h2 id="安装cuDNN："><a href="#安装cuDNN：" class="headerlink" title="安装cuDNN："></a>安装cuDNN：</h2><p>CUDA10.0 对应cuDNN 7.4</p><p>在官方页面下载cuDNN【需注册Nvidia账号】，</p><p>下载<a href="https://developer.nvidia.com/rdp/cudnn-archive" target="_blank" rel="noopener">cuDNN v7.4.2 for CUDA 10.0</a></p><p>找到Ubuntu18.04 对应的deb包，并下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads  <span class="comment">#进入下载目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo dpkg -i libcudnn*  <span class="comment">#同时安装三个文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#逐个安装执行如下三个命令</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#sudo dpkg -i libcudnn7_7.6.5.32-1+cuda10.2_amd64.deb </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#sudo dpkg -i libcudnn7-dev_7.6.5.32-1+cuda10.2_amd64.deb</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#sudo dpkg -i libcudnn7-doc_7.6.5.32-1+cuda10.2_amd64.deb</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">cp -r /usr/src/cudnn_samples_v7/ <span class="variable">$HOME</span>  <span class="comment">#复制样本文件到$HOME文件夹下</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>  <span class="variable">$HOME</span>/cudnn_samples_v7/mnistCUDNN  <span class="comment">#进入样本目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">make clean &amp;&amp; make  <span class="comment">#编译</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">./mnistCUDNN  <span class="comment">#执行cuDNN测试</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#输出 Test Passed表示cuDNN安装成功。</span></span></pre></td></tr></table></figure><h1 id="Ubuntu18-04-Tensorflow-1-x-安装（二）：TensorFlow及相关软件包安装"><a href="#Ubuntu18-04-Tensorflow-1-x-安装（二）：TensorFlow及相关软件包安装" class="headerlink" title="Ubuntu18.04 Tensorflow 1.x 安装（二）：TensorFlow及相关软件包安装"></a>Ubuntu18.04 Tensorflow 1.x 安装（二）：TensorFlow及相关软件包安装</h1><h2 id="使用原生pip安装"><a href="#使用原生pip安装" class="headerlink" title="使用原生pip安装"></a>使用原生pip安装</h2><p><strong>libcupti包下载：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install libcupti-dev</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">'export LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH'</span> &gt;&gt; ~/.bashrc</span></pre></td></tr></table></figure><p><strong>相关软件包下载</strong>：</p><p>注：我的Ubuntu系统使用python3.6版本，通过<code>python -V</code>查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install python3-pip python3-dev python3-numpy python3-wheel ****<span class="comment"># for Python 3.n</span></span></pre></td></tr></table></figure><p><strong>下载指定版本的TensorFlow：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ pip3 install tensorflow==1.14.0 <span class="comment"># cpu version </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$ pip3 install tensorflow-gpu==1.14.0 <span class="comment">#gpu version</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$ pip install tensorflow==1.14.0 <span class="comment"># cpu version </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$ pip install tensorflow-gpu==1.14.0 <span class="comment">#gpu version</span></span></pre></td></tr></table></figure><p>备用方法：如果以上安装失败或者有报错，可以选择指定<code>tfBinaryURL</code>的形式进行安装。</p><ul><li><a href="https://pypi.org/project/tensorflow/" target="_blank" rel="noopener">CPU Version</a></li><li><a href="https://pypi.org/project/tensorflow-gpu/" target="_blank" rel="noopener">GPU Version</a></li></ul><p>根据TensorFlow版本、操作系统以及Python版本确定.whl文件。使用如下命令进行安装：</p><ul><li>可以直接安装，也可以在Virtualenv环境中安装。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ sudo pip  install --upgrade tfBinaryURL   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ sudo pip3 install --upgrade tfBinaryURL</span></pre></td></tr></table></figure><p><strong>卸载：</strong></p><p>使用pip安装的TensorFlow可以使用如下命令卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ sudo pip uninstall tensorflow </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ sudo pip3 uninstall tensorflow</span></pre></td></tr></table></figure><h2 id="使用Anaconda安装TensorFlow"><a href="#使用Anaconda安装TensorFlow" class="headerlink" title="使用Anaconda安装TensorFlow"></a>使用Anaconda安装TensorFlow</h2><h3 id="Anaconda安装"><a href="#Anaconda安装" class="headerlink" title="Anaconda安装"></a>Anaconda安装</h3><p>在<a href="https://www.anaconda.com/products/individual#Downloads" target="_blank" rel="noopener">官网</a>下载64位Linux版本的<strong>Anaconda</strong>。</p><p>执行如下命令进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ bash Anaconda3-2020.11-Linux-x86_64.sh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span></pre></td></tr></table></figure><p>验证：运行python时，显示的内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Python 3.6.0 |Anaconda 4.3.0 (64-bit)| (default, Dec 23 2016, 12:22:00) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;</span></pre></td></tr></table></figure><p>查看下面图表，确定TensorFlow版本对Python版本的要求。【我使用Python 3.6】</p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_7.27.01_PM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-26_at_7.27.01_PM.png"></p><h3 id="TensorFlow安装"><a href="#TensorFlow安装" class="headerlink" title="TensorFlow安装"></a>TensorFlow安装</h3><p><strong>Anaconda安装</strong></p><p>在Anaconda中，我们使用conda创建一个虚拟环境，并在该环境中安装TensorFlow。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立一个名为tensorflow的conda虚拟环境，同时指定运行的Python版本为3.6</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ conda create -n tensorflow pip python=3.6</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装完成后使用命令激活conda环境</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ conda acticate tensorflow</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">(tensorflow)$ <span class="comment"># 表示进入了名为tensorflow的虚拟环境中</span></span></pre></td></tr></table></figure><p>接下来可以选择在线安装或者本地安装：</p><ol><li>在线安装[简单]</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">pip install tensorflow==1.14.0  <span class="comment"># CPU 版本</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">pip install tensorflow-gpu==1.14.0 <span class="comment"># GPU版本</span></span></pre></td></tr></table></figure><ol start="2"><li>本地安装</li></ol><p>在<a href="https://pypi.org/project/tensorflow-gpu/#files" target="_blank" rel="noopener">pypi-tensorflow</a>网站找到对应的whl文件，下载后使用<code>pip install</code>执行即可。</p><p>附：conda的简单使用：[参考<a href="https://docs.conda.io/projects/conda/en/latest/user-guide/cheatsheet.html" target="_blank" rel="noopener">conda-cheatsheet</a>]</p><p><img src="https://superming.life/2021/01/03/Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-27_at_1.22.23_AM.png" alt="Ubuntu18.04+Tensorflow-1.x/Screen_Shot_2020-12-27_at_1.22.23_AM.png"></p><h2 id="使用Virtualenv安装"><a href="#使用Virtualenv安装" class="headerlink" title="使用Virtualenv安装"></a>使用Virtualenv安装</h2><p>Virtualenv顾名思义是Python的虚拟环境，独立于其他环境【类似于conda】，不与其他Python程序相互影响。在Virtualenv虚拟出的环境中安装TensorFlow及相关依赖，只要激活该环境便可在该环境中运行TensorFlow。</p><p><strong>安装pip和Virtualenv：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install python-pip python-dev python-virtualenv </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install python3-pip python3-dev python-virtualenv</span></pre></td></tr></table></figure><p>选择其中一条命令创建<a href="https://virtualenv.pypa.io/en/latest/index.html" target="_blank" rel="noopener">Virtualenv</a>的虚拟环境</p><ul><li><code>tragetDirectory</code>  : 自定义VIrtualenv根目录，我设置为<code>~/tensorflow</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ virtualenv --system-site-packages targetDirectory </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.x</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ virtualenv --system-site-packages -p python3 targetDirectory</span></pre></td></tr></table></figure><p><strong>激活环境并安装TensorFlow</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/tensorflow/bin/activate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Make sure pip 8.1+ installed.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">(tensorflow)$ easy_install -U pip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Download TensorFlow</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># CPU with pip or pip3</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">(tensorflow)$ pip install --upgrade tensorflow     </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">(tensorflow)$ pip3 install --upgrade tensorflow    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># GPU with pip or pip3</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">(tensorflow)$ pip install --upgrade tensorflow-gpu  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">(tensorflow)$ pip3 install --upgrade tensorflow-gpu</span></pre></td></tr></table></figure><p><strong>Others</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 激活环境</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/tensorflow/bin/activate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 休眠环境</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">(tensorflow)$ deactivate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载TensorFlow, 移除目录树即可</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">rm -r targetDirectory</span></pre></td></tr></table></figure><h2 id="源代码构建"><a href="#源代码构建" class="headerlink" title="源代码构建"></a>源代码构建</h2><p>待补充…</p><h2 id="验证TensorFlow是否可用："><a href="#验证TensorFlow是否可用：" class="headerlink" title="验证TensorFlow是否可用："></a>验证TensorFlow是否可用：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">pip show tensorflow-gpu</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">pip show tensorflow</span></pre></td></tr></table></figure><p>执行简单的Python程序：</p><p>在shell中输入<code>python</code>开启python</p><p>输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hello = tf.constant(<span class="string">'Hello, TensorFlow!'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">sess = tf.Session()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(sess.run(hello))</span></pre></td></tr></table></figure><p>系统输出：<code>Hello, Tensorflow</code> ，表示TensorFlow可正常使用。</p><hr><h2 id="参考-amp-帮助"><a href="#参考-amp-帮助" class="headerlink" title="参考&amp;帮助"></a>参考&amp;帮助</h2><p><a href="http://ejklike.github.io/2017/03/06/install-tensorflow1.0-on-ubuntu16.04-1.html" target="_blank" rel="noopener">우분투 16.04에 텐서플로 1.0 설치하기 (1) Nvidia 소프트웨어 설치 (ft. GTX 970)</a></p><p><a href="https://www.tensorflow.org/install/gpu" target="_blank" rel="noopener">GPU support | TensorFlow</a></p><p><a href="https://medium.com/better-programming/install-tensorflow-1-13-on-ubuntu-18-04-with-gpu-support-239b36d29070" target="_blank" rel="noopener">Install Tensorflow 1.13 on Ubuntu 18.04 with GPU support</a></p><p><a href="https://zhuanlan.zhihu.com/p/143429249" target="_blank" rel="noopener">简易记录：安装GPU驱动，CUDA和cuDNN</a></p><p><a href="https://tensorflow.juejin.im/install/install_linux.html#toc-16" target="_blank" rel="noopener">在 Ubuntu 上安装 TensorFlow</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener">anaconda | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>How to change the default Anaconda python environment?</p><p>如何指定python的pip下载【电脑中有多个版本的python和pip】<a href="https://stackoverflow.com/questions/2812520/dealing-with-multiple-python-versions-and-pip" target="_blank" rel="noopener">Dealing with multiple Python versions and PIP?</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># The system default python:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ python -m pip install fish</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># A virtualenv's python:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$ .env/bin/python -m pip install fish</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># A specific version of python:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">$ python-3.6 -m pip install fish</span></pre></td></tr></table></figure><p><a href="https://github.com/AlenZhang-Dev/Learning-Records/blob/master/Machine%20Learning/Notes/Ubuntu18.04%20%2B%20Tensorflow%201.x%20.md" target="_blank" rel="noopener">GitHub记录</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Ubuntu18-04-Tensorflow-1-x-安装（一）：Nvidia软件安装&quot;&gt;&lt;a href=&quot;#Ubuntu18-04-Tensorflow-1-x-安装（一）：Nvidia软件安装&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu18.04 Tensorflow 1.x 安装（一）：Nvidia软件安装&quot;&gt;&lt;/a&gt;Ubuntu18.04 Tensorflow 1.x 安装（一）：Nvidia软件安装&lt;/h1&gt;&lt;p&gt;文章包含以下几个内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nvidia驱动安装&lt;/li&gt;
&lt;li&gt;CUDA版本选择及安装&lt;/li&gt;
&lt;li&gt;cuDNN选择及安装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的配置[参考]：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GTX965M&lt;/li&gt;
&lt;li&gt;Ubuntu18.04 LTS&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Nvidia驱动安装&quot;&gt;&lt;a href=&quot;#Nvidia驱动安装&quot; class=&quot;headerlink&quot; title=&quot;Nvidia驱动安装&quot;&gt;&lt;/a&gt;Nvidia驱动安装&lt;/h2&gt;&lt;p&gt;需考虑：GPU硬件型号，GPU驱动，CUDA，TensorFlow，PyTorch以及CuDNN等适配信息。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;检查GPU是否支持CUDA。这决定了你能否安装TensorFlow的GPU版本。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过下面链接检查GPU是否支持CUDA，如果GPU能在列表中找到，即支持CUDA。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.nvidia.com/cuda-gpus&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CUDA GPUs&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Machine-Learning" scheme="https://superming.life/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Part1：深度学习基础</title>
    <link href="https://superming.life/2020/11/24/Part%201%20%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/"/>
    <id>https://superming.life/2020/11/24/Part%201%20%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</id>
    <published>2020-11-24T06:00:00.000Z</published>
    <updated>2021-01-05T16:18:04.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Part-1-深度学习基础"><a href="#Part-1-深度学习基础" class="headerlink" title="Part 1 深度学习基础"></a>Part 1 深度学习基础</h1><h1 id="简单概述"><a href="#简单概述" class="headerlink" title="简单概述"></a>简单概述</h1><p>深度学习应用于计算机视觉的两个关键思想：卷积神经网络和反向传播。</p><p>总的来说，以下三种力量在推动机器学习。</p><ol><li><p>硬件</p><p> CPU以及GPU上的大量投入。</p></li><li><p>数据集和基准</p></li><li><p>算法上的改进</p><p> 在2009-2010年出现了几个简单但很重要的算法改进，可以实现更好的梯度传播。以及更先进的有助于梯度传播的方法：批标准化，残差连接和深度可分离卷积。</p><p> 更好的神经层激活函数</p><p> 更好的权重初始化方案</p><p> 更好的优化方案</p></li></ol><a id="more"></a><h1 id="神经网络的数学基础"><a href="#神经网络的数学基础" class="headerlink" title="神经网络的数学基础"></a>神经网络的数学基础</h1><p>理解神经网络需要有很扎实的数学基础：张量，张量运算，微分，梯度下降等。因此对于神经网络的应用和理解需要分开进行，两种学习层级不在一个Level。</p><ul><li>侧重与应用，并尽量避免数学论证。</li></ul><h2 id="神经网络数据表示"><a href="#神经网络数据表示" class="headerlink" title="神经网络数据表示"></a>神经网络数据表示</h2><p><strong>张量</strong></p><p><strong>张量（Tensor）</strong>，张量是机器学习的基本数据结构。它是一个数据容器，包含的数据几乎总是数值数据，因此它是数字的容器。张量是矩阵向任意纬度的推【纬度dimension 也叫轴axis】</p><p><strong>标量（0D张量）</strong></p><p>仅包含一个数字的张量叫做标量（scalar）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">x = np.array(<span class="number">12</span>)</span></pre></td></tr></table></figure><p><strong>向量（1D张量）</strong></p><p>数字组成的数据叫做向量（vector）。矩阵有一个轴。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">x = np.array([<span class="number">12</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>])</span></pre></td></tr></table></figure><p><strong>矩阵（2D张量）</strong></p><p>向量组成的数组叫做矩阵或者二维张量。矩阵有两个轴。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">x = np.array([[<span class="number">2</span>, <span class="number">3</span> ,<span class="number">4</span>, <span class="number">5</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span></pre></td></tr></table></figure><p><strong>3D张量与更高维张量</strong></p><p>将多个矩阵组合成一个新数组，得到一个3D张量，也就是立方体。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">x = np.array([[[<span class="number">2</span>, <span class="number">3</span> ,<span class="number">4</span>, <span class="number">5</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">   [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">[[<span class="number">2</span>, <span class="number">3</span> ,<span class="number">4</span>, <span class="number">5</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">   [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]])</span></pre></td></tr></table></figure><p>深度学习一般处理0-4D的张量，处理视频的时候可能会遇到5D张量。</p><p><strong>关键属性</strong></p><p>张量是由以下三个属性定义的：</p><p><strong>轴的个数（阶）</strong>：例如，3D张量中有3个轴，矩阵有两个轴。在Numpy等Python库中叫张量的ndim。</p><p><strong>形状</strong>：表示张量沿着每个轴的纬度大小（元素个数）。例如，矩阵示例形状为（3，5），3D张量示例形状为（3，3，5）…</p><p><strong>数据类型：</strong>（在Python库中叫做dtype）。这是张量中所包含的数据类型【float 32 、uint 8、float 64等】，极少数情况下会遇到字符（char）张量。</p><p><strong>在Numpy中操作张量</strong></p><p>选择张量的特定元素叫做张量切片（tensor slicing）。</p><p>下面例子选择第10-100个数字（不包含100个），并将其放在形状为（90，28，28）的数组中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">my_slice = train_images[<span class="number">10</span>:<span class="number">100</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">print(my_slice.shape)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下等同于前面的操作</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">my_slice = train_image[<span class="number">10</span>:<span class="number">100</span>, :, :]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">my_slice = train_image[<span class="number">10</span>:<span class="number">100</span>, <span class="number">0</span>:<span class="number">28</span>, <span class="number">0</span>:<span class="number">28</span>]</span></pre></td></tr></table></figure><p><strong>数据批量概念</strong></p><p>In normal，深度学习中所有数据张量的第一个轴（0轴）都是样本轴（sample axis）。在MINIST中，样本就是数字图像。</p><p>深度学习模型不会同时处理整个数据集。而是将数据拆分成小批量，批量大小为128。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">batch = train_image[:<span class="number">128</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">batch = train_image[<span class="number">128</span>:<span class="number">256</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第n个批量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">batch = train_image[<span class="number">128</span> * n : <span class="number">128</span> * (n + <span class="number">1</span>)]</span></pre></td></tr></table></figure><p>对于以上的批量张量，第一个轴（0轴）叫做批量轴（batch axis）或批量维度（batch dimension）。</p><h2 id="神经网络张量运算"><a href="#神经网络张量运算" class="headerlink" title="神经网络张量运算"></a>神经网络张量运算</h2><p>深度神经网络的所有变化都可以简化为数值数据上的张量运算（tensor operation）</p><p><strong>逐元素运算</strong><br>relu元素和加法都是逐元素（element-wise）的运算，即该运算独立应用于张量中的每个元素。也就是该运算非常适合大规模并行实现。（向量化实现）</p><p><strong>广播</strong></p><p>如果两个不同形状的2D张量相加，会发生什么？</p><p>如果没有歧义，较小的张量会会被广播（broadcast），以匹配较大张量的形状。广播包含以下两步：</p><ol><li>向较小的张量添加轴（叫做广播轴），使其ndim与较大张量相同。</li></ol><p>2.将较小的张量沿着新轴重复，使其形状与较大的张量相同。</p><p>举例：如果一个张量的形状是(a, b, … n, n  + 1, … m)，另一个张量的形状是(n, n + 1, …  m)，那么你通常可以利用广播对它们做两个张量之间的逐元素运算。广播操作会自动应用于a到n-1的轴。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">x = np.random.random((<span class="number">64</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">10</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">y = np.random.random(<span class="number">32</span>, <span class="number">10</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">z = np.maximum(x, y)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出z的形状是（64， 3， 32， 10），与x相同。</span></span></pre></td></tr></table></figure><p><strong>张量点积</strong></p><p>点积运算，也叫张量积（tensor product），是最常见也是最有用的张量运算。与逐元素张量不同，它将输入张量元素合并在一起。</p><p>Numpy，Keras，Theano和TensorFlow中，都是使用 * 实现逐元素点积。</p><p>就是两个向量对应位置一一相乘后求和的操作，最后结果是一个标量，是一个实数值。</p><p>两个向量a = [a1, a2,…, an]和b = [b1, b2,…, bn]的点积定义为：</p><p>a·b=a1b1+a2b2+……+anbn。</p><p>张量变形</p><p>改变张量的行和列，得到想要的形状，变形后的张量元素总个数与初始张量相同。</p><p>前面用到的reshape函数就是张量变形的应用。</p><h2 id="梯度下降-suspended"><a href="#梯度下降-suspended" class="headerlink" title="梯度下降  [suspended]"></a>梯度下降  [suspended]</h2><p>关于梯度下降在这里不展开，以下为梯度下降的主要概念</p><ul><li>随机梯度下降。</li><li>小批量随机梯度下降 SGD</li><li>局部最小点（local minimum）</li><li>反向传播算法（Backpropagation）</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>学习</strong>是找到一组模型参数，在给定训练数据样本和对应目标值上的损失函数最小化。</p><p>学习过程中：随机选取包含数据小样本及其目标值的批量，并计算批量损失相对于网络参数的梯度，随后将网络参数沿着梯度反方向移动。</p><p>整个学习过程中之所以能实现，是因为神经网络是一系列可微分的张量运算，因此可以利用求导的链式法则来得到梯度函数，这个函数将当前的参数和当前数据批量映射为一个梯度值。</p><p>损失是在训练过程中需要最小化的量，因此应该能够衡量当前任务是否已成功解决。</p><p>优化器是使用损失梯度更新参数的具体方式，比如RMSProp优化器、带动量的随机梯度下降等。</p><h1 id="神经网络入门"><a href="#神经网络入门" class="headerlink" title="神经网络入门"></a>神经网络入门</h1><blockquote><p>本章通过三个典型的介绍性示例深入理解如何使用神经网络解决实际问题。分别为1. 将电影评论划分为正面或负面（二分类问题）2. 将新闻按主题分类（多分类问题） 3. 根据房地产数据估算房屋价格。</p></blockquote><h2 id="神经网络剖析"><a href="#神经网络剖析" class="headerlink" title="神经网络剖析"></a>神经网络剖析</h2><p><strong>主要介绍神经网络的核心组件：层、网络、目标函数和优化器。</strong></p><p><strong>神经网络主要围绕以下四个方面：</strong></p><p>层：多个层组合成网络（或模型）。</p><p>输入数据和相应的目标。</p><p>损失函数：即用于学习的反馈信号。</p><p>优化器：决定学习过程如何进行。</p><p><img src="https://superming.life/2020/11/24/Part%201%20%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/Untitled.png" alt="Part%201%20深度学习基础/Untitled.png"></p><p><strong>多个层链接在一起组成了网络，将输入映射为预测值。然后损失函数将这些预测值与目标进行比较，得到损失值，用户衡量网络预测值与预期结果的匹配程度。优化器使用这个损失值来更新网络权重。</strong></p><p>神经网络的基本数据结构是层。层是一个数据处理模块，将一个或多个输入张量转换为一个或多个输出张量。</p><p><strong>层：深度学习的基本组件</strong></p><p>神经网络的基本数据结构是层。层是一个数据处理模块，将一个或多个输入张量转换为一个或多个输出张量。有权重的层称为有状态的层。权重是利用随机梯度下降学到的一个或多个张量。其中包含网络的知识。</p><p>不同张量个数与不同数据处理类型需要用到不同的层。例如，简单的向量数据保存在形状为（samples， features）的2D张量中，通常用密集连接层【Densely connected layer 】进行处理。序列数据保存在形状为（samples，timesteps，features）的3D张量中，通常用循环层（Recurrent Layer表示，比如Keras的LSTM层）</p><p>层兼容性（Layer compatibiltiy）具体指每一层只接受特定形状的输入张量，并返回特定形状的输入张量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> layers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">layer = layers.Dense(<span class="number">32</span>, input_shape(<span class="number">784</span>, ))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个层，有32个输出单元的密集层，同时只接受一个维度大小为784的2D张量作为输入。</span></span></pre></td></tr></table></figure><p>接上，上一层后面只能连接一个32维向量作为输入层，Keras会自动匹配输入层的形状。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> models</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> layers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">model = models.Sequential()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">model.add(layers.Dense(<span class="number">32</span>, input_shape=(<span class="number">784</span>)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">model.add(layers.Dense(<span class="number">32</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第二层没有输入形状(input_shape)，可以自动推导出上一层的形状。</span></span></pre></td></tr></table></figure><p><strong>模型：由层构成的网络</strong></p><p>层构成的网络。</p><p>深度学习模型是层构成的有向无环图。</p><p>随着深入学习，会接触到更多类型的网络拓扑结构。</p><ol><li>双分支网络（two-branch）</li><li>多头网络（multihead）</li><li>Inception模块</li></ol><p><strong>损失函数与优化器</strong></p><p>一旦确定了网络架构，需要选择以下两个参数。</p><ol><li>损失函数（目标函数） — 在训练过程中需要将其最小化。他能够衡量当前任务是否成功完成。</li><li>优化器 — 决定如何基于损失函数对网络进行更新。它执行的是随机梯度下降（SGD）的某个变体。</li></ol><p><strong>具有多个输出的神经网络可能有多个损失函数。（每个输出对应一个损失函数）【但是梯度下降过程中必须基于单个标量损失值，因此对于具有多个损失函数的网络，需要将所有损失函数取平均，变为一个标量值】</strong></p><p>选取正确的目标函数对解决问题非常重要，网络的目的是使损失尽可能最小化。因此如果目标函数与成功完成当前任务不完全相关，那么网络最终得到的结果可能会不符合你的预期。因此对于常见的分类、回归、序列预测等常见问题，可以遵循一些简单的指导原则来选择正确的损失函数。</p><p>对于二分类问题：可以使用二元交叉熵（binary crossentropy）损失函数，对于多分类函数，可以使用分类交叉熵（categorical crossentropy），对于回归问题，可以使用均方误差（mean-squared error）对于序列学习问题，可以使用联结主义时序分类（CTC，connecttionist temporal classification）损失函数，等</p><h2 id="二分类问题"><a href="#二分类问题" class="headerlink" title="二分类问题"></a>二分类问题</h2><p>典型的二分类问题代码及解析：<a href="https://github.com/AlenZhang-Dev/Learning-Records/blob/master/Machine%20Learning/Deep%20Learning%20with%20Python/3.4%20%E7%94%B5%E5%BD%B1%E8%AF%84%E8%AE%BA%E5%88%86%E7%B1%BB%E3%80%90%E4%BA%8C%E5%88%86%E7%B1%BB%E3%80%91.ipynb" target="_blank" rel="noopener">使用IMDB进行电影评论分类</a></p><p>关于隐藏单元。一个隐藏单元是该层表示空间的一个维度。16个隐藏单元对应权重矩阵W的形状为（input_dimension）,与W做点击相当于输入数据投影到16维表示空间中。可以表示空间维度直观理解为“网络学习内部表示时所拥有的自由度。”隐藏单元越多，网络能够学到更复杂的表示，但网络的计算代价也越大，而且能够导致学到不好的模式。（能够提高训练数据上的性能，但不能提高测试集上的性能）</p><p><strong>构建网络</strong></p><p>对于Dense层的堆叠，需要有以下两个关键架构</p><ol><li>网络有多少层</li><li>每层有多少隐藏单</li></ol><p><strong>对于二分类问题的总结：</strong></p><ol><li><p>需要对原始数据进行大量的预处理，方便将其转换为张量输入到神经网络中。单词序列使用二进制向量编码，但也有别的编码方式。</p></li><li><p>带有relu激活的Dense层堆叠，可以解决很多种问题。</p></li><li><p>对于二分类问题，网络最后一层应该是只有一个单元并使用sigmoid激活的Dense层，网络输出应该是0～1范围内的标量，表示概率值。</p></li><li><p>对于二分类问题的sigmoid标量输出，应该使用binary_crossentropy损失函数。</p></li><li><p>无论问题是什么，rmsprop优化器通常都是足够好的选择。</p></li><li><p>随着神经网络在训练数据上的表现越来越好，模型最终会过拟合，所以需要监控模型在训练集之外的性能。</p></li></ol><p>什么是激活函数？为什么要使用激活函数？</p><p>如果没有relu等激活函数，Dense层将只包括两个线性运算—点积和加法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">output = dot(W, input) + b</span></pre></td></tr></table></figure><p>这样Dense层就只能学习输入数据的线性变化：该层的假设空间是从输入数据到16位空间所有可能的线性变换集合。这种假设空间非常有限，无法利用多个表示层的优势，因为多个线性层堆叠实现的仍是线性运算，添加层数并不会扩展假设空间。</p><p>为了得到更丰富的假设空间，从而充分利用多层表示的优势，你需要添加非线性或激活函数。relu是深度学习中最常用的激活函数，但还有许多其他函数可选。</p><p>Q：Dense层堆叠的影响？</p><h2 id="多分类问题"><a href="#多分类问题" class="headerlink" title="多分类问题"></a>多分类问题</h2><p>相关重点参见：<a href="https://github.com/AlenZhang-Dev/Learning-Records/blob/master/Machine%20Learning/Deep%20Learning%20with%20Python/3.5%20%E5%A4%9A%E5%88%86%E7%B1%BB%E9%97%AE%E9%A2%98%E3%80%90%E6%96%B0%E9%97%BB%E5%88%86%E7%B1%BB%E3%80%91.ipynb" target="_blank" rel="noopener">新闻分类：多分类问题</a></p><h2 id="标量回归问题"><a href="#标量回归问题" class="headerlink" title="标量回归问题"></a>标量回归问题</h2><p>相关重点参见：<a href="https://github.com/AlenZhang-Dev/Learning-Records/blob/master/Machine%20Learning/Deep%20Learning%20with%20Python/3.6%20%E6%B3%A2%E5%A3%AB%E9%A1%BF%E6%88%BF%E4%BB%B7%E3%80%90%E5%9B%9E%E5%BD%92%E9%97%AE%E9%A2%98%E3%80%91.ipynb" target="_blank" rel="noopener">波士顿房价预测</a></p><h1 id="机器学习基础"><a href="#机器学习基础" class="headerlink" title="机器学习基础"></a>机器学习基础</h1><blockquote><p>改进Plan：鉴于以下几个改进建议，用数据可视化进行表示。</p></blockquote><p>机器学习的四个分支：监督学习、无监督学习、自监督学习、强化学习。 </p><p>评估机器学习模型：<br>机器学习的目的是得到可泛化（generalize）的模型，即在前所未有的数据上表现很好的模型，而过拟合则是核心难点。</p><h2 id="训练集、验证集、测试集"><a href="#训练集、验证集、测试集" class="headerlink" title="训练集、验证集、测试集"></a>训练集、验证集、测试集</h2><p>评估模型的重点是将数据划分如下三个集合：<strong>训练集、验证集和测试集</strong>。在训练数据上训练模型，在测试集上评估模型，一旦找到了最佳参数，在测试数据上最后测试一次。</p><p>因为在开发模型时总是需要调整参数，比如选择层数或者每层大小【这叫做模型的超参数，以便与模型的参数分开】这个调节过程需要使用模型在验证数据集上的性能作为反馈信号，这个调节本质上也是一种学习：在某个参数空间中寻找良好的模型配置。如果基于模型在验证集上的性能来调节模型配置，会很快导致模型在验证集上过拟合，即使你没有在验证集上训练数据。这一现象叫做：信息泄露（information leak）</p><p>以下为主要三种经典评估方法：</p><ol><li><p>简单的留出验证集(hold-out validation)<br>这是最简单的评估方法，但是有一个缺点：如果可用的数据很少，那么可能验证集和测试集包含的样本太少，从而无法在统计学上代表数据。</p></li><li><p>K折验证</p><p> K折验证（K-fold validation）将数据划分为大小相同的K个分区。对于每个分区i，在剩余的K-1个分区中训练模型，然后在分区i上评估模型。最终分数等于K个分数的平均值。</p></li><li><p>带有打乱数据的重复K折验证</p><p> 如果可用数据相对较少，而你又需要尽可能精确地评估模型，那么可以选择带有打乱数据的重复K折验证(iterated K-fold validation with shuffling)。但这种方法一共要训练P X K个模型，计算代价很大。</p></li></ol><p>评估模型注意事项：</p><ol><li>数据代表性（data representativeness)</li><li>时间箭头(the arrow of time)</li><li>数据冗余(redundancy in your data)</li></ol><h2 id="数据预处理、特征工程和特征学习"><a href="#数据预处理、特征工程和特征学习" class="headerlink" title="数据预处理、特征工程和特征学习"></a>数据预处理、特征工程和特征学习</h2><p>神经网络的数据预处理</p><ol><li><p>向量化</p><p> 神经网络所有输入和目标都必须是浮点数张量。无论处理什么数据（声音、图像还是文本），都必须首先将其转换为张量，称为数据向量化（data vectorization）。例如前面进行的one-hot编码。</p></li><li><p>值标准化</p><p> 在手写数字分类的例子中，开始时图像被编码为0-255范围内的整数，表示灰度值。将这一数据输入网络之前，你需要将其转换为float32格式并除255，这样就得到0-1范围内的浮点数。</p><p> 一般来说，取值相对较大的数据（比如多位整数，比网络权重初始值大很多）或异质数据（heterogenrous data，比如数据的一个特征在0-1范围内，另一个特征在100-200范围内)，输入到神经网络中是不安全的。可能会导致较大的梯度更新，进而导致较大的梯度更新，从而导致网络无法收敛。因此输入数据应该具有以下特征：</p><ol><li>取值较小：大部分应该在0-1范围内。</li><li>同质性（homogenous）所有特征取值都应在大致相同的范围内。 </li></ol></li><li><p>处理缺失值</p><p> 你的数据中有时可能会有缺失值。例如在房价预测例子中，第一个特征是人均犯罪率。如果不是所有样本都具有这个特征怎么办？</p><p> 一般来说，将缺失值设置为0是安全的，只要0不是一个有意义的值。网络能够从数据总学到0意味缺失数据，并且会忽略这个值。</p><p> 注意：如果测试数据中有缺失值，而网络是在没有缺失值的数据上进行训练的，那么网络不可能学会忽略缺失值。这种情况下应该人为生成一些缺失项的训练样本，多次复制一些训练样本，然后深处测试数据中可能缺失的某些特征。</p></li></ol><h2 id="特征工程（feature-engineering）"><a href="#特征工程（feature-engineering）" class="headerlink" title="特征工程（feature engineering）"></a>特征工程（feature engineering）</h2><p>特征工程指将数据输入模型之前，利用自己关于数据和机器学习算法的知识对数据进行硬编码的变换，以改善模型的效果。多数情况下，一个机器学习无法从完全任意的数据中进行学习。呈现给模型的数据应该便于模型进行学习。</p><h2 id="过拟合与欠拟合"><a href="#过拟合与欠拟合" class="headerlink" title="过拟合与欠拟合"></a>过拟合与欠拟合</h2><p>机器学习的根本问题是优化和泛化之间的对立。优化(optimization)是指调节模型以在训练数据上得到最佳性能，而泛化(generalization)是指训练好的模型在前所未见的数据上的性能好坏。机器学习的目的是去的良好的泛化，但你无法控制泛化，只能基于训练数据调节模型。</p><p>训练开始时，优化和泛化是相关的：训练数据上损失越小，测试数据上的损失也越小，这时的模型是欠拟合（unfit）的。但在训练数据上迭代一定次数之后，泛化不再提高，验证指标先是不变，然后开始变差，模型开始过拟合。</p><p>为了防止模型从训练数据中学到错误且无关紧要的模式：</p><ul><li>最优解决方式是获得更多训练数据。模型训练数据越多，泛化能力自然越好。</li><li>如果无法获得更多数据，次优解决方法是调节模型允许存储的信息量，对模型允许存储的信息进行约束。</li><li>如果一个网络只能记住几个模式，那么优化过程会迫使模型集中学习最重要的模式，这样可以得到更好的泛化。</li></ul><p>这种降低过拟合的方法叫做正则化（regularization）。以下为几种最常见的正则化方法。</p><h2 id="减小网络大小"><a href="#减小网络大小" class="headerlink" title="减小网络大小"></a>减小网络大小</h2><p>防止过拟合最简单的方法就是减小模型大小，即减少模型中可学习的参数个数。在深度学习中，模型中可学习参数个数通常被称为模型容量(capacity)。从直观上看，参数更多的模型拥有更大的记忆容量(memorization capacity)，因此能够在训练样本和目标之间完美映射，但这种映射没有任何泛化能力。深度学习模型通常都擅长数据拟合，但真正的挑战在于泛化而不是拟合。</p><p>相反，如果网络的记忆容量有限，则无法轻松学会这种映射。所以为了让损失最小化，网络必须学会对目标具有很强的预测能力的压缩表示。需要记住的是：你的模型应该具有足够多的参数，以防止欠拟合，即模型应避免记忆资源不足。【在容量过大与容量不足之间找到平衡】</p><p>然而整个过程必须评估一些列不同的网络架构，以便为数据找到最佳的模型大小，一般工作流程是开始时选择较小的层和参数，然后逐渐增加层的大小或新层，直到这种增加对验证损失的影响变得很小。</p><p>对电影评论分类做实验。【分别用原始模型、容量更小模型和容量更大模型进行实验】</p><h2 id="添加权重正则化"><a href="#添加权重正则化" class="headerlink" title="添加权重正则化"></a>添加权重正则化</h2><p>这里的简单模型（simple model）指参数值分布的熵更小的模型（或参数更少的模型）因此常见的降低过拟合方法是强制让模型权重只能取较小的值，从而限制模型的复杂度，这使得权重分布更加规则。称为权重正则化（weight regularization）。其实现方法是向网络损失函数中添加较大权重值相关的成本（cost）</p><ul><li>L1 正则化：添加的成本与权重系数的绝对值【权重的L1范数】成正比</li><li>L2正则化：添加的成本与权重系数的平方【权重L2范数】成正比。神经网络中L2正则化也叫权重衰减。</li></ul><h2 id="添加dropout正则化"><a href="#添加dropout正则化" class="headerlink" title="添加dropout正则化"></a>添加dropout正则化</h2><p>dropout是神经网络最有效也是最常用的正则方法之一。对某一层使用dropout，就是在训练过程中随机将该层的一些输出特征舍弃（设置为0）。假设在训练过程中，某一层对给定输入样本的返回值应该是向量[0.2, 0.5, 1.3, 0.8, 1.1]，使用dropout后，该向量会有几个随机元素变为0。dropout的比率是被设为0的特征所占的比例，通常在0.2-0.5范围内。测试时没有单元被舍弃，而该层的输出值需要按dropout比率缩小，因为这是比训练时有更多单元被激活，需要加以平衡。</p><h1 id="机器学习的通用工作流程-suspend"><a href="#机器学习的通用工作流程-suspend" class="headerlink" title="机器学习的通用工作流程[suspend]"></a>机器学习的通用工作流程[suspend]</h1><p>该章介绍用于解决任何机器学习问题的通用模版。</p><h2 id="问题定义，收集数据集"><a href="#问题定义，收集数据集" class="headerlink" title="问题定义，收集数据集"></a>问题定义，收集数据集</h2><ul><li>你输入的数据是什么？你要预测什么？只有拥有可训练的数据，才能预测某件事情。【数据+标注】</li><li>你面对的是什么问题？是二分类、多分类、标量回归、向量回归还是多标签问题。确定问题类型可以更好的选择模型架构等。</li></ul><p>机器学习只能用来记忆训练数据中存在的模式。你只能识出曾经见过的东西。</p><h2 id="选择衡量指标"><a href="#选择衡量指标" class="headerlink" title="选择衡量指标"></a>选择衡量指标</h2><p>要控制一件事情，就需要观察它。要取得成功，必须给出成功的定义。衡量成功的指标将决定你选择损失函数，即模型需要优化什么。</p><p>例如：对于平衡分类问题（每个类别的可能性相同），精度和接受者操作特征曲线下面积（area under the reveiver operating characteristic curve, ROC AUC)是常用的指标。对于排序问题或多标签问题，可以使用平均准确率均值(mean average precision)。自定义衡量成功的指标很常见。可以参考Kaggle网站上的数据科学竞赛，给出了各种问题的评估指标。</p><h2 id="确定评估方法"><a href="#确定评估方法" class="headerlink" title="确定评估方法"></a>确定评估方法</h2><p>一旦明确了目标，必须确定如何衡量当前进展。</p><ul><li>留出验证集。数据量大的时候可以选择这种方法。</li><li>K折交叉验证。如果留出的验证样本太少，无法保证可靠性，可以选择这种方法。</li><li>重复K折验证。如果留出验证的样本量太少，同时模型评估又需要非常准确，可以使用这个方法。</li></ul><h2 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h2><p>首先需要将数据格式化，使其可以输入到机器学习模型中。</p><ul><li>将数据格式化为张量。</li><li>张量取值通常应该缩放为较小的值。</li><li>不同特征具有不同取值范围（异质数据），那么应该将数据标准化。</li><li>可能需要做特征工程，尤其对小数据问题。</li></ul><h2 id="开发比基准更好的模型"><a href="#开发比基准更好的模型" class="headerlink" title="开发比基准更好的模型"></a>开发比基准更好的模型</h2><p>该阶段的目标是统计功效（statistical power)，即开发一个小模型，能够打败纯随机的基准（dumb baseline）。比如，MNIST数字分类的例子中</p><p>如果尝试了多种合理架构后仍无法打败随机基准，那么可能问题的答案不在数据中。记住以下两种假设。</p><ul><li>假设输出是可以根据输出进行预测的。</li><li>假设可用数据包含足够多的信息，足以学习输入和输出之间的关系。</li></ul><p>如果一切顺利，需要选择以下三个关键参数构建第一个工作模型</p><ul><li>最后一层激活。对网络输出进行有效的限制。例如IMDB分类例子在最后一层使用sigmoid，回归则没有使用激活。</li><li>损失函数。匹配你所要解决的问题。例如，IMDB使用binary_crossentropy、回归使用mse等。</li><li>优化配置。使用什么优化器？学习率多少？多数情况下，使用rmsprop机器默认学习率是稳妥的。</li></ul><p>关于损失函数的选择，需要注意：直接优化衡量问题成功的指标不一定是可行的，有时难以转化为损失函数，损失函数需要只有在小批量数据时即可计算，而且必须是可微的。例如广泛使用的分类指标ROC AUC就不能被直接优化。因此在分类任务中，常见的做法是优化ROC AUC的替代指标，比如交叉熵。一般来说你认为交叉熵越小，ROC AUC越大。</p><h2 id="扩大模型规模：开发过拟合的模型"><a href="#扩大模型规模：开发过拟合的模型" class="headerlink" title="扩大模型规模：开发过拟合的模型"></a>扩大模型规模：开发过拟合的模型</h2><p>一旦得到具有统计功效的模型，问题就变成了：模型是否足够强大？是否具有足够多的层和参数来对问题进行建模。例如，只有单个隐藏层且只有两个单元的网络，在MINST问题上具有统计功效，但并不足以很好的解决问题。请记住，机器学习中无处不在的对立是优化和泛化的对立，理想的模型是刚好在欠拟合和过拟合的界线上，在容量不足和容量多大的界线上。</p><p>要搞清楚需要多大的模型，就必须开发一个过拟合模型。</p><ol><li>添加更多的层。</li><li>让每一层变得更大。</li><li>训练更多轮次。</li></ol><p>要始终监控训练损失和验证损失，以及你所关心的指标的训练值和验证值。如果你发现模型在验证数据集上性能开始下降，那么出现了过拟合。</p><h2 id="模型正则化与调节超参数"><a href="#模型正则化与调节超参数" class="headerlink" title="模型正则化与调节超参数"></a>模型正则化与调节超参数</h2><p>这是最耗时间：你将不断调节模型、训练、在验证数据上评估（不是测试数据）。再次调节模型让，然后重复，直到模型打到最佳性能。</p><ul><li>添加dropout。</li><li>尝试不不同的架构：增加或减少层数。</li><li>添加L1 和 / 或 L2正则化。</li><li>尝试不同的超参数，以找到最佳配置。</li><li>反复做特征工程：添加新特征或删除没有信息量的特征。</li></ul><p>每次使用验证过程的反馈来调节模型，都会有相关验证过程信息泄露到模型中。如果只重复几次，那么无关紧要；如果系统性迭代多次，最终会导致模型对验证过程过拟合。即会降低验证过程中的可靠性。</p><p>一旦开发出令人满意的模型配置，就可以在所有可用数据（训练数据+验证数据）上训练最终的生产模型，然后在测试集上最后评估一次。如果测试集上的性能比验证集上差很多，那么可能意味你的验证流程不可靠，或者在调节模型参数时验证机数据上出现来过拟合。这种情况下可能需要更换更可靠的评估方法，比如重复的K折验证。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><ul><li>定义问题与要训练的数据。收集这些数据，有需要的应该标签进行数据标注。</li><li>选择衡量问题成功的指标。在验证数据上监控哪些指标。</li><li>确定评估方法：留出验证？K折验证？你应该将哪一部分数据用于验证。</li><li>开发第一个比基准更好的模型，即具有统计功效的模型。</li><li>开发过拟合模型。</li><li>基于模型在验证数据上的性能来进行模型正则化与调节超参数。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Part-1-深度学习基础&quot;&gt;&lt;a href=&quot;#Part-1-深度学习基础&quot; class=&quot;headerlink&quot; title=&quot;Part 1 深度学习基础&quot;&gt;&lt;/a&gt;Part 1 深度学习基础&lt;/h1&gt;&lt;h1 id=&quot;简单概述&quot;&gt;&lt;a href=&quot;#简单概述&quot; class=&quot;headerlink&quot; title=&quot;简单概述&quot;&gt;&lt;/a&gt;简单概述&lt;/h1&gt;&lt;p&gt;深度学习应用于计算机视觉的两个关键思想：卷积神经网络和反向传播。&lt;/p&gt;
&lt;p&gt;总的来说，以下三种力量在推动机器学习。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;硬件&lt;/p&gt;
&lt;p&gt; CPU以及GPU上的大量投入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据集和基准&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;算法上的改进&lt;/p&gt;
&lt;p&gt; 在2009-2010年出现了几个简单但很重要的算法改进，可以实现更好的梯度传播。以及更先进的有助于梯度传播的方法：批标准化，残差连接和深度可分离卷积。&lt;/p&gt;
&lt;p&gt; 更好的神经层激活函数&lt;/p&gt;
&lt;p&gt; 更好的权重初始化方案&lt;/p&gt;
&lt;p&gt; 更好的优化方案&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Machine-Learning" scheme="https://superming.life/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Programming Assignment:Deques and Randomized Queues</title>
    <link href="https://superming.life/2020/11/16/Programming%20Assignment%20Deques%20and%20Randomized%20Queues/"/>
    <id>https://superming.life/2020/11/16/Programming%20Assignment%20Deques%20and%20Randomized%20Queues/</id>
    <published>2020-11-16T01:12:52.000Z</published>
    <updated>2020-11-16T01:54:16.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Programming-Assignment-Deques-and-Randomized-Queues"><a href="#Programming-Assignment-Deques-and-Randomized-Queues" class="headerlink" title="Programming Assignment: Deques and Randomized Queues"></a>Programming Assignment: Deques and Randomized Queues</h1><p>Assignment Link: <a href="https://coursera.cs.princeton.edu/algs4/assignments/queues/specification.php" target="_blank" rel="noopener">https://coursera.cs.princeton.edu/algs4/assignments/queues/specification.php</a></p><hr><p><strong><u>Write a generic data type for a deque and a randomized queue.</u></strong> </p><p><strong>The goal of this assignment is to implement elementary data structures using arrays and linked lists, and to introduce you to generics and iterators.</strong></p><blockquote><p>目标1: Linked lists和arrays的应用</p><p>目标2: 范型和迭代器的应用</p></blockquote><a id="more"></a><h2 id="Dequeue"><a href="#Dequeue" class="headerlink" title="Dequeue"></a>Dequeue</h2><p><strong>Dequeue.</strong> A <em>double-ended queue</em> or <em>deque</em> (pronounced “deck”) is a generalization of a stack and a queue that supports adding and removing items from either the front or the back of the data structure. Create a generic data type <code>Deque</code> that implements the following API:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Deque</span>&lt;<span class="title">Item</span>&gt; <span class="keyword">implements</span> <span class="title">Iterable</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// construct an empty deque</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Deque</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// is the deque empty?</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// return the number of items on the deque</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// add the item to the front</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(Item item)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// add the item to the back</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(Item item)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// remove and return the item from the front</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> Item <span class="title">removeFirst</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// remove and return the item from the back</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> Item <span class="title">removeLast</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// return an iterator over items in order from front to back</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> Iterator&lt;Item&gt; <span class="title">iterator</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// unit testing (required)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="function">&#125;</span></span></pre></td></tr></table></figure><p><em>Corner cases.</em> Throw the specified exception for the following corner cases:</p><ul><li>Throw an <code>IllegalArgumentException</code> if the client calls either <code>addFirst()</code> or <code>addLast()</code> with a <code>null</code> argument.</li><li>Throw a <code>java.util.NoSuchElementException</code> if the client calls either <code>removeFirst()</code> or <code>removeLast</code> when the deque is empty.</li><li>Throw a <code>java.util.NoSuchElementException</code> if the client calls the <code>next()</code> method in the iterator when there are no more items to return.</li><li>Throw an <code>UnsupportedOperationException</code> if the client calls the <code>remove()</code> method in the iterator.</li></ul><p><em>Unit testing.</em> Your <code>main()</code> method must call directly every public constructor and method to help verify that they work as prescribed (e.g., by printing results to standard output).</p><p><em>Performance requirements.</em> <u>Your deque implementation must support each deque operation (including construction) in <em>constant worst-case time</em>.</u> A deque containing <em>n</em> items must use at most 48<em>n</em> + 192 bytes of memory. Additionally, your iterator implementation must support each operation (including construction) in <em>constant worst-case time</em>.</p><p><strong>Implementation</strong></p><blockquote><p>双端队列使用链表更为合适。且题目要求使用常数时间。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* *****************************************************************************</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Name: Alen Zhang</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Date: 2020.11.15</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Description: Deque implementation.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> **************************************************************************** */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.NoSuchElementException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Deque</span>&lt;<span class="title">Item</span>&gt; <span class="keyword">implements</span> <span class="title">Iterable</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> Node first;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> Node last;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        Item item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        Node next;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        Node pre;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// construct an empty deque</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Deque</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// is the deque empty?</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> (<span class="keyword">this</span>.size == <span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// return the number of items on the deque</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.size;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// add the item to the front</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(Item item)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (item == <span class="keyword">null</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"item is null"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        Node newNode = <span class="keyword">new</span> Node();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        newNode.item = item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">            first = newNode;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            last = newNode;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">            newNode.next = first;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">            first.pre = newNode;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">            first = newNode;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">            newNode.pre = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.size++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// add the item to the back</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(Item item)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (item == <span class="keyword">null</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"item is null"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        Node newNode = <span class="keyword">new</span> Node();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">        newNode.item = item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">            first = newNode;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">            last = newNode;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">            last.next = newNode;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">            newNode.pre = last;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">            last = newNode;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">            newNode.next = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">        size++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// remove and return the item from the front</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Item <span class="title">removeFirst</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException(<span class="string">"Deque is empty"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        Item returnItem = first.item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == <span class="number">1</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">            first = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">            last = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">            first = first.next;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">            first.pre = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">        size--;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> returnItem;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// remove and return the item from the back</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Item <span class="title">removeLast</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException(<span class="string">"Deque is empty"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">        Item returnItem = last.item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == <span class="number">1</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line">            first = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">            last = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">            last = last.pre;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">            last.next = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">        size--;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> returnItem;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// return an iterator over items in order from front to back</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Iterator&lt;Item&gt; <span class="title">iterator</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ListIterator();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ListIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">private</span> Node cur = first;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">        <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> (cur != <span class="keyword">null</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line">        <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> Item <span class="title">next</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (!hasNext())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException(<span class="string">"No more Objects in the deque"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">134</span></pre></td><td class="code"><pre><span class="line">            Item returnItem = cur.item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">135</span></pre></td><td class="code"><pre><span class="line">            cur = cur.next;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">136</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">137</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> returnItem;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">138</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">139</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">140</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">141</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">142</span></pre></td><td class="code"><pre><span class="line">        Deque&lt;String&gt; deque = <span class="keyword">new</span> Deque&lt;String&gt;();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">143</span></pre></td><td class="code"><pre><span class="line">        System.out.println(deque.size());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">144</span></pre></td><td class="code"><pre><span class="line">        deque.addFirst(<span class="string">"1"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">145</span></pre></td><td class="code"><pre><span class="line">        deque.addFirst(<span class="string">"2"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">146</span></pre></td><td class="code"><pre><span class="line">        deque.addFirst(<span class="string">"3"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">147</span></pre></td><td class="code"><pre><span class="line">        deque.addFirst(<span class="string">"4"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">148</span></pre></td><td class="code"><pre><span class="line">        deque.addLast(<span class="string">"5"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">149</span></pre></td><td class="code"><pre><span class="line">        System.out.println(deque.size());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">150</span></pre></td><td class="code"><pre><span class="line">        Iterator&lt;String&gt; iter = deque.iterator();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">151</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (iter.hasNext()) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">152</span></pre></td><td class="code"><pre><span class="line">            System.out.println(iter.next());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">153</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">154</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">155</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="Randomized-queue"><a href="#Randomized-queue" class="headerlink" title="Randomized queue"></a>Randomized queue</h2><p><strong>Randomized queue.</strong> A <em>randomized queue</em> is similar to a stack or queue, except that the item removed is chosen uniformly at random among items in the data structure. Create a generic data type <code>RandomizedQueue</code> that implements the following API:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomizedQueue</span>&lt;<span class="title">Item</span>&gt; <span class="keyword">implements</span> <span class="title">Iterable</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// construct an empty randomized queue</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RandomizedQueue</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// is the randomized queue empty?</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// return the number of items on the randomized queue</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// add the item</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(Item item)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// remove and return a random item</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> Item <span class="title">dequeue</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// return a random item (but do not remove it)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> Item <span class="title">sample</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// return an independent iterator over items in random order</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> Iterator&lt;Item&gt; <span class="title">iterator</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="comment">// unit testing (required)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="function">&#125;</span></span></pre></td></tr></table></figure><p><em>Iterator</em>. Each iterator must return the items in uniformly random order. The order of two or more iterators to the same randomized queue must be <em>mutually independent</em>; each iterator must maintain its own random order.</p><p><em>Corner cases.</em> Throw the specified exception for the following corner cases:</p><ul><li>Throw an <code>IllegalArgumentException</code> if the client calls <code>enqueue()</code> with a <code>null</code> argument.</li><li>Throw a <code>java.util.NoSuchElementException</code> if the client calls either <code>sample()</code> or <code>dequeue()</code> when the randomized queue is empty.</li><li>Throw a <code>java.util.NoSuchElementException</code> if the client calls the <code>next()</code> method in the iterator when there are no more items to return.</li><li>Throw an <code>UnsupportedOperationException</code> if the client calls the <code>remove()</code> method in the iterator.</li></ul><p><em>Unit testing.</em> Your <code>main()</code> method must call directly every public constructor and method to verify that they work as prescribed (e.g., by printing results to standard output).</p><p><em>Performance requirements.</em> <u>Your randomized queue implementation must support each randomized queue operation</u> (besides creating an iterator) in <em>constant amortized time</em>. That is, any intermixed sequence of <em>m</em> randomized queue operations (starting from an empty queue) must take at most <em>cm</em> steps in the worst case, for some constant <em>c</em>. A randomized queue containing <em>n</em> items must use at most 48<em>n</em> + 192 bytes of memory. Additionally, <u>your iterator implementation must support operations <code>next()</code> and <code>hasNext()</code> in <em>constant worst-case time</em>; and construction in <em>linear time</em>;</u> you may (and will need to) use a linear amount of extra memory per iterator.</p><p><strong>Implementation</strong></p><blockquote><p>迭代器使用常数时间，Array满足要求。本题重点是每题元素是随机的。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* *****************************************************************************</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Name: Alen Zhang</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Date: 2020.11.15</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Description: RandomizedQueue implementation</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> **************************************************************************** */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> edu.princeton.cs.algs4.StdRandom;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.NoSuchElementException;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomizedQueue</span>&lt;<span class="title">Item</span>&gt; <span class="keyword">implements</span> <span class="title">Iterable</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> Item[] queue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// construct an empty randomized queue</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RandomizedQueue</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        queue = (Item[]) <span class="keyword">new</span> Object[<span class="number">1</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        size = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// is the randomized queue empty?</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> (size == <span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// return the number of items on the randomized queue</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> size;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// add the item</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(Item item)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (item == <span class="keyword">null</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"Item is null"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == queue.length) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            Item[] resizedQueue = (Item[]) <span class="keyword">new</span> Object[queue.length * <span class="number">2</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; queue.length; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">                resizedQueue[i] = queue[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            queue = resizedQueue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        queue[size++] = item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Item <span class="title">dequeue</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException(<span class="string">"The RandomizeQueue is empty"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> seed = StdRandom.uniform(<span class="number">0</span>, size);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        Item returnItem = queue[seed];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">        size--;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        queue[seed] = queue[size];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        queue[size] = <span class="keyword">null</span>;<span class="comment">// Avoid loitering</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (queue.length &gt; <span class="number">4</span> &amp;&amp; size &lt; queue.length / <span class="number">4</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">            Item[] resizedQueue = (Item[]) <span class="keyword">new</span> Object[queue.length / <span class="number">2</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">                resizedQueue[i] = queue[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">            queue = resizedQueue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> returnItem;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// return a random item (but do not remove it)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Item <span class="title">sample</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException(<span class="string">"The RandomizeQueue is empty"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> queue[StdRandom.uniform(<span class="number">0</span>, size)];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// return an independent iterator over items in random order</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Iterator&lt;Item&gt; <span class="title">iterator</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RandomIterator(queue, size);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">private</span> Item[] iteratorQueue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> iteratorIndex = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">RandomIterator</span><span class="params">(Item[] queue, <span class="keyword">int</span> size)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">            iteratorQueue = (Item[]) <span class="keyword">new</span> Object[size];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; iteratorQueue.length; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">                iteratorQueue[i] = queue[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; iteratorQueue.length; j++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">int</span> swapIndex = StdRandom.uniform(j + <span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">                Item temp = iteratorQueue[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">                iteratorQueue[j] = iteratorQueue[swapIndex];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">                iteratorQueue[swapIndex] = temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">        <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> (iteratorIndex &lt; iteratorQueue.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">        <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> Item <span class="title">next</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (!hasNext()) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException(<span class="string">"Queue is empty"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">            Item item = iteratorQueue[iteratorIndex];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">            iteratorIndex++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">        RandomizedQueue&lt;String&gt; queue = <span class="keyword">new</span> RandomizedQueue&lt;&gt;();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">        queue.enqueue(<span class="string">"1"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">        queue.enqueue(<span class="string">"2"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">        queue.enqueue(<span class="string">"3"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">        queue.enqueue(<span class="string">"4"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">        queue.enqueue(<span class="string">"5"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">        queue.dequeue();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">        Iterator&lt;String&gt; iterO = queue.iterator();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">        Iterator&lt;String&gt; iter1 = queue.iterator();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (iterO.hasNext()) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line">            System.out.println(iterO.next());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">        System.out.println();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (iter1.hasNext()) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line">            System.out.println(iter1.next());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">134</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">135</span></pre></td><td class="code"><pre><span class="line">        System.out.println();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">136</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">137</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h2><p><strong>Client.</strong> Write a client program <code>Permutation.java</code> that takes an integer <em>k</em> as a command-line argument; reads a sequence of strings from standard input using <code>StdIn.readString()</code>; and prints exactly <em>k</em> of them, uniformly at random. Print each item from the sequence at most once.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~/Desktop/queues&gt; cat distinct.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">A B C D E F G H I</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">~/Desktop/queues&gt; java Permutation 3 &lt; distinct.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">G</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">~/Desktop/queues&gt; java Permutation 3 &lt; distinct.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">F</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">G</span></pre></td></tr></table></figure><p>Your program must implement the following API:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Permutation</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function">&#125;</span></span></pre></td></tr></table></figure><p><em>Command-line argument.</em> You may assume that 0 ≤ <em>k</em> ≤ <em>n</em>, where <em>n</em> is the number of string on standard input. Note that you are not given <em>n</em>.</p><p><em>Performance requirements.</em> The running time of <code>Permutation</code> must be linear in the size of the input. You may use only a constant amount of memory plus either one <code>Deque</code> or <code>RandomizedQueue</code> object of maximum size at most <em>n</em>. (For an extra challenge and a small amount of extra credit, use only one <code>Deque</code> or <code>RandomizedQueue</code> object of maximum size at most <em>k</em>.)</p><p><strong>Implementation</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* *****************************************************************************</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Name: Alen Zhang</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Date: 2020.11.15</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *  Description: </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> **************************************************************************** */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> edu.princeton.cs.algs4.StdIn;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Permutation</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        RandomizedQueue&lt;String&gt; queue = <span class="keyword">new</span> RandomizedQueue&lt;String&gt;();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> size = Integer.parseInt(args[<span class="number">0</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (!StdIn.isEmpty()) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            queue.enqueue(StdIn.readString());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (size &gt; <span class="number">0</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            System.out.println(queue.dequeue());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            size--;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Programming-Assignment-Deques-and-Randomized-Queues&quot;&gt;&lt;a href=&quot;#Programming-Assignment-Deques-and-Randomized-Queues&quot; class=&quot;headerlink&quot; title=&quot;Programming Assignment: Deques and Randomized Queues&quot;&gt;&lt;/a&gt;Programming Assignment: Deques and Randomized Queues&lt;/h1&gt;&lt;p&gt;Assignment Link: &lt;a href=&quot;https://coursera.cs.princeton.edu/algs4/assignments/queues/specification.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://coursera.cs.princeton.edu/algs4/assignments/queues/specification.php&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;Write a generic data type for a deque and a randomized queue.&lt;/u&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The goal of this assignment is to implement elementary data structures using arrays and linked lists, and to introduce you to generics and iterators.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目标1: Linked lists和arrays的应用&lt;/p&gt;
&lt;p&gt;目标2: 范型和迭代器的应用&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Algorithms" scheme="https://superming.life/tags/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms，Part I：Stacks and Queues</title>
    <link href="https://superming.life/2020/11/15/Algorithms-StacksandQueues/"/>
    <id>https://superming.life/2020/11/15/Algorithms-StacksandQueues/</id>
    <published>2020-11-15T13:10:55.000Z</published>
    <updated>2020-11-15T15:05:03.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Week-2-Stacks-and-Queues"><a href="#Week-2-Stacks-and-Queues" class="headerlink" title="Week 2-Stacks and Queues"></a>Week 2-Stacks and Queues</h1><p><strong>Generics.</strong> </p><p>An essential characteristic of collection ADTs is that we should be able to use them for any type of data. A specific Java mechanism known as generics enables this capability. The notation <Item> after the class name in each of our APIs defines the name Item as a type parameter, a symbolic placeholder for some concrete type to be used by the client. You can read Stack<Item> as “stack of items.” For example, you can write code such as</Item></Item></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Stack&lt;String&gt; stack = <span class="keyword">new</span> Stack&lt;String&gt;();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">stack.push(<span class="string">"Test"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">String next = stack.pop();</span></pre></td></tr></table></figure><p>to use a stack for String objects.</p><p>Without generics, we would have to define different APIs for each type of data we might need to collect ; with generics, we can use one API for all types of data, even types that are implemented in the future. Generics also lead to clear client code that is easy to understand and debug.</p><a id="more"></a><h1 id="Stacks"><a href="#Stacks" class="headerlink" title="Stacks"></a>Stacks</h1><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-13_at_7.03.48_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-13_at_7.03.48_PM.png"></p><p><strong>Subtext: Modular programming</strong></p><p>Completely separate the interface and the implementation.</p><p><strong>Benefits.</strong></p><ul><li>Client can’t know details of implementation ⇒ client has many implementation from which to choose.</li><li>Implementation can’t know details of client needs.</li><li>Design: create modular, reusable libraries.</li><li>Performance: use optimized implementation where it matters.</li></ul><p><strong>Client</strong>: program using operations defined in interface.</p><p><strong>Implementation</strong>: actual code implementation operations.</p><p><strong>Interface</strong>: description of data type, basic operations.</p><p><strong>Stack API</strong></p><p>Warmup API. Stack of strings data type.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StackOfStrings</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">StackOfStrings</span>()    //<span class="title">create</span> <span class="title">an</span> <span class="title">empty</span> <span class="title">stack</span>.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">void</span> <span class="title">push</span>(<span class="title">String</span> <span class="title">item</span>)     //<span class="title">insert</span> <span class="title">a</span> <span class="title">new</span> <span class="title">string</span> <span class="title">onto</span> <span class="title">stack</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">String</span> <span class="title">pop</span>()    //<span class="title">remove</span> <span class="title">and</span> <span class="title">retrun</span> <span class="title">string</span> <span class="title">most</span> <span class="title">recently</span> <span class="title">added</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">boolean</span> <span class="title">isEmpty</span>()     //<span class="title">is</span> <span class="title">the</span> <span class="title">stack</span> <span class="title">empty</span>?</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">int</span> <span class="title">size</span>()     //<span class="title">number</span> <span class="title">of</span> <span class="title">strings</span> <span class="title">on</span> <span class="title">the</span> <span class="title">stack</span></span></span></pre></td></tr></table></figure><p>Warmup client.   Reverse sequence of strings from standard input.</p><p><strong>Stack test client</strong></p><p>Read string from standard input.</p><ul><li>If string equals “-“, pop string from stack and point.</li><li>Otherwise, push string onto stack.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function">Public <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">StackOfString stack = <span class="keyword">new</span> StackOfStrings();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(!StdIn.isEmpty())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">String s = StdIn.readString();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s.equals(<span class="string">"-"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">StdOut.print(stack.pop());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">stack.push(s);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>Stack: Linked-list representation</strong></p><p>Maintain pointer to first node in a linked list; insert / remove from front.</p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-13_at_7.43.15_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-13_at_7.43.15_PM.png"></p><p><strong>Stack pop: Linked-list representation</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_11.32.40_AM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_11.32.40_AM.png"></p><p><strong>Stack push: linked-list implementation</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-13_at_7.48.47_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-13_at_7.48.47_PM.png"></p><p><strong>Stack: linked-list implementation in Java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedStackOfStrings</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Node first = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">String item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Node next;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> fisrt == <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(String item)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Node oldfirst = first;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">first = <span class="keyword">new</span> Node();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">first.item = item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">first.next = oldfirst;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">pop</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">String item = first.item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">first = first.next;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>Stack: linked-list implementation performance</strong></p><p>Proposition.   </p><ol><li>Every operation takes constant time in the worst case.</li><li>A stack with N items uses ~ 40N bytes.</li></ol><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-15_at_4.40.38_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-15_at_4.40.38_PM.png"></p><p>Remark. This accounts for the memory for the stack. (but not the memory for strings themselves, which the client owns).</p><p><strong>Stack: Array implementation</strong></p><p>Array implementation of stack.</p><ul><li>Use array s[] to store N item on stack.</li><li>push(): add new item at s[N].</li><li>pop(): remove item from s[N - 1].</li></ul><p><strong>Defect</strong>: Stack overflows when N exceeds capacity. [stay tuned]</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FixedCapacityStackOfStrings</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String[] s;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> N = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FixedCapacityStackOfStrings</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">s = <span class="keyword">new</span> String[capacity];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> N == <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(String item)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">s[N++] = item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">pop</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> s[--N];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_9.27.40_AM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_9.27.40_AM.png"></p><h1 id="Resizing-arrays"><a href="#Resizing-arrays" class="headerlink" title="Resizing arrays"></a>Resizing arrays</h1><p><strong>Stack: resizing-array implementation</strong></p><p><strong>Q: How to grow and shrink array?</strong></p><p>First try.</p><ul><li>push(): increase size of array s[] by 1.</li><li>pop(): decrease size of array s[] by 1.</li></ul><p>Too expensive.</p><ul><li>Need to copy all items to a new array.</li><li>Inserting first N items takes time proportional to 1 + 2 + … + N ~ N ^ 2 / 2.[infeasible for large N]</li></ul><p>Challenge. Ensure that array resizing happens infrequently.</p><p><strong>Improvements.</strong></p><p><strong>Q: How to grow array?</strong></p><p>A: If array if full, create a new array of twice the size, and copy items.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ResizingArrayStackOfString</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">s = <span class="keyword">new</span> String[<span class="number">1</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span> <span class="params">(String item)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(N == s.length)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">resize(<span class="number">2</span> * s.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">s[N++] = item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resize</span> <span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">String[] copy = <span class="keyword">new</span> String[capacity];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">copy[i] = s[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">s = copy;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>Consequence</strong>: Inserting first N items takes time proportional to N(not N^2).</p><p><strong>Q: How to shrink array?</strong></p><p><strong>First try.</strong></p><ul><li>push()r: double size of array s[] when array is full.</li><li>pop(): halve size of array s[] when array is one-half full.</li></ul><p>Too expensive in worst case.</p><ul><li>Consider push-pop-push-pop… sequence when array is full.</li><li>Each operation takes time proportional to N.</li></ul><p><strong>Efficient solution.</strong></p><ul><li>push():  double size of array s[] when array is full.</li><li>pop():  halve size of array s[] when array if one-quarter full.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">pop</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">String item = s[--N];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">s[N] = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(N &gt; <span class="number">0</span> &amp;&amp; N == s.length / <span class="number">4</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">resize(s.length / <span class="number">2</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>Invariant.  Array is between 25% full and 100% full.</p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_11.12.12_AM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_11.12.12_AM.png"></p><p><strong>Stack resizing-array implementation: performance</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_11.19.54_AM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_11.19.54_AM.png"></p><p><strong>Stack resizing-array implementation: memory usage</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_11.20.31_AM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_11.20.31_AM.png"></p><p><strong>Stack implementations: resizing array vs linked list</strong></p><p>Tradeoffs. </p><p>Can implement a stack with either resizing array or linked list; client can use interchangeably. Which one is better?</p><p><strong>Linked-List implementation</strong></p><ul><li>Every operation takes <strong>constant</strong> time in the <strong>worst case.</strong></li><li>Uses extra time and space to deal with the links.</li></ul><p><strong>Resizing-array implementation</strong></p><ul><li>Every operation takes constant <strong>amortized</strong> [摊销] time. [resize the array]</li><li>Less wasted space.</li></ul><p>Quiz:</p><p>Suppose that, starting from an empty data structure, we perform n push operations in our resizing-ar</p><p>ray implementation of a stack. How many times is the resize() method called?</p><p><strong>logarithmic [对数]</strong></p><p>Others:</p><p><strong>Loitering</strong>.</p><p>Java’s garbage collection policy is to reclaim the memory associated with any objects that no longer be accessed. Which means an object can’t be garbage as long as it’s reachable.    If you simply change your index with –N but do not nullify a[N], you will keep a reference to that object, preventing its garbage collection even if the client code does not reference that object any longer.</p><h1 id="Queues"><a href="#Queues" class="headerlink" title="Queues"></a>Queues</h1><p><strong>Queue API</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueueOfStrings</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">QueueOfStrings</span>()    //<span class="title">create</span> <span class="title">an</span> <span class="title">empty</span> <span class="title">queue</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">void</span> <span class="title">enqueue</span>(<span class="title">String</span> <span class="title">item</span>)  //<span class="title">insert</span> <span class="title">a</span> <span class="title">new</span> <span class="title">string</span> <span class="title">onto</span> <span class="title">queue</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">String</span> <span class="title">dequeue</span>()  //<span class="title">remove</span> <span class="title">and</span> <span class="title">return</span> <span class="title">the</span> <span class="title">String</span> <span class="title">least</span> <span class="title">recently</span> <span class="title">added</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">boolean</span> <span class="title">isEmpty</span>()  //<span class="title">is</span> <span class="title">the</span> <span class="title">queue</span> <span class="title">empty</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="title">int</span> <span class="title">size</span>()   //<span class="title">number</span> <span class="title">of</span> <span class="title">strings</span> <span class="title">on</span> <span class="title">the</span> <span class="title">queue</span></span></span></pre></td></tr></table></figure><p><strong>Linked-list representation</strong></p><p>Maintain pointer to first and last nodes in a linked list;</p><p>insert / remove from opposite ends.</p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_12.12.10_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_12.12.10_PM.png"></p><p><strong>Queue dequeue: linked-list implementation</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_12.13.02_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_12.13.02_PM.png"></p><p>Remark. Identical code to linked-list stack pop()</p><p><strong>Queue enqueue: linked-list implementation</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_12.15.36_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_12.15.36_PM.png"></p><p>Java implementation</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedQueueOfStrings</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Node first, last;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* same as in StackOfString */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> first == <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(String item)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">Node oldlast = last;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">last = <span class="keyword">new</span> Node();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">last.item = item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">last.next = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isEmpty())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">first = last;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">oldlast.next = last;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">String item = first.item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">first = first.next;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isEmpty())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">last = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>Queue: resizing array implementation</strong></p><p>Array implementation of a queue.</p><ul><li>Use array q[] to store items in queue.</li><li>enqueue(): add new item at q[tail].</li><li>dequeue(): remove item from q[head].</li><li>Update head and tail modulo the capacity.</li><li>Add resizing array.</li></ul><p><strong>Quiz:</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_12.42.16_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_12.42.16_PM.png"></p><h1 id="Generics"><a href="#Generics" class="headerlink" title="Generics"></a><strong>Generics</strong></h1><p><strong>Parameterized Stack</strong></p><p>Situation:</p><p>We implemented: StackOfStrings.</p><p>We also want: StackOfURLs, StackOfInts. StackOfVans, …</p><p>Attempt 1. Implement a separate stack class for each type.</p><ul><li>Rewrite code is tedious and error-prone.</li><li>Maintaining cut-and-pasted code is tedious and error-prone.</li></ul><p>Attempt 2. Implement a stack with items of type Object.</p><ul><li>Casting is required in client. [ugly code]</li><li>Casting is error-prone: run-time error if types <strong>mismatch</strong>.</li></ul><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_2.15.37_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_2.15.37_PM.png"></p><p>Attempt 3. Java generics.</p><ul><li>Avoid casting in client.</li><li>Discover type mismatch errors at compile-time instead of run-time.</li></ul><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_2.14.56_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_2.14.56_PM.png"></p><p>Guiding principles. Welcome compile-time errors; avoid run-time errors.</p><p><strong>Generic stack: linked-list implementation</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_2.17.23_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_2.17.23_PM.png"></p><p><strong>Generic stack: array implementation</strong></p><p><img src="https://superming.life/2020/11/15/Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_2.17.51_PM.png" alt="Algorithms-StacksandQueues/Screen_Shot_2020-11-14_at_2.17.51_PM.png"></p><p><strong>Generic data types</strong></p><p>Q: what to do about primitive types?</p><p>Wrapper type.</p><ul><li>Each primitive type has a <strong>wrapper</strong> object type.[ Integer is wrapper type for int ]</li></ul><p>Autoboxing.</p><p>Automatic cast between a primitive type and its wrapper.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Stack&lt;Integer&gt; s = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">s.push(<span class="number">17</span>);  <span class="comment">//s.push(Integer.valueOf(17);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = s.pop();  <span class="comment">//int a = s.pop().intValue();</span></span></pre></td></tr></table></figure><p>Bottom line. Client code can use generic stack for any type of data.</p><h1 id="Iterators"><a href="#Iterators" class="headerlink" title="Iterators"></a>Iterators</h1><p><strong>Design challenge</strong>. Support iteration over stack items by client, without revealing the internal representation of the stack.</p><p>Java solution. Make stack implement the java.lang.Iterable interface</p><p>Q. What’s an Iterable?</p><p>A. Has a method that returns an Iterator.</p><p>A. Has method hasNext() and next().</p><p>Q. Why make data structures Iterable?</p><p>A. <strong>Java support elegant client code.</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Iterable interface</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iterable</span>&lt;<span class="title">Item</span>&gt;</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function">Iterator&lt;Item&gt; <span class="title">iterator</span><span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Iterator interface</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iterator</span>&lt;<span class="title">Item</span>&gt;</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">****<span class="function">Item <span class="title">next</span><span class="params">()</span></span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span></span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//equivalent code(long hand)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Iterator&lt;String&gt; i = stack.iterator();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(i.hasNext())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">String s = i.next();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">StdOut.println(s);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//"foreach"statement(shorthand)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(String s : stack)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">StdOut.println(s);</span></pre></td></tr></table></figure><p>关于Java的迭代器：&lt;Java 编程思想 P226&gt;</p><p>任何容器类，必须要有某种方式可以插入元素并将他再次返回。毕竟，持有事物是容器最基本的工作。对于List，add() 是插入元素的方法之一，而get()是取出元素方式之一。</p><p>如何才能不重写代码，就可以应用于不同该类型的容器？</p><p>迭代器（设计模式），迭代器是一个对象，它的工作是遍历并选择序列中的对象，而客户端程序员不必知道或关心该序列底层的结构。此外，迭代器通常被成为“轻量级对象”，因为创建他的代价小。</p><p><strong>Stack iterator: Linked-list implementation</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stack</span>&lt;<span class="title">Item</span>&gt; <span class="keyword">implements</span> <span class="title">Iterable</span>&lt;<span class="title">Item</span>&gt;</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ListIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">Item</span>&gt;</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Node current = first;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>&#123;  <span class="keyword">return</span> current != <span class="keyword">null</span>;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// throw UnsupportedozperationException</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span></span>&#123;  <span class="comment">/* not supported */</span>&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// throw NoSuchElementException if no more iterms in iteration</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Item <span class="title">next</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">Item item = current.item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">current = current.next;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> item;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>Stack iterator: Array implementation</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stack</span>&lt;<span class="title">Item</span>&gt; <span class="keyword">implements</span> <span class="title">Iterable</span>&lt;<span class="title">Item</span>&gt;</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Iterator&lt;Item&gt; <span class="title">iterator</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ReverseArrayIterator();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ReverseArrayIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">Item</span>&gt;</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> i = N;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;  <span class="keyword">return</span> i &gt; <span class="number">0</span>;  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span>  </span>&#123; <span class="comment">/* not support */</span> &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Item <span class="title">next</span><span class="params">()</span>    </span>&#123;  <span class="keyword">return</span> s[--i];  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong><em>It free us to switch to a totally different representation without having to change any client code. More important, taking the client’s point of view, it allows clients to use iteration without having to know any details of the class implementation.</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Week-2-Stacks-and-Queues&quot;&gt;&lt;a href=&quot;#Week-2-Stacks-and-Queues&quot; class=&quot;headerlink&quot; title=&quot;Week 2-Stacks and Queues&quot;&gt;&lt;/a&gt;Week 2-Stacks and Queues&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Generics.&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;An essential characteristic of collection ADTs is that we should be able to use them for any type of data. A specific Java mechanism known as generics enables this capability. The notation &lt;Item&gt; after the class name in each of our APIs defines the name Item as a type parameter, a symbolic placeholder for some concrete type to be used by the client. You can read Stack&lt;Item&gt; as “stack of items.” For example, you can write code such as&lt;/Item&gt;&lt;/Item&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stack&amp;lt;String&amp;gt; stack = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Stack&amp;lt;String&amp;gt;();&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stack.push(&lt;span class=&quot;string&quot;&gt;&quot;Test&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String next = stack.pop();&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;to use a stack for String objects.&lt;/p&gt;
&lt;p&gt;Without generics, we would have to define different APIs for each type of data we might need to collect ; with generics, we can use one API for all types of data, even types that are implemented in the future. Generics also lead to clear client code that is easy to understand and debug.&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Algorithms" scheme="https://superming.life/tags/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title>2001太空漫游</title>
    <link href="https://superming.life/2020/11/06/2001%E5%A4%AA%E7%A9%BA%E6%BC%AB%E6%B8%B8/"/>
    <id>https://superming.life/2020/11/06/2001%E5%A4%AA%E7%A9%BA%E6%BC%AB%E6%B8%B8/</id>
    <published>2020-11-06T09:11:17.000Z</published>
    <updated>2020-11-06T09:16:09.232Z</updated>
    
    <content type="html"><![CDATA[<p><strong>2001太空漫游的首版序，太喜欢这段话了。</strong></p><p>今天每一个活着的人背后，都立着三十个灵魂 — 三十比一。正是死去的人与活人的比例。开天辟地以来，在地球上活过的人大约总共一千亿。</p><p>这是个有趣的数字，因为说巧不巧，我们所在的这个宇宙，也就是这个银河系，也有大约一千亿颗星星。因此，每一个在地球上活过的人，在这个宇宙里都有一颗对应的星星在闪耀。</p><p>每颗相对应的星星，都是一颗太阳。比起那颗又小又近，我们称之为太阳的星星来说，其他这些星星都远为灿烂、明亮。而且，外层空间这些太阳，许多都有不止一颗的行星在环绕运转。因此我们几乎可以确定：太空中有足够的土地，可以让包括第一位猿人在内的每一个人，都拥有他专属的一颗星 — 是天堂还是地狱先不论。</p><p>这些潜在的天堂和地狱，到底有多少已经有生命居住其中，又是些什么样的生命，我们无从猜测 — 其中离我们最近的，也要比火星或金星远上一百万倍，而火星或金星仍是下一个世代的遥远目标。不过，距离的障碍正在逐渐消失，总有一天，我们会在星海中和我们的同类，或是我们的主宰相遇。</p><p>人类花了很长时间才面对这个可能，甚至，有人到今天还希望这一天永远不会到来。然而，越来越多人在问：<strong>“既然我们自己都即将要探索太空了，这样的会面为什么还没有发生呢？“</strong></p><p>真的，为什么还没有发生呢？针对这个合理的问题，这里有一个可能的答案，不过，请记住一点，这纯属虚构。</p><p><strong>至于真相，一定更在意料之外</strong>  –  自古皆然。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;2001太空漫游的首版序，太喜欢这段话了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;今天每一个活着的人背后，都立着三十个灵魂 — 三十比一。正是死去的人与活人的比例。开天辟地以来，在地球上活过的人大约总共一千亿。&lt;/p&gt;
&lt;p&gt;这是个有趣的数字，因为说巧不巧，我们所
      
    
    </summary>
    
    
    
      <category term="reading" scheme="https://superming.life/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>Machine-Learning Andrew Ng</title>
    <link href="https://superming.life/2020/11/01/MachineLearning-Week1/"/>
    <id>https://superming.life/2020/11/01/MachineLearning-Week1/</id>
    <published>2020-11-01T04:10:55.000Z</published>
    <updated>2020-11-15T13:23:06.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Machine-Learning-Week-1"><a href="#Machine-Learning-Week-1" class="headerlink" title="Machine-Learning - Week 1"></a>Machine-Learning - Week 1</h1><p>Github link: <a href="https://github.com/AlenZhang-Dev/MachineLearning-Stanford" target="_blank" rel="noopener">https://github.com/AlenZhang-Dev/MachineLearning-Stanford</a></p><h1 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h1><p>Introduce the core idea of teaching a computer to learn concepts using data - without being explicitly programmed.</p><p><strong>linear regression with one variable.</strong> Discuss the application of linear regression to housing price prediction, present the notion of a cost function, also introduce the gradient descent method for learning.</p><p>The course require the knowledge of l<strong>inear algebra</strong> concepts.</p><a id="more"></a><hr><h2 id="What’s-Machine-Learning"><a href="#What’s-Machine-Learning" class="headerlink" title="What’s Machine Learning?"></a>What’s Machine Learning?</h2><p>Andrew NG: Machine Learning is the science of getting computers to learn, without being explicitly programmed.</p><ul><li>Grew out of work in AI</li><li>New capability for computers</li></ul><p>Examples:</p><ul><li><p>Database mining</p><ul><li>Large datasets from growth of automation/web</li><li>E.g., Web click data, medical records, biology, engineering</li></ul></li><li><p>Applications can’t program by hand.</p><ul><li>E.g., Autonomous helicopter, handwriting recognition, most of Natural Language Processing(NLP), Computer Vision.</li></ul></li><li><p>Self-customizing programs</p><p>  E.g., Amazon, Netflix product recommendations.</p></li><li><p>Understanding human learning(brain, real AI).</p></li></ul><p><strong>What’s Machine Learning?[Definition]</strong></p><p>Two definitions of Machine Learning are offered.</p><ul><li>Arthur Samuel described it as: <strong>“the field of study that gives computers the ability to learn without being explicitly programmed.”</strong> This is an older, informal definition.</li><li>Tom Mitchell provides a more modern definition: <strong>“A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.”</strong></li></ul><p>Examples:</p><p>playing checkers.</p><p>E = the experience of playing many games of checkers</p><p>T = the task of playing checkers.</p><p>P = the probability that the program will win the next game.</p><p>Suppose your email program watches which emails you do or do not mark as spam, and based on that learns how to better filter spam. Explain the E T P according to Tom Mitchell’s definiation.</p><p>E = Watching you label emails as spam or not spam.</p><p>T = Classify emails as spam or not spam.</p><p>P = The number(or fraction) of emails correctly classified as spam/not spam.</p><p>In general, any machine learning problem can be assigned to one of two broad classifications:</p><p><strong>Supervised learning and Unsupervised learning.</strong></p><p>Machine Learning algorithms </p><ul><li>Supervised Learning</li><li>Unsupervised Learning</li></ul><p>Others: Reinforcement Learning, recommender systems.</p><h2 id="Supervised-Learning"><a href="#Supervised-Learning" class="headerlink" title="Supervised Learning"></a>Supervised Learning</h2><p>In supervised learning, we are given a data set and already know what our correct output should look like, <strong>having the idea that there is a relationship between the input and the output.</strong></p><p>Supervised learning problems are categorized into “<strong>regression</strong>“ and “<strong>classification</strong>“ problems. </p><p>In a regression problem, we are trying to predict results within a <strong>continuous output</strong>, meaning that we are trying to map input variables to some continuous function. </p><p>In a classification problem, we are instead trying to predict results in a <strong>discrete output[离散输出]</strong>. In other words, we are trying to map input variables into discrete categories.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_3.50.40_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_3.50.40_PM.png"></p><p>Regression exp</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_3.51.03_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_3.51.03_PM.png"></p><p>Classification</p><p><strong>Example 1:</strong></p><p>Given data about the size of houses on the real estate market, try to predict their price. Price as a function of size is a continuous output, so this is a regression problem.</p><p>We could turn this example into a classification problem by instead making our output about whether the house “sells for more or less than the asking price.” Here we are classifying the houses based on price into two discrete categories.</p><p><strong>Example 2</strong>:</p><p>(a) Regression - Given a picture of a person, we have to predict their age on the basis of the given picture</p><p>(b) Classification - Given a patient with a tumor, we have to predict whether the tumor is malignant or benign.</p><p>Practice：</p><p>You’re running a company, and you want to develop learning algorithms to address each of two problems. </p><p>Problem 1: You have a large inventory of identical items. You want to predict how many of these items will sell over the next 3 months.</p><p>Problem 2: You’d like software to examine individual customer accounts, and for each account decide if it has been hacked/compromised. Should you treat these as classification or as regression problems?</p><p>Answer: </p><p>Treat problem 1 as a regression problem, problem 2 as a classification problem.</p><p>Explain:</p><p>First one : we have thousand of items [Continuous]</p><p>Second one: 0 - not hacked, 1 - hacked.[Hacked or not, Discrete]</p><h2 id="Unsupervised-Learning"><a href="#Unsupervised-Learning" class="headerlink" title="Unsupervised Learning"></a>Unsupervised Learning</h2><p>Unsupervised learning is a type of machine learning that looks for previously undetected patterns in a data set with no pre-existing labels and with a minimum of human supervision.    —- Wikipedia</p><p>Unsupervised learning allows us to approach problems with little or no idea what our results should look like. We can derive structure from data where we don’t necessarily know the effect of the variables.</p><p>We can derive this structure by clustering the data based on relationships among the variables in the data.</p><p>With unsupervised learning there is no feedback based on the prediction results.</p><p><strong>Example:</strong></p><p>Clustering: Take a collection of 1,000,000 different genes, and find a way to automatically group these genes into groups that are somehow similar or related by different variables, such as lifespan, location, roles, and so on.</p><p>Non-clustering: The “Cocktail Party Algorithm”, allows you to find structure in a chaotic environment. (i.e. identifying individual voices and music from a mesh of sounds at a <a href="https://en.wikipedia.org/wiki/Cocktail_party_effect" target="_blank" rel="noopener">cocktail party</a>).</p><p>The Following examples using an unsupervised learning algorithm: </p><p>Given a set of news articles found on web, group them into sets of articles about the same stories.</p><p>Given a database of customer data, automatically discover market segments and group customers into different market segments.</p><h1 id="2-Model-and-Cost-Function"><a href="#2-Model-and-Cost-Function" class="headerlink" title="2. Model and Cost Function"></a>2. Model and Cost Function</h1><h3 id="Model-Representation"><a href="#Model-Representation" class="headerlink" title="Model Representation"></a>Model Representation</h3><p><strong>Notes:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_6.03.23_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_6.03.23_PM.png"></p><p>Linear regression model with only one variable[Also called univariate linear regression]</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_6.10.45_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_6.10.45_PM.png"></p><p><strong>Material:</strong></p><p>To describe the supervised learning problem slightly more formally, our goal is, given a training set, to learn a function h : X → Y so that h(x) is a “good” predictor for the corresponding value of y. For historical reasons, this function h is called a <strong>hypothesis</strong>. </p><p>When the target variable that we’re trying to predict is continuous, such as in our housing example, we call the learning problem a regression problem. When y can take on only a small number of discrete values (such as if, given the living area, we wanted to predict if a dwelling is a house or an apartment, say), we call it a classification problem.</p><h3 id="Cost-Function"><a href="#Cost-Function" class="headerlink" title="Cost Function"></a>Cost Function</h3><p><strong>Notes:</strong></p><p>How to choose the parameters?</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_6.17.14_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_6.17.14_PM.png"></p><p><strong>Material</strong>:</p><p>We can measure the accuracy of our hypothesis function by using a <strong>cost function</strong>. This takes an average difference (actually a fancier version of an average) of all the results of the hypothesis with inputs from x’s and the actual output y’s.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.06.02_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.06.02_PM.png"></p><p>MSE: the most common one used for regression problems.</p><p><a href="https://en.wikipedia.org/wiki/Mean_squared_error" target="_blank" rel="noopener">Mean squared error</a></p><h2 id="Cost-Function-Intuition-I"><a href="#Cost-Function-Intuition-I" class="headerlink" title="Cost Function Intuition I"></a>Cost Function Intuition I</h2><p>1.Set the theta(0) to zero.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_6.58.03_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_6.58.03_PM.png"></p><p>2.The optimization objective for our learning algorithm is we want to choose the value of theta (1).  The Minimizes J(theat(1)).</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_7.39.12_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_7.39.12_PM.png"></p><p>Material:</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_7.39.36_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_7.39.36_PM.png"></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_7.39.52_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_7.39.52_PM.png"></p><h2 id="Cost-function-Intuition-II"><a href="#Cost-function-Intuition-II" class="headerlink" title="Cost function - Intuition II"></a>Cost function - Intuition II</h2><ol><li>Keep both two parameters of the cost function.</li></ol><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.42.52_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.42.52_PM.png"></p><p>The cost function may be look like below:</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.43.16_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.43.16_PM.png"></p><p>Contour plots / figure</p><p>A contour plot is a graph that contains many contour lines. A contour line of a two variable function has constant value at all points of same line. An example of such a graph is the one to the right below:</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.46.54_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.46.54_PM.png"></p><p>3 green x have the same cost.</p><p>When θ0=360 and θ1 = 0, the value of J(θ0, θ1) in the contour plot gets closer to the center thus reducing the cost function error. Now Giving our hypothesis function a slightly positive slope result in a better fit of the data.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.57.37_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_4.57.37_PM.png"></p><p>The graph above minimizes the cost function as much as possible and consequently, the result of θ1 and θ0 tend to be around 0.12 and 250 respectively. Plotting those values on our graph to the right seems to put our point in the center of the inner most ‘circle’.</p><h1 id="3-Parameter-Learning"><a href="#3-Parameter-Learning" class="headerlink" title="3. Parameter Learning"></a>3. Parameter Learning</h1><h2 id="Gradient-Descent"><a href="#Gradient-Descent" class="headerlink" title="Gradient Descent"></a>Gradient Descent</h2><p>The algorithm called gradient descent for <strong>minimizing the cost function j().</strong> </p><p>Gradient is a general algorithm.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_8.07.15_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_8.07.15_PM.png"></p><p>The outline of Gradient descent algorithm:</p><p>Understand the concept between Assignment and Truth assertion.</p><p>Simultaneous update both parameters.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_8.29.22_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_8.29.22_PM.png"></p><p><strong>Material:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_8.31.07_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_8.31.07_PM.png"></p><p>We will know that we have succeed when our cost function is at the very bottom of the pits in our graph. when its values is the minimum. The red arrows show the minimum points in the graph.</p><p>The way we do is by taking the derivative of our cost function. The slope of the tangent is the derivative at the point and it will give us a direction move towards. We make steps down the cost function in the direction with the steepest descent. The size of each step is determined by the parameter α, which is called the learning rate.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_8.31.16_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_8.31.16_PM.png"></p><h2 id="Gradient-Descent-Intuition"><a href="#Gradient-Descent-Intuition" class="headerlink" title="Gradient Descent Intuition"></a>Gradient Descent Intuition</h2><p>Apply gradient descent to minimize our squared cost function.</p><p>Gradient descent can converge to local minimum, even with the learning rate a fixed.</p><p>don’t need to change the a.</p><p>Explain the Gradient descent with one variable:</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.02.06_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.02.06_PM.png"></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.01.29_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.01.29_PM.png"></p><p>Features of Gradient descent:</p><p>When reach the bottom of our convex function, the derivative will always be 0, thus we get the settled <em>θ1.</em></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.01.42_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.01.42_PM.png"></p><h2 id="Gradient-Descent-For-Linear-Regression"><a href="#Gradient-Descent-For-Linear-Regression" class="headerlink" title="Gradient Descent For Linear Regression"></a>Gradient Descent For Linear Regression</h2><p>Simplify the function:</p><p>When we apply the Gradient descent algorithm with Linear Regression Model, we will derived a new form of the gradient descent equation.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_6.37.54_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_6.37.54_PM.png"></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.10.52_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.10.52_PM.png"></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.16.44_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.16.44_PM.png"></p><p>Convex function equals to Bowl shaped</p><p>“Batch” Gradient Descent.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.24.15_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-27_at_9.24.15_PM.png"></p><p>Material:</p><p>A new form of the gradient descent equation:</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_6.41.58_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_6.41.58_PM.png"></p><p>A single example of derivative.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_6.42.55_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_6.42.55_PM.png"></p><p>So this is simply gradient descent on the original cost function j. This method looks at every example in the entire training set on every step, which is called <strong>batch gradient descent.</strong> Note that, while gradient descent can be susceptible to <strong>local minima</strong> in general. the optimization problem we have posed here for linear regression has only on global, and no other local, optima; thus gradient descent always converges to the global minimum. </p><p>Indeed, j is a <strong>convex quadratic function</strong>. Here is an example of gradient descent as it run to minimize a quadratic function.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Untitled.png" alt="MachineLearning-Week1/Untitled.png"></p><p>The ellipses shown above are the contours of a quadratic function. Also shown is the trajectory taken by gradient descent, which was initialized at (48,30). The x’s in the figure (joined by straight lines) mark the successive values of θ that gradient descent went through as it converged to its minimum.</p><p>Rating Test:</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_8.31.33_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_8.31.33_PM.png"></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_8.35.23_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_8.35.23_PM.png"></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_8.37.06_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_8.37.06_PM.png"></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_9.01.07_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_9.01.07_PM.png"></p><p>Choose C and D</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_8.53.44_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_8.53.44_PM.png"></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-28_at_9.09.25_PM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-28_at_9.09.25_PM.png"></p><p><a href="https://www.notion.so/1cd7ea007e554bc59178ca74776018d5" target="_blank" rel="noopener">Answers</a></p><h1 id="4-Linear-Algebra-Review"><a href="#4-Linear-Algebra-Review" class="headerlink" title="4. Linear Algebra Review"></a>4. Linear Algebra Review</h1><h2 id="Matrices-and-Vectors"><a href="#Matrices-and-Vectors" class="headerlink" title="Matrices and Vectors"></a>Matrices and Vectors</h2><p>Matrix: Rectangular array of numbers.</p><p>Matrices are 2-dimensional arrays.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.28.31_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.28.31_AM.png"></p><p>Vector: An n x 1 matrix.</p><p>A vector is a matrix with one column and many rows.</p><p>So vectors are a <strong>subset</strong> of matrices.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.34.06_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.34.06_AM.png"></p><p><strong>Notation and terms[Essential]</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.40.18_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.40.18_AM.png"></p><p><strong>Matlab commands below:</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% The ; denotes we are going back to a new row.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>; <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>; <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>; <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Initialize a vector </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">v = [<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Get the dimension of the matrix A where m = rows and n = columns</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">[m,n] = <span class="built_in">size</span>(A)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% You could also store it this way</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">dim_A = <span class="built_in">size</span>(A)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Get the dimension of the vector v </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">dim_v = <span class="built_in">size</span>(v)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Now let's index into the 2nd row 3rd column of matrix A</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">A_23 = A(<span class="number">2</span>,<span class="number">3</span>)</span></pre></td></tr></table></figure><h2 id="Addition-and-Scalar-Multiplication"><a href="#Addition-and-Scalar-Multiplication" class="headerlink" title="Addition and Scalar Multiplication"></a>Addition and Scalar Multiplication</h2><p><strong>Outline:</strong></p><p>Matrix addition and subtraction, and how to multiply a matrix by a number. SO called Scalar Multiplication.</p><p><strong>Matrix Addition:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.49.42_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.49.42_AM.png"></p><p><strong>Scalar Multiplication:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.51.49_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.51.49_AM.png"></p><p><strong>Combination of Operands:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.55.22_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_8.55.22_AM.png"></p><p><strong>Matlab command:</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Initialize matrix A and B </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>; <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">B = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Initialize constant s </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">s = <span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% See how element-wise addition works</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">add_AB = A + B </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% See how element-wise subtraction works</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">sub_AB = A - B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% See how scalar multiplication works</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">mult_As = A * s</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Divide A by s</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">div_As = A / s</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% What happens if we have a Matrix + scalar?</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">add_As = A + s</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">A =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">   <span class="number">1</span>   <span class="number">2</span>   <span class="number">4</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">   <span class="number">5</span>   <span class="number">3</span>   <span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">B =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">   <span class="number">1</span>   <span class="number">3</span>   <span class="number">4</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">   <span class="number">1</span>   <span class="number">1</span>   <span class="number">1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">s =  <span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">add_AB =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">   <span class="number">2</span>   <span class="number">5</span>   <span class="number">8</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">   <span class="number">6</span>   <span class="number">4</span>   <span class="number">3</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">sub_AB =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">   <span class="number">0</span>  <span class="number">-1</span>   <span class="number">0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">   <span class="number">4</span>   <span class="number">2</span>   <span class="number">1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">mult_As =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="number">2</span>    <span class="number">4</span>    <span class="number">8</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">   <span class="number">10</span>    <span class="number">6</span>    <span class="number">4</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">div_As =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">   <span class="number">0.50000</span>   <span class="number">1.00000</span>   <span class="number">2.00000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">   <span class="number">2.50000</span>   <span class="number">1.50000</span>   <span class="number">1.00000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">add_As =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">   <span class="number">3</span>   <span class="number">4</span>   <span class="number">6</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">   <span class="number">7</span>   <span class="number">5</span>   <span class="number">4</span></span></pre></td></tr></table></figure><h2 id="Matrix-Vector-Multiplication"><a href="#Matrix-Vector-Multiplication" class="headerlink" title="Matrix Vector Multiplication"></a>Matrix Vector Multiplication</h2><p>The number of columns of matrix must match the number of rows of vector.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.11.24_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.11.24_AM.png"></p><p>m x n matrix multiply n x 1 matrix [n-dimensional vector] = m-dimensional vector</p><h2 id="Matrix-Matrix-Multiplication"><a href="#Matrix-Matrix-Multiplication" class="headerlink" title="Matrix Matrix Multiplication"></a>Matrix Matrix Multiplication</h2><p><strong>Details:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.26.48_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.26.48_AM.png"></p><p><strong>Apply:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.37.41_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.37.41_AM.png"></p><p><strong>Matlab command:</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Initialize a 3 by 2 matrix </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>, <span class="number">2</span>; <span class="number">3</span>, <span class="number">4</span>;<span class="number">5</span>, <span class="number">6</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Initialize a 2 by 1 matrix </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">B = [<span class="number">1</span>; <span class="number">2</span>] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% We expect a resulting matrix of (3 by 2)*(2 by 1) = (3 by 1) </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">mult_AB = A*B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Make sure you understand why we got that result</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">A =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">     <span class="number">1</span>     <span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">     <span class="number">3</span>     <span class="number">4</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">     <span class="number">5</span>     <span class="number">6</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">B =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">     <span class="number">1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">     <span class="number">2</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">mult_AB =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">     <span class="number">5</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="number">11</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="number">17</span></span></pre></td></tr></table></figure><h2 id="Matrix-Multiplication-Properties"><a href="#Matrix-Multiplication-Properties" class="headerlink" title="Matrix Multiplication Properties"></a>Matrix Multiplication Properties</h2><p><strong>Not commutative</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.42.59_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.42.59_AM.png"></p><p><strong>Associative</strong></p><p>(A * B) * C = A * (B * C)</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.46.25_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.46.25_AM.png"></p><p><strong>Identity Matrix:</strong></p><p>The identity matrix of size n is the n x n square matrix <strong>with ones on the main diagonal and zeros elsewhere.<br>Details of Identity Matrix:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.55.37_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_9.55.37_AM.png"></p><h2 id="Inverse-and-Transpose"><a href="#Inverse-and-Transpose" class="headerlink" title="Inverse and Transpose"></a>Inverse and Transpose</h2><p>Start by how it relates to real numbers.</p><p><strong>Inverse Matrix:</strong></p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_10.07.41_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_10.07.41_AM.png"></p><ul><li>Matrices that don’t have an inverse are <strong>“singular” or “degenerate”</strong></li></ul><p>So how can we get the inverse matrix?</p><p>Sometimes you can compute inverses by hand but almost no one does that those day. It turns out there is very good <strong>numerical software</strong> for taking a matrix and computing.</p><p><strong>Matrix Transpose:</strong></p><p>The transpose of a matrix is an operator which flips a matrix over its diagonal.</p><p><img src="https://superming.life/2020/11/01/MachineLearning-Week1/Screen_Shot_2020-10-29_at_10.14.30_AM.png" alt="MachineLearning-Week1/Screen_Shot_2020-10-29_at_10.14.30_AM.png"></p><p>Matlab Command</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Initialize matrix A </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>;<span class="number">0</span>,<span class="number">5</span>,<span class="number">6</span>;<span class="number">7</span>,<span class="number">0</span>,<span class="number">9</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Transpose A </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">A_trans = A' </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Take the inverse of A </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">A_inv = inv(A)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% What is A^(-1)*A? </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">A_invA = inv(A)*A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">A =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">     <span class="number">0</span>     <span class="number">5</span>     <span class="number">6</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">     <span class="number">7</span>     <span class="number">0</span>     <span class="number">9</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">A_trans =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">7</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">     <span class="number">2</span>     <span class="number">5</span>     <span class="number">0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">     <span class="number">0</span>     <span class="number">6</span>     <span class="number">9</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">A_inv =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="number">0.3488</span>   <span class="number">-0.1395</span>    <span class="number">0.0930</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="number">0.3256</span>    <span class="number">0.0698</span>   <span class="number">-0.0465</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">   <span class="number">-0.2713</span>    <span class="number">0.1085</span>    <span class="number">0.0388</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">A_invA =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1.0000</span>   <span class="number">-0.0000</span>    <span class="number">0.0000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="number">0.0000</span>    <span class="number">1.0000</span>   <span class="number">-0.0000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">   <span class="number">-0.0000</span>         <span class="number">0</span>    <span class="number">1.0000</span></span></pre></td></tr></table></figure><hr><h1 id="FAQ-for-Week1"><a href="#FAQ-for-Week1" class="headerlink" title="FAQ for Week1:"></a>FAQ for Week1:</h1><p><strong>Q1: In the cost function, why don’t we use absolute value(or mod(), or some other function) instead of the squared error?</strong></p><p>The absolute value has some bad characteristics for  minimization.</p><ul><li>The gradient is not continuous because the absolute value function is not differentiable at its minimum point.</li><li>It does not emphasize the correction of large errors.</li><li>The abs() function is also not very mathematically efficient.</li></ul><p>However, the squared error cost function has some very desirable characteristics:</p><ul><li>The cost can be computed very efficiently.</li><li>Its partial derivative is easily computed.</li><li>Its partial derivative is continuous.</li></ul><p><strong>Q2: How does the Cocktail Party problem work?</strong></p><p>It isn’t clustering.</p><p>Clustering would not preserve the time-sequence of the sound samples, so the results would not sound like speech.</p><p>The method used is Principal Component Analysis. This method is a mathematical trick that takes two sets of correlated data, and returns two new sets of data that are not correlated. The sequence of the data is retained.</p><p>If the data is audio recordings, the result has the effect to the human ear of sounding like two separate audio tracks.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Machine-Learning-Week-1&quot;&gt;&lt;a href=&quot;#Machine-Learning-Week-1&quot; class=&quot;headerlink&quot; title=&quot;Machine-Learning - Week 1&quot;&gt;&lt;/a&gt;Machine-Learning - Week 1&lt;/h1&gt;&lt;p&gt;Github link: &lt;a href=&quot;https://github.com/AlenZhang-Dev/MachineLearning-Stanford&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/AlenZhang-Dev/MachineLearning-Stanford&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-Introduction&quot;&gt;&lt;a href=&quot;#1-Introduction&quot; class=&quot;headerlink&quot; title=&quot;1. Introduction&quot;&gt;&lt;/a&gt;1. Introduction&lt;/h1&gt;&lt;p&gt;Introduce the core idea of teaching a computer to learn concepts using data - without being explicitly programmed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;linear regression with one variable.&lt;/strong&gt; Discuss the application of linear regression to housing price prediction, present the notion of a cost function, also introduce the gradient descent method for learning.&lt;/p&gt;
&lt;p&gt;The course require the knowledge of l&lt;strong&gt;inear algebra&lt;/strong&gt; concepts.&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Machine-Learning" scheme="https://superming.life/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>《不能承受生命之轻》</title>
    <link href="https://superming.life/2020/10/23/%E4%B8%8D%E8%83%BD%E6%89%BF%E5%8F%97%E7%94%9F%E5%91%BD%E4%B9%8B%E8%BD%BB%20/"/>
    <id>https://superming.life/2020/10/23/%E4%B8%8D%E8%83%BD%E6%89%BF%E5%8F%97%E7%94%9F%E5%91%BD%E4%B9%8B%E8%BD%BB%20/</id>
    <published>2020-10-23T07:15:55.000Z</published>
    <updated>2020-10-23T07:19:45.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《不能承受生命之轻》"><a href="#《不能承受生命之轻》" class="headerlink" title="《不能承受生命之轻》"></a>《不能承受生命之轻》</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><a href="https://book.douban.com/subject/1017143/" target="_blank" rel="noopener">豆瓣</a></p><p>Milan Kundera最富盛名的作品。</p><p>空洞，却又深沉的阅读体验。 - 2020.10.23</p><h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><h3 id="第一章：轻与重"><a href="#第一章：轻与重" class="headerlink" title="第一章：轻与重"></a>第一章：轻与重</h3><p>1.</p><p>永恒轮回是一种神秘的想法，尼采曾用它不少哲学家陷入窘境：想想吧，有朝一日，一切都将以我们经历过的方式再现，而且这种反复还将无限重复下去！这一谵妄之说到底意味着什么？</p><a id="more"></a><p>永恒轮回之说从反面肯定了生命一旦永远消逝，便不再回复，似影子一般，了无分量，未先灭亡，即使它是残酷，美丽，或是绚烂的，这份残酷、美丽和绚练也都没有意义。</p><p>且说永恒轮回的想法表达了这样一种视角，事物并不想是我们所认知的一样，因为事情在我们看来并不是因为转瞬即逝就具有减罪之情状。</p><p>与希特勒的这种和解，暴露了一个建立在轮回不存在之上的世界所固有的深刻道德沉沦，因为在这个世界上，<strong>一切都预先被谅解了，一切也就被卑鄙的许可了</strong>。</p><p>2.</p><p>如果我们生命中的每一秒钟都得无限重复，我们就会像耶稣一样被钉死在十字架上一样被钉死在永恒上。这一想法是残酷的。在永恒轮回世界里，一举一动都承受着不能承受的责任重负。这就是尼采说永恒轮回的想法是最沉重的负担的缘故吧。</p><p>最沉重的负担压迫者我们，让我们屈服于它，把我们压倒到地上。但在历代的爱情诗中，女人总渴望承受一个男性身体的重量。于是，最沉重的负担同时也成了最强盛的生命力的影像。负担越重，我们的生命就越贴近大地，它就越真实的存在。</p><p>相反，当负担完全缺失，人就会变得比空气还轻，就会飘起来，就会远离大地和地上的生命，人也就只是一个半真的存在，其运动也就变得自由而没有意义。</p><p>那么，到底选择什么？是重还是轻？</p><p>巴门尼德早在公元前六世纪就给自己提过这个问题，在他看来，宇宙是被分割成一个个对立的二元：明与暗，厚与薄，热与冷，与在非在。他把对立的一极视为正极，另一极视为负极，这种正负之极的区分在我们看来可能显得幼稚简单。除了在这个问题上：何为正，是重还是轻？</p><p>巴门尼德答道：轻者为正，重者为负。他到底是对是错？这是一个问题。只有一样是确定的：重与轻的对立是所有对立中最神秘、最模糊的。</p><p>3.</p><p>人永远都无法知道自己该要什么，因为人只能活一次，既不能拿它跟它的前世相比，也不能在来生加以修正。</p><p>和特蕾莎在一起好呢，还是一个人好呢？</p><p>没有任何方法可以检验哪种抉择是好的，因为不存在任何比较。一切都是马上经历，仅此一次，不能准备。好像一个演员没有排练就上了舞台。<strong>如果生命的初次排练就是生命本身，那么生命到底会有什么价值？正因为这样，生命才是一张草图。</strong>但“草图“这个词还不确切，因为一张草图是某件事情的雏形，比如一幅画的草稿，而我们生命的草图却不是任何东西的草稿，它是一张成不了画的草图。</p><p>只能活一次，就和根本没有活过一样。</p><p>4.</p><p>于是他明白自己天生不是能在一个女人身边过日子的人，不管这个女人是谁，他也明白了只有单身，自己才感到真正自在。</p><p>托马斯当时还没有意识到，比喻是一种危险的东西。人是不能和比喻闹着玩的，一个简单比喻，便可从中产生爱情。</p><p>6.</p><p>爱情并不是通过做爱的欲望（这可以是对无数女人的欲求）体现的，而是通过和她共眠的欲望（这只能是对一个女人的欲求）而体现出来的。</p><p>14.</p><p>他和特蕾莎之间的爱情无疑是美好的，但也很累人：总要瞒着什么，又是隐藏，又是假装，还得讲和，让她振作，给她安慰，翻来覆去向她证明他爱她，还要忍受因为嫉妒、痛苦、做噩梦而产生的满腹怨艾，总之，他总能感受到自己有罪，得为自己开脱，请对方原谅。现在，再也不用受累了，剩下的只有美好。</p><p>星期六的夜晚开始了；他第一次肚子在苏黎世漫步，深深地呼吸着自由的芬芳。在每个角落，都潜藏着诱惑。未来成了一个谜。他又回到单身汉的生活，他曾坚信自己命中注定要过这种生活，因为只有在这样的生活中他才真正是他自己。</p><p>16.</p><p>重、必然和价值是三个有内在联系的概念；必然者为重，重者才有价值。</p><p>17.</p><p><strong>我们都觉得，我们生命中的爱情若没有分量、无足轻重，那简直不可思议；我们总是想象我们的爱情是它应该存在的那种，没有了爱情，我们的生命将不再是我们应有的生命。</strong></p><h3 id="第二章：灵与肉"><a href="#第二章：灵与肉" class="headerlink" title="第二章：灵与肉"></a>第二章：灵与肉</h3><p>8.</p><p>母亲要为自己伸张正义，她要罪犯受到惩罚。她坚持要女儿和她都活在一个没有羞耻的世界里。在这个世界里，青春和眉毛了无意义，世界只不过是一个巨大的肉体集中营，一句句肉体彼此相像，而灵魂是根本看不见的。</p><p>9.</p><p>但是，如果一件事取决于一系列的偶然，难道不是正说明了它非同寻常而且意味深长？</p><p>凡事必然发生的事，凡事期盼得到，每日重复的事，都悄无声息。</p><p>11.</p><p>我们每天的生活充满了各种偶然性，确切的说，是人、事之间的偶然相遇，我们称之为巧合。两件预料不到的事情出现在同一时刻，就叫巧合。</p><p>人生就像谱写乐章。人在美感的引导下，把偶然的事件变成一个主题，然后记录在生命的乐章中，犹如作曲家谱写奏鸣曲的主旋律，人生的主题也在反复出现、重演、修正、延展。安娜可以用任何一种方式结束生命，但是车站、死亡这个难忘的主题和爱情的萌生结合在一起，在她绝望的一刹那，以凄凉之美诱惑着她。人就是根据美的法则在谱写生命乐章，直至深深的绝望时刻的到来，然而自己一无所知。</p><p><strong>因此我们不能指责小说，说被这些神秘的偶然巧合所迷惑，但我们有理由责备人类因为对这些偶然巧合视而不见而剥夺了生命的美丽。</strong></p><p>12.</p><p>为了不让自己哭出声来，她不停地大声说话，一边说，一边笑着。而他还是和上次一样，几乎她刚跨进门槛，他就把他用在怀里，然后他们就做爱。她跌落在一片浓雾里，什么也看不见，什么也听不见，除了她的叫声。</p><p>18.</p><p>她时刻感受到一种不可抑制想要摔倒的渴望，她活在一种时刻发晕的状态之中。</p><p>23.</p><p>沙俄帝国过去所犯下的罪行都隐藏在秘密的阴影中。五十万立陶宛人被放逐，成千上万波兰人被杀戮，对克里米亚的鞑靼人进行灭绝种族的屠杀，所有这一切只留在记忆里，却没有留下任何图片作为证据，就像一件无法论证的事情，迟早会被说成骗人的谎言。</p><p>24.</p><p>女摄影师用一种母性的语气接着说到：“赤裸的身体。怎么了！这很正常！<strong>一切正常的都是美的！</strong>”</p><h3 id="第三部：不解之词"><a href="#第三部：不解之词" class="headerlink" title="第三部：不解之词"></a>第三部：不解之词</h3><p>1.</p><p>对他来说，爱情是一种甘心屈从于对方的意愿和控制的热爱。委身于对方就如同投降的士兵一样，必须首先缴械。因此，自己没了防备，他便止不住担心那致命一击何时降临。所以，我可以说，爱情之于弗兰茨，就是对死亡的不断等待。</p><p>2.</p><p>假若人还年轻，他们的生命乐章不过刚刚开始，那他们可以一同创作旋律，交换动机，到那时，当他们在比较成熟的年纪相遇，每个词，每件物所指的意思便各不相同。</p><p>3.</p><p>对萨比娜来说，活着意味着观看。视觉受双重边界所限：让人什么也看不见的强光与完全彻底的黑暗。他对任何极端主义的憎恶，或许产生于此。极端标志生命的终极之界，极端主义的激情，不论是政治上的，还是艺术上的，都是一种改头换面的对死的渴望。</p><p>5.</p><p>弗兰茨说：“在欧洲，美总是带有刻意的特点，总是先有唯美的构想或长久的计划，比如一座哥特式大教堂或一座文艺复兴式的城市，得按计划，花几个漫长的世纪才能建成。纽约的没则完全来自于另一种源头。这是一种非刻意的没。它无需经过人的预先谋划，就像钟乳石溶洞一样自然天成。有些形态，本身很丑，未经任何筹划，可捧碰巧在一个看似不可思议的环境中，突然之间便散发出一种魔力般的诗意来。”</p><p>萨比娜接着说：“非刻意的美。是的。还可以说是错误的美。美从世界上彻底消失之前，还会存在片刻，却是因错而生。错误的美，是美的历史末期。”</p><p>文化就在大批的制造、言语的泛滥、数量的失控中逐渐消亡。</p><p>7.</p><p>美就是被背弃的世界。只有当迫害者误将它遗忘在某个角落时，我们才能与它不期而遇。美就隐藏在五一节游行的场景背后。要发现美，就必须把那场景击破。</p><p>活在真实里<br>这是卡夫卡在他的日记或书信中写过的一句话。确切的出处，弗兰茨已经记不起。他被这种说法吸引住了。活在真实里，是什么意思？否定的方式很简单：不说谎，不欺骗，不隐瞒。</p><p>10.</p><p>人的悲剧总可以用沉重来比喻。人常说重担落在我们肩上。我们背负着这个重担，承受的起或承受不起。</p><h3 id="第四部：灵与肉"><a href="#第四部：灵与肉" class="headerlink" title="第四部：灵与肉"></a>第四部：灵与肉</h3><p>4.</p><p>从那以后，她明白了集中营绝无特别之处，没有什么值得让人惊讶的，而是某种命定，根本性的东西，来到世上，就是来到它的中间，不拼进权利，就不可能从中逃出去。</p><p>8.</p><p>什么是调情？可以说调情是一种暗示有进一步性接触可能的行为，但又不担</p><p>保这种可能性一定能够兑现。换言之，调情是没有保证的性交承诺。</p><p>17.</p><p>因为刺激是灵魂的，正是身体对她意愿的不由自主的叛逆，正是其对这一叛逆的参与。</p><p>25.</p><p>要逃避痛苦，最常见的，就是躲进未来。在时间轨道上，人们想象有一条线，超脱了这条线，当前的痛苦便不复存在。</p><p>28.</p><p>爱情就像是帝国：它们建立在信念之上，信念一旦消失，帝国也随之灭亡。</p><h3 id="第五部：轻与重"><a href="#第五部：轻与重" class="headerlink" title="第五部：轻与重"></a>第五部：轻与重</h3><p>6.</p><p>他已经很清楚人们的心理，他们从别人的精神耻辱中得到无比的快乐，根本不愿有什么解释来糟蹋这种快乐。</p><p>10.</p><p>追逐众多女性的男人很容易被分为两类。一类人在所有女人身上寻找他们自己的梦，他们对于女性的主观意念。另一类人则被欲念所驱使，想占有客观女性世界的无尽的多样性。</p><p>前者的迷恋是浪漫型的迷恋：他们在女人身上寻找的是他们自己，是他们的理想。他们总是不断地失望，因为，正如我们所知，理想从来都不是可能找到的。失望把他们从一个女人推向另一个女人，赋予他们的善变一种感伤的借口，因此，许多多愁善感的女人为他们的顽强的纠缠所感动。</p><p>后者的迷恋是放荡型的迷恋，女人在其中看不到丝毫感人之处：由于男人没有在女性身上寄托一个主观的理想，他们对所有女人都感兴趣，没有谁会令他们失望。的确，就是着从不失望带有某种可耻的成分。在世人眼中，放浪之徒的迷恋是不可宽恕的。</p><p>12.</p><p>不爱，并不意味着托马斯对那个年轻的女人厚颜无耻，像人们说的那样，只是把她看作性工具。相反，他像爱女友一般爱他，欣赏她的个性和智慧，只要她有需要，他随时会帮她。待她不好的不是他，而是他的记忆，他也无能为力，是记忆将她的爱情区域排除出来。</p><p>“我寻求的不是快感，而是幸福。没有幸福的快感，那算不上快感。”</p><p>爱开始于一个女人以某句话印在我们诗化记忆中的那一刻。</p><p>15.</p><p>人只能活一回，我们无法验证决定的对错，因为，在任何情况下，我们只能做一个决定。上天不会赋予我们第二次，第三次，第四次生命以供比较不同的决定。</p><p>16</p><p>只有在这种乌托邦式的前景中，悲观和乐观的概念才具有一定的意义：凡认为人类历史在五号星球上会变得不那么血腥的，为乐观主义者。凡不这么认为的，则为悲观主义者。</p><h3 id="第六章：伟大的进军"><a href="#第六章：伟大的进军" class="headerlink" title="第六章：伟大的进军"></a>第六章：伟大的进军</h3><p>2.</p><p>斯大林之子因粪便而献出了自己的生命，但是为粪便而死并不是一种毫无意义的死。德国人不惜牺牲生命向东方拼命扩张帝国的领土，俄国人则为向西方扩张自己的势力范围而丧生，是的，这些人为愚蠢的事情而死，他们的死才毫无意义，才没有任何价值。相反，斯大林儿子之死是在战争的普遍愚蠢之中唯一的具有形而上学意义的死。</p><p>9.</p><p>没有人比政治家更深谙这一点。只要附近有一架照相机，一见到孩子，他们就会跑过去把他抱在怀中，亲她的脸蛋儿。媚俗，就是所有政治家，所有的政治运动的美学理想。</p><p>在一个多流派并存，多种势力相互抵消，相互制约的社会里，多少还可以摆脱媚俗的专横；个人可以维护自己的个性，艺术家可以创造处不同凡响的作品。但是在某个政治运动独霸整个权利的地方，人们便一下置身于极权的媚俗之王国。</p><p>我说“极权”，那是因为有损于媚俗的一切，必须被清处生活：任何个人主义的表现、任何怀疑、任何嘲讽、甚至是抛弃家庭母亲，爱男人剩余爱女人的那人，都是有损你媚俗的行为。因为这就是威胁那句神圣不可侵犯的口号“多生多育“。</p><p>从这一点来看，所谓古拉格，可以被视为极权的媚俗乱倒垃圾的化粪坑。</p><p>10.</p><p>特蕾莎揭露了媚俗的真正作用：媚俗是掩盖死亡的一道屏风。</p><p>11.</p><p>在极权媚俗之王国，总是现有答案并排除一切新问题。所以极权的媚俗的真正对手就是爱发问的人。问题就像刚裁开装饰画布的刀让人看到隐藏其后的东西。萨比娜就是这样像特蕾莎解释那些油画的意义的：前面是明明白白的谎言，后面则是隐现出让人无法理解的真相。</p><p>人们总像以自己的生活制造媚俗，要摆脱它，得付出多少艰辛，令人绝望。</p><p>29.</p><p>弗兰茨留下了什么？</p><p>一句碑文：迷途漫漫，终有一归。</p><p>等等，如此等等。在被遗忘之前，我们会变得媚俗。媚俗，是存在与遗忘之间的中转站。</p><h3 id="第七部：卡列宁的微笑"><a href="#第七部：卡列宁的微笑" class="headerlink" title="第七部：卡列宁的微笑"></a>第七部：卡列宁的微笑</h3><p>2.</p><p>《创世纪》的开篇写到，上帝造人是为了让人统治鸟、鱼、牲畜。当然，《创世纪》是人写的，而不是一匹马写的。因此，并不能完全断定上帝是真的希望人类统治其他生物。更有可能是人类发明了上帝，以便使其篡夺来的对牛马的支配权合乎神圣法则。对，就是杀死一只鹿或一头母牛的权利，全人类在这一点上达到来共识，即使是在最血腥的战争年代也不例外。</p><p>4.</p><p>她倒是觉得人类夫妻这种创造，本来就是让男女之爱从根本上就不及人与狗之间可能产生的爱。这真是人类历史上的怪现象，造物主当初或许并没有打算这样安排。</p><p>7.</p><p>任何人都没有使命。当你发现自己是自由的，没有任何使命时，便是一种极大的解脱。</p><p>他们来来回回，合着钢琴声和小提琴声迈着舞步，特蕾莎的头靠在托马斯的肩上，两人就像坐着飞机在云雾里穿行。此刻她又感受到了那种奇特的幸福，那种奇特的忧虑。这忧虑意味着：我们已经在最后一站。这幸福意味着：我们在一起。忧虑是形式，幸福是内容。幸福充盈着忧虑的空间。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《不能承受生命之轻》&quot;&gt;&lt;a href=&quot;#《不能承受生命之轻》&quot; class=&quot;headerlink&quot; title=&quot;《不能承受生命之轻》&quot;&gt;&lt;/a&gt;《不能承受生命之轻》&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/1017143/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;豆瓣&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Milan Kundera最富盛名的作品。&lt;/p&gt;
&lt;p&gt;空洞，却又深沉的阅读体验。 - 2020.10.23&lt;/p&gt;
&lt;h2 id=&quot;摘录&quot;&gt;&lt;a href=&quot;#摘录&quot; class=&quot;headerlink&quot; title=&quot;摘录&quot;&gt;&lt;/a&gt;摘录&lt;/h2&gt;&lt;h3 id=&quot;第一章：轻与重&quot;&gt;&lt;a href=&quot;#第一章：轻与重&quot; class=&quot;headerlink&quot; title=&quot;第一章：轻与重&quot;&gt;&lt;/a&gt;第一章：轻与重&lt;/h3&gt;&lt;p&gt;1.&lt;/p&gt;
&lt;p&gt;永恒轮回是一种神秘的想法，尼采曾用它不少哲学家陷入窘境：想想吧，有朝一日，一切都将以我们经历过的方式再现，而且这种反复还将无限重复下去！这一谵妄之说到底意味着什么？&lt;/p&gt;
    
    </summary>
    
    
      <category term="Books" scheme="https://superming.life/categories/Books/"/>
    
    
      <category term="Reading" scheme="https://superming.life/tags/Reading/"/>
    
  </entry>
  
  <entry>
    <title>Insertion</title>
    <link href="https://superming.life/2020/10/17/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    <id>https://superming.life/2020/10/17/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</id>
    <published>2020-10-17T04:16:55.000Z</published>
    <updated>2020-10-17T07:01:36.895Z</updated>
    
    <content type="html"><![CDATA[<h1 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h1><h2 id="直接插入排序（Straight-Insertion-Sort）"><a href="#直接插入排序（Straight-Insertion-Sort）" class="headerlink" title="直接插入排序（Straight Insertion Sort）"></a>直接插入排序（Straight Insertion Sort）</h2><p>直接插入排序是简单直观的排序方法，将一个记录插入到已排好的有序表中，从而得到一个新的、记录数增1的有序表。</p><a id="more"></a><p>通过构建有序序列，对未排序数据，在已排序数据中从前向后扫描，找到相应位置并插入。采用in-place排序（只需要用到O(1)的额外空间的排序）。在从后向前扫描的过程中，需要反复把已排序的元素向后移动。</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Insertion-sort-example-300px.gif/220px-Insertion-sort-example-300px.gif" alt="img"></p><p>默认第一个元素已排序，从第二位开始遍历，外层循环遍历需要插入的元素，遍历至最后一个元素停止，内层循环用于确定插入元素在已排序数组中的位置，同时将大于该元素的数组后移；最后将元素插入。</p><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> arr[])</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//        for(int i = 1; i &lt; arr.length; ++i)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//            int temp = arr[i];</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//            int j = i - 1;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//            while( j &gt;= 0 &amp;&amp; arr[j] &gt; temp) &#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//                arr[j + 1] = arr[j];</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//                j--;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//            &#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//            arr[j + 1] = temp;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//        &#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; ++i)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">int</span> temp = arr[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">int</span> j;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">for</span>(j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; temp; --j)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                arr[j + <span class="number">1</span>] = arr[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            arr[++j] = temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><h3 id="算法效率"><a href="#算法效率" class="headerlink" title="算法效率"></a>算法效率</h3><p>边界情况：最好的情况是序列已经升序排列（如果算法目标是把n个元素升序），只需比较n-1次即可。最坏情况为元素降序，需要进行<code>1 / 2 * n *  (n - 1)</code>次比较。平均来说，插入排序算法复杂度为 O(n^2)。</p><p>插入排序不适合数据量较大的排序应用，如果需要排序的数据量很小，插入排序还是个很不错的选择。</p><h2 id="折半插入排序（Binary-Insertion-Sort）"><a href="#折半插入排序（Binary-Insertion-Sort）" class="headerlink" title="折半插入排序（Binary Insertion Sort）"></a>折半插入排序（Binary Insertion Sort）</h2><p>对插入排序的改进，需要从比较次数和移动次数两处着手。折半插入从减少比较次数着手，而移动次数不变。折半插入排序花费可以将时间复杂度从 O(n^2)降为O(log n)，依旧是一个稳定的排序算法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; ++i) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> temp = arr[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> high = i - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      <span class="comment">//折半插入核心</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (low &lt;= high) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">int</span> m = low + high / <span class="number">2</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (arr[m] &gt; temp)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">                high = m - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">                low = m + <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">      <span class="comment">//将数据后移然后插入</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i - <span class="number">1</span>; j &gt;= low; --j) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            arr[j + <span class="number">1</span>] = arr[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        arr[low] = temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="2-路插入排序（Two-way-Insertion-Sort）"><a href="#2-路插入排序（Two-way-Insertion-Sort）" class="headerlink" title="2-路插入排序（Two-way Insertion Sort）"></a>2-路插入排序（Two-way Insertion Sort）</h2><p>因为折半插入排序不改变移动次数，因此2-路插入排序在折半插入排序的基础上进行改进，用于较少排序过程中的移动次数，但是需要额外n个的辅助空间。</p><p>2-路插入排序需要创建一个和存储记录数量大小相同的数组b，将原数组的第一个记录添加到合适的位置，假设为b[0]，从原数组的第二个元素开始进行比较，比较过程一共有三种情况：插入元素比最小的元素小，插入元素比最大元素大，插入元素在两者之间，最后一种情况则需要移动元素。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">twoWayInsertionSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> brr[])</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">int</span> length = arr.length;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">int</span> first =<span class="number">0</span>, last = <span class="number">0</span>;<span class="comment">//point to the greater one and tiny one.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      brr[<span class="number">0</span>] = arr[<span class="number">0</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; ++i)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">          <span class="comment">//greater than the biggest one</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">          <span class="keyword">if</span>(arr[i] &gt;= brr[last])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">              brr[++last] = arr[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(arr[i] &lt;= brr[first])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">              first = (first - <span class="number">1</span> + length) % length;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">              brr[first] = arr[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">          <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//int j = (last - 1 + length) % length;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">              <span class="keyword">int</span> j = last;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">              <span class="keyword">while</span>(brr[j] &gt; arr[i])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                  brr[(j + <span class="number">1</span>) % length] = brr[j];<span class="comment">//move back element</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                  j = (j - <span class="number">1</span> + length) % length;<span class="comment">//update point</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">              &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">              brr[(j + <span class="number">1</span>) % length] = arr[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">              last++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">          System.out.println(<span class="string">"First is "</span> + first + <span class="string">"Last is "</span> + last);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">      <span class="comment">//copy back to the array</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; ++i)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">          arr[i] = brr[(first + i) % length];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr></table></figure><h3 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h3><p>在2-路插入排序中，移动次数约为n^2/8，仅仅减少了排序的移动次数，但不能绝对避免移动，时间复杂度依旧为O(n ^ 2)。</p><h2 id="表插入排序"><a href="#表插入排序" class="headerlink" title="* 表插入排序 *"></a>* 表插入排序 *</h2><p>需要从根本上避免移动，则需要对存储结构进行改变，将结构改为<strong>静态链表</strong>作为待排记录序列的存储结构。</p><p>对于一个有序的循环链表，插入新元素，只需修改后继指针的指向，在这个过程中，我们不需要移动或交换元素。</p><p>顺着指针指向对元素进行调整，能够做到物理有序。</p><ol><li>创建新的静态链表结构体，封装值和指针。同时设置一个头节点，值存储不小于原序列最大值的值。</li><li>对链表进行初始化</li><li>将后续节点一次插入循环链表中，调整节点指针指向，使其有序。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Sort;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TableInsertionSort</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Node <span class="title">init</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span>[] a = &#123;<span class="number">49</span>, <span class="number">38</span>, <span class="number">65</span>, <span class="number">97</span>, <span class="number">76</span>, <span class="number">13</span>, <span class="number">27</span>, <span class="number">49</span>&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        Node head = <span class="keyword">new</span> Node();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        Node p = head;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            Node node = <span class="keyword">new</span> Node();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            node.setKey(a[i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            p.setNode(node);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            p = node;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> head;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Node list)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        Node pre, now, p, q, head;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        head = list;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        pre = list.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        now = pre.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (now != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            q = head;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            p = q.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">while</span> (p != now &amp;&amp; p.getKey() &lt;= now.getKey()) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">                q = p;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">                p = p.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (p == now) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">                pre = pre.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">                now = pre.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">continue</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            pre.setNode(now.getNode());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            q.setNode(now);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            now.setNode(p);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            now = pre.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printList</span><span class="params">(Node head)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        Node p = head.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">while</span> (p != <span class="keyword">null</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            System.out.print(p.getKey() + <span class="string">" "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">            p = p.getNode();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String agrs[])</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        Node list = init();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        sort(list);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        printList(list);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//set Node class</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">     <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> key;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">private</span> Node node;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> key, Node node)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.key = key;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.node = node;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getKey</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> key;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKey</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.key = key;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> Node <span class="title">getNode</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> node;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNode</span><span class="params">(Node node)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">this</span>.node = node;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p> 效率：</p><p>元素推动次数为0，算法比较次数与直接插入排序算法比较次数同级，平均时间复杂度为O(n ^ 2)。每个元素增加一个指向下一个节点的指针，辅助空间O(n)，且算法<strong>稳定</strong>。</p><h2 id="希尔排序（Shell-Sort）"><a href="#希尔排序（Shell-Sort）" class="headerlink" title="希尔排序（Shell Sort）"></a>希尔排序（Shell Sort）</h2><p>希尔排序也称“缩小增量排序”（Diminishing Increment Sort），是简单的插入排序经过改进后一个更高效的版本。</p><p>基本思想：把记录按下标的一定增量分组【将记录序列进行分割】，然后对每组进行插入排序，随着增量的减少，每组包含的关键字越多，当增量变为1时，对全体文件进行一次直接插入排序。</p><p>希尔排序通过分组并进行插入排序的方式对数组进行排序，从宏观上看数组逐渐有序，因为数组基本有序，所以在进行直接插入排序的过程中很少出现排序效率最低的情况，多数情况只需要对数据进行微调，从而降低了时间复杂度。</p><p>基于插入排序的两点性质：</p><ol><li>插入排序对几乎排好的数据操作效率很高，可以达到线性排序效率。</li><li>但插入排序一般来说是低效的，因为每次只能移动一位数据。</li></ol><p>一般我们会选择增量gap为length/2，缩小增量继续以gap/2的形式进行。希尔排序的增量序列选择涉及数学上的难题，不做讨论。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//交换</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">              <span class="comment">//每次都与相隔gap位的值进行比较</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">              <span class="keyword">int</span> j = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">              <span class="keyword">while</span> (j - gap &gt;= <span class="number">0</span> &amp;&amp; arr[j] &lt; arr[j - gap]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">                  <span class="comment">//swap the element</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">                  swap(arr, j, j - gap);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">                  j -= gap;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">              &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">//移动</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sortMove</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">              <span class="comment">//每次都与相隔gap位的值进行比较</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">              <span class="keyword">int</span> j = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">              <span class="keyword">int</span> temp = arr[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">              <span class="keyword">while</span> (j - gap &gt;= <span class="number">0</span> &amp;&amp; arr[j] &lt; arr[j - gap]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">                  arr[j] = arr[j - gap];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">                  j -= gap;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">              &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">              arr[j] =temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr></table></figure><h3 id="效率-1"><a href="#效率-1" class="headerlink" title="效率"></a>效率</h3><p>希尔排序的效率收gap值的影响，选择不同的gap值能够得到不同的时间效率，一般建议gap取n/2，这样可以比多数O(n ^ 2)的算法更好，但仍可以减少平均时间和最差时间的空间。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;插入排序&quot;&gt;&lt;a href=&quot;#插入排序&quot; class=&quot;headerlink&quot; title=&quot;插入排序&quot;&gt;&lt;/a&gt;插入排序&lt;/h1&gt;&lt;h2 id=&quot;直接插入排序（Straight-Insertion-Sort）&quot;&gt;&lt;a href=&quot;#直接插入排序（Straight-Insertion-Sort）&quot; class=&quot;headerlink&quot; title=&quot;直接插入排序（Straight Insertion Sort）&quot;&gt;&lt;/a&gt;直接插入排序（Straight Insertion Sort）&lt;/h2&gt;&lt;p&gt;直接插入排序是简单直观的排序方法，将一个记录插入到已排好的有序表中，从而得到一个新的、记录数增1的有序表。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Algorithms" scheme="https://superming.life/tags/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title>HeapSort</title>
    <link href="https://superming.life/2020/10/15/HeapSort/"/>
    <id>https://superming.life/2020/10/15/HeapSort/</id>
    <published>2020-10-15T02:48:56.000Z</published>
    <updated>2020-10-19T05:28:21.840Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HeapSort「堆排序」"><a href="#HeapSort「堆排序」" class="headerlink" title="HeapSort「堆排序」"></a>HeapSort「堆排序」</h1><h2 id="堆（Heap）"><a href="#堆（Heap）" class="headerlink" title="堆（Heap）"></a>堆（Heap）</h2><p><img src="https://superming.life/2020/10/15/HeapSort/DataStructure.png" alt="Heap Data Structure"></p><p>（二叉）堆数据结构是一种数组对象，可以被视为一颗特殊的完全二叉树。</p><p>树中每个节点与数组中存放该节点值的那个元素对应。树每一层都是填满的，最后一层除外。</p><p>二叉堆有两种：最大堆和最小堆【大根堆和小根堆】。</p><a id="more"></a><p>大根堆：“给定堆中的任意节点P和C，若P是C的根节点，那么P的值大于等于C的值。” <code>A[Parent(i)] &gt;= A[i]</code>，i 表示除了根节点以外的每个节点。</p><p>小根堆：“给定堆中的任意节点P和C，若P是C的根节点，那么P的值小于等于的值。” <code>A[Parent(i)] &lt;= A[i]</code>，i 表示除了根节点以外的每个节点。</p><p>大根堆最大元素在根部，小根堆最小元素在根部。</p><p>在堆排序中，我们使用大根堆，小根堆主要在构造<strong>优先排列</strong>时使用。</p><h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><p>堆排序是使用堆这种数据结构而设计的一种排序算法，是一种<strong>选择排序</strong>，同时也是一种<strong>不稳定的排序</strong>。</p><p>堆排序主要流程：</p><ol><li>将无序序列构造成一个大根堆，将序列的最大值放到堆顶。【建堆】<ol><li>无序序列构造初始堆时，需要从第一个非叶子结点开始，也就是length / 2 - 1出，然后逐步递减。</li></ol></li><li>将堆顶元素与末尾元素进行交换，末尾元素即为最大值。【依次排序】</li><li>将剩余的n-1个元素重新排列成堆，堆顶再次得到n-1个元素的最大值。</li><li>循环1-3步，直到排成有序数列。</li></ol><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Sort;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeapSort</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        heap_sort(arr);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        System.out.println(Arrays.toString(arr));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">heap_sort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//Build heap</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = arr.length / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            max_heapify(arr, i, arr.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//Sort Process, extract an element one by one.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = arr.length - <span class="number">1</span>; j &gt; <span class="number">0</span>; j--) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//Move current root to end.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            swap(arr, <span class="number">0</span>, j);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//Rebuild the heap.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            max_heapify(arr, <span class="number">0</span>, j);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//adjust the heap, the core function of HeapSort;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//To heapify a subtree from start to end.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">max_heapify</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//keep the current swap element.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> temp = arr[start];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//compare the child, from left to right</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start * <span class="number">2</span> + <span class="number">1</span>; i &lt; end; i = i * <span class="number">2</span> + <span class="number">1</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//select the larger one between right child and left child</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &lt; end &amp;&amp; arr[i] &lt; arr[i + <span class="number">1</span>]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">                i++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//swap the root node with larger one.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (arr[i] &gt; temp) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">                arr[start] = arr[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">                start = i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        arr[start] = temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//swap the element</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> temp = arr[a];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        arr[a] = arr[b];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        arr[b] = temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>堆排序是一种选择排序，主要过程为创建初始堆，交换堆顶元素和末尾元素，重建堆等步骤组成。构建初始堆复杂度为O(n)。需要n - 1次交换，重建过程参考完全二叉树的性质，近似于nlogn，因此堆排序时间复杂度默认O(nlogn)。</p><blockquote><p>Time complexity of heapify is O(Logn). Time complexity of createAndBuildHeap() is O(n) and overall time complexity of Heap Sort is O(nLogn).</p></blockquote><p>堆排序的使用相对较少，因为快速排序和合并排序两者在实际生活使用中更有效率。</p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>最小k个数</p><p>对几乎排序的数组进行排序</p><p>…</p><hr><p>参考：</p><p><a href="https://www.geeksforgeeks.org/heap-sort/?ref=lbp" target="_blank" rel="noopener">GeeksforGeeks HeapSort</a></p><p><a href="https://www.cnblogs.com/chengxiao/p/6129630.html" target="_blank" rel="noopener">图解排序算法之堆排序</a></p><p><a href="https://zh.wikipedia.org/wiki/%E5%A0%86%E6%8E%92%E5%BA%8F#C%E8%AF%AD%E8%A8%80" target="_blank" rel="noopener">wiki</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HeapSort「堆排序」&quot;&gt;&lt;a href=&quot;#HeapSort「堆排序」&quot; class=&quot;headerlink&quot; title=&quot;HeapSort「堆排序」&quot;&gt;&lt;/a&gt;HeapSort「堆排序」&lt;/h1&gt;&lt;h2 id=&quot;堆（Heap）&quot;&gt;&lt;a href=&quot;#堆（Heap）&quot; class=&quot;headerlink&quot; title=&quot;堆（Heap）&quot;&gt;&lt;/a&gt;堆（Heap）&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://superming.life/2020/10/15/HeapSort/DataStructure.png&quot; alt=&quot;Heap Data Structure&quot;&gt;&lt;/p&gt;
&lt;p&gt;（二叉）堆数据结构是一种数组对象，可以被视为一颗特殊的完全二叉树。&lt;/p&gt;
&lt;p&gt;树中每个节点与数组中存放该节点值的那个元素对应。树每一层都是填满的，最后一层除外。&lt;/p&gt;
&lt;p&gt;二叉堆有两种：最大堆和最小堆【大根堆和小根堆】。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Algorithms" scheme="https://superming.life/tags/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title>MergeSort</title>
    <link href="https://superming.life/2020/10/07/MergeSort/"/>
    <id>https://superming.life/2020/10/07/MergeSort/</id>
    <published>2020-10-07T13:00:35.000Z</published>
    <updated>2020-10-15T08:27:34.038Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MergeSort"><a href="#MergeSort" class="headerlink" title="MergeSort"></a>MergeSort</h1><h2 id="Introductions"><a href="#Introductions" class="headerlink" title="Introductions"></a>Introductions</h2><p>很多算法在结构上是递归的，为了解决给定问题，需要一次或多次调用自身来解决相关子问题，通常使用<strong>分治策略（Divide-and-Conquer）</strong>，即将问题分解为n个规模较小而结构与原问题类似的子问题；递归解决这些问题，然后合并其结果，即得到问题的解。</p><a id="more"></a><p>分治模式在每一层的递归上一般有三个步骤：</p><p>分解（Divide）：将原问题分解为一系列的子问题。</p><p>解决（Conquer）：递归解决各子问题，若子问题足够小，则直接求解。</p><p>合并（combine）：将子问题的结果合并为原问题的解。</p><p>归并排序（MergeSort）算法是分治策略的一个完美实现。</p><p>分解：将n个元素分成各含n/2个元素的子序列。</p><p>解决：用合并排序法对两个子序列递归地排序。</p><p>合并：合并两个已排序的子序列以得到排序结果。</p><p>关键在于合并步骤中两个已经排列的子序列。</p><p><img src="https://superming.life/2020/10/07/MergeSort/Merge-Sort-Tutorial.png" alt></p><p>merge核心代码及流程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> l, <span class="keyword">int</span> m, <span class="keyword">int</span> r)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Your code here</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> temp[] = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = l;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> j = m + <span class="number">1</span>;<span class="comment">//right point</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;<span class="comment">//point of temp;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(i &lt;= m &amp;&amp; j &lt;= r)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(arr[i] &lt; arr[j])&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        temp[index++] = arr[i++];   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        temp[index++] = arr[j++];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"> <span class="keyword">while</span>(i &lt;= m)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    temp[index++] = arr[i++];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"> <span class="keyword">while</span>(j &lt;= r)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    temp[index++] = arr[j++];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"> <span class="keyword">for</span>(index = <span class="number">0</span>; index &lt;= r; index++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    arr[index] = arr[index];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>完整代码参考：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Java program for Merge Sort */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MergeSort</span> </span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Merges two subarrays of arr[]. </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// First subarray is arr[l..m] </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Second subarray is arr[m+1..r] </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> l, <span class="keyword">int</span> m, <span class="keyword">int</span> r)</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Find sizes of two subarrays to be merged </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n1 = m - l + <span class="number">1</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n2 = r - m; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Create temp arrays */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> L[] = <span class="keyword">new</span> <span class="keyword">int</span>[n1]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> R[] = <span class="keyword">new</span> <span class="keyword">int</span>[n2]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Copy data to temp arrays*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n1; ++i) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">L[i] = arr[l + i]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n2; ++j) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">R[j] = arr[m + <span class="number">1</span> + j]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Merge the temp arrays */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Initial indexes of first and second subarrays </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Initial index of merged subarry array </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> k = l; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (i &lt; n1 &amp;&amp; j &lt; n2) &#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (L[i] &lt;= R[j]) &#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">arr[k] = L[i]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">i++; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">arr[k] = R[j]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">j++; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">k++; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Copy remaining elements of L[] if any */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (i &lt; n1) &#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">arr[k] = L[i]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">i++; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">k++; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Copy remaining elements of R[] if any */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (j &lt; n2) &#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">arr[k] = R[j]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">j++; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">k++; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Main function that sorts arr[l..r] using </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// merge() </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (l &lt; r) &#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Find the middle point </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> m = (l + r) / <span class="number">2</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Sort first and second halves </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">sort(arr, l, m); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">sort(arr, m + <span class="number">1</span>, r); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Merge the sorted halves </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">merge(arr, l, m, r); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* A utility function to print array of size n */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = arr.length; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">System.out.print(arr[i] + <span class="string">" "</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">System.out.println(); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Driver method </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[] = &#123; <span class="number">12</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> &#125;; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"Given Array"</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">printArray(arr); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">MergeSort ob = <span class="keyword">new</span> MergeSort(); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">ob.sort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"\nSorted array"</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">printArray(arr); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* This code is contributed by Rajat Mishra */</span></span></pre></td></tr></table></figure><p>归并排序是一种稳定、高效的排序，一般利用了完全二叉树特性的排序一般不会太差。</p><p>每次合并操作的平均时间复杂度为O(n)，而完全二叉树的深度为|log2n|。总的平均时间复杂度为O(nlogn)，归并排序的最好，最坏，平均时间复杂度均为O(nlogn)。</p><p>拓展：Java的Array.sort( )采用的TimSort排序算法，就是归并排序的优化版本。【后续填坑】</p><h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><p>【挖坑】</p><hr><p><a href="https://www.geeksforgeeks.org/merge-sort/?ref=lbp" target="_blank" rel="noopener">Merge Sort</a></p><p><a href="https://www.cnblogs.com/chengxiao/p/6194356.html" target="_blank" rel="noopener">归并排序</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MergeSort&quot;&gt;&lt;a href=&quot;#MergeSort&quot; class=&quot;headerlink&quot; title=&quot;MergeSort&quot;&gt;&lt;/a&gt;MergeSort&lt;/h1&gt;&lt;h2 id=&quot;Introductions&quot;&gt;&lt;a href=&quot;#Introductions&quot; class=&quot;headerlink&quot; title=&quot;Introductions&quot;&gt;&lt;/a&gt;Introductions&lt;/h2&gt;&lt;p&gt;很多算法在结构上是递归的，为了解决给定问题，需要一次或多次调用自身来解决相关子问题，通常使用&lt;strong&gt;分治策略（Divide-and-Conquer）&lt;/strong&gt;，即将问题分解为n个规模较小而结构与原问题类似的子问题；递归解决这些问题，然后合并其结果，即得到问题的解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Algorithms" scheme="https://superming.life/tags/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title>QuickSort</title>
    <link href="https://superming.life/2020/10/07/QuickSort/"/>
    <id>https://superming.life/2020/10/07/QuickSort/</id>
    <published>2020-10-07T04:14:41.000Z</published>
    <updated>2020-11-27T02:15:35.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QuickSort"><a href="#QuickSort" class="headerlink" title="QuickSort"></a>QuickSort</h1><h2 id="概念及简介"><a href="#概念及简介" class="headerlink" title="概念及简介"></a>概念及简介</h2><p>快速排序是经典的排序算法，一般来说，快速排序是排序的最佳选择，得益于其出众的平均性能，同时能够就地排序，在虚拟环境中能够很好的工作。</p><p>快速排序主要基于<strong>分治模式（divide - and - conquer）</strong>。首先对数组进行划分【分解】，通过partition函数进行划分，最后将各操作合并即可。</p><a id="more"></a><blockquote><p>关于分治算法的策略，分(divide)主要把大问题分解为模式类似的小问题，方便进行递归，而治（conquer）则将分阶段的各答案合并在一起，故称分治。</p></blockquote><h2 id="Partition实现"><a href="#Partition实现" class="headerlink" title="Partition实现"></a>Partition实现</h2><p>Partition函数是QuickSort很重要的组成。<u>首先从给定数组中选择一个pivot值【中枢值】，关于中枢值的选择比较随意，可以为首元素、尾元素、中间元素以及随机元素，一般默认为首或尾元素。</u>Partition函数的主要功能是在数组中选择一个中枢值，把该值放在排序后属于它的位置，所有比它小的数值放在该值的左侧，所有比它大的值放在它的右侧。</p><p><img src="https://superming.life/2020/10/07/QuickSort/quicksort.png" alt="quicksort"></p><p>Partition函数的<strong>伪代码</strong>实现【Pseudo Code】：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*This fucntion takes last element as pivot.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">will place the pivot element at the correct position.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">and place all smaller to left of pivot, all greater element to right of pivot.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">partition(arr[], low, high)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">pivot = arr[high];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">i = low - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = low; j &lt; high - <span class="number">1</span>; j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(arr[j] &lt; pivot)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">i++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">swap arr[i] and arr[j]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">swap arr[i + <span class="number">1</span>] and arr[high]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> (i + <span class="number">1</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*This function takes first element as pivot.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment">will place the pivot element at the correct position.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">and place all smaller to left of pivot, all greater element to right of pivot.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment">*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">partition(arr[], low, high)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">pivot = arr[low];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">i = low;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = low; j &lt;= high; j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(arr[j] &lt; pivot)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">i++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">swap arr[i] and arr[j]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">swap arr[low] and arr[i]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> i;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>QuickSort伪代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// low -&gt; Starting index, high -&gt; Ending index</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">quickSort(arr[], low, high)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(low &lt; high)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pi = partition(arr, low, high);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      <span class="comment">//pi is on his position. Dividing the arr by pi.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      quickSort(arr, low, pi - <span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      quickSort(arr, pi + <span class="number">1</span>, high);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="Java-Implementation"><a href="#Java-Implementation" class="headerlink" title="Java Implementation"></a>Java Implementation</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">int</span> temp = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">int</span> pivot = arr[high];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">int</span> i = low - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; high - <span class="number">1</span>; j++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">          <span class="keyword">if</span>(arr[j] &lt; pivot)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">              i++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">          <span class="comment">//swap</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">          temp = arr[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">          arr[j] = arr[i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">          arr[i] = temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//swap last time </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">      temp = arr[i++];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">      arr[i] = arr[high];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">      arr[high] = temp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">      </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">return</span> i + <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">if</span>(low &lt; high)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">          <span class="keyword">int</span> pi = partition(arr, low, high);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">          </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">          sort(arr, low, pi - <span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">          sort(arr, pi + <span class="number">1</span>, high);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span> arr[])</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">int</span> n = arr.length;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">          System.out.print(arr[i] + <span class="string">" "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        System.out.print();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String args[])</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">int</span> arr = &#123;&#125;;<span class="comment">//test example;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">int</span> n = arr.length;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">      </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">      QuickSort ob = <span class="keyword">new</span> QuickSort();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">      ob.sort(arr, <span class="number">0</span>, n - <span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">      </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">      System.out.println(<span class="string">"sorted array"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">      printArray(arr);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="C-Implementation"><a href="#C-Implementation" class="headerlink" title="C++ Implementation"></a>C++ Implementation</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* C++ implementation of QuickSort */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// A utility function to swap two elements </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span>* b)</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> t = *a; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">*a = *b; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">*b = t; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* This function takes last element as pivot, places </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">the pivot element at its correct position in sorted </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="comment">array, and places all smaller (smaller than pivot) </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment">to left of pivot and all greater elements to right </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="comment">of pivot */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span> <span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> pivot = arr[high]; <span class="comment">// pivot </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = (low - <span class="number">1</span>); <span class="comment">// Index of smaller element </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = low; j &lt;= high - <span class="number">1</span>; j++) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// If current element is smaller than the pivot </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (arr[j] &lt; pivot) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">i++; <span class="comment">// increment index of smaller element </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">swap(&amp;arr[i], &amp;arr[j]); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">swap(&amp;arr[i + <span class="number">1</span>], &amp;arr[high]); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> (i + <span class="number">1</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The main function that implements QuickSort </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="comment">arr[] --&gt; Array to be sorted, </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">low --&gt; Starting index, </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="comment">high --&gt; Ending index */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (low &lt; high) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* pi is partitioning index, arr[p] is now </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"><span class="comment">at right place */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> pi = partition(arr, low, high); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Separately sort elements before </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// partition and after partition </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">quickSort(arr, low, pi - <span class="number">1</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">quickSort(arr, pi + <span class="number">1</span>, high); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Function to print an array */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> <span class="built_in">size</span>)</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">size</span>; i++) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="string">" "</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Driver Code </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[] = &#123;<span class="number">10</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">5</span>&#125;; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">quickSort(arr, <span class="number">0</span>, n - <span class="number">1</span>); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Sorted array: \n"</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">printArray(arr, n); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// This code is contributed by rathbhupendra</span></span></pre></td></tr></table></figure><h2 id="QuickSort性能分析（Analysis-of-QuickSort）"><a href="#QuickSort性能分析（Analysis-of-QuickSort）" class="headerlink" title="QuickSort性能分析（Analysis of QuickSort）"></a>QuickSort性能分析（Analysis of QuickSort）</h2><p>快速排序的性能可以通过如下公式进行表示： <strong>T(n) = T(k) + T(n-k-1) + $\theta$(n)</strong></p><p>前两个属于用于两个递归调用，最后一个术语为分区过程。k表示小于pivot的元素个数，快速排序的时间花费主要取决于输入数组以及分区策略。【最坏情况、最优情况、平均情况】</p><p><strong>最坏情况（Worst Case）</strong></p><p>当每次分区都选择了最大或者最小的值作为pivot值。</p><p> <strong>T(n) = T(n-1) + $\theta$ (n)</strong></p><p>上述快排运行时间为$\theta$(n<sup>2</sup>)。</p><p><strong>最佳情况（Best Case）</strong></p><p>每次分区都选择中间元素作为pivot值。</p><p> <strong>T(n) = 2T(n / 2) + $\theta$ (n)</strong></p><p><strong>平均情况（Average Case）</strong></p><p>根据复杂的运行时间分析【后续补充】，得到该算法的平均运行效率公式为：</p><p> <strong>T(n) = T(n / 9) + T(9n / 10) + $\theta$ (n)</strong></p><p>上述快排的运行时间为$\theta$(nLogn)。</p><p>根据以上分析，QuickSort算法在最坏情况下的运行效率不及多数的排序算法，比如归并排序(Merge Sort)、堆排序(Heap Sort)。但在实际使用中，QuickSort排序算法表现很快，主要因为算法内部的循环排序可以很高效的适用于现实生活中多数的数组结构。因为pivot值可以随机更换，故最坏的情况很少在现实生活中发生，快排基本被认为相同数量级中所有排序算法中平均性能最优秀的。但与归并排序相比，归并排序更适用于数据量大且存储在外部的数据存储模式。</p><p>快速排序是一个不稳定的算法，在排序后相同值的元素相对位置会发生改变。</p><h2 id="三分法-快速排序（3-Way-QuickSort）"><a href="#三分法-快速排序（3-Way-QuickSort）" class="headerlink" title="三分法-快速排序（3-Way-QuickSort）"></a>三分法-快速排序（3-Way-QuickSort）</h2><p>3-Way-QuickSort也叫<a href="https://en.wikipedia.org/wiki/Dutch_national_flag_problem" target="_blank" rel="noopener">Dutch national flag problem</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">The Dutch national flag problem (DNF) is a computer science programming problem proposed by Edsger Dijkstra.The flag of the Netherlands consists of three colors: red, white and blue. Given balls of these three colors arranged randomly in a line (the actual number of balls does not matter), the task is to arrange them such that all balls of the same color are together and their collective color groups are in the correct order.</span></pre></td></tr></table></figure><p>简单的说，即给定红、白、蓝三种颜色的小球若干，将其排成一列，是相同颜色的小球相邻，三种颜色的先后顺序为红白蓝。</p><p>将问题进行简单的抽象，即蓝色为pivot值，左边的红色部分小于pivot，右边的白色部分大于pivot，中间部分为pivot，此时用到三分法-快速排序，通过三个指针将数组分为四个部分，通过一次扫描即可完成排序。</p><p><img src="https://superming.life/2020/10/07/QuickSort/3-way-quicksort.png" alt="3-way"></p><p>核心代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">three_way_partition</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;arr, <span class="keyword">int</span> target)</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">int</span> next_less_pos = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">int</span> next_scan_pos = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">int</span> next_bigger_pos = arr.<span class="built_in">size</span>() - <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">while</span>(arr[next_scan_pos] &lt;= target)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">if</span>(arr[next_scan_pos] &lt; target)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">          swap(arr[next_scan_pos++], arr[next_less_pos++]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(arr[next_scan_pos &gt; traget)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            swap(arr[next_scan_pos++], arr[next_bigger_pos--]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            next_scan_pos++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><hr><p>参考：</p><p><a href="https://www.geeksforgeeks.org/quick-sort/" target="_blank" rel="noopener">GG:QuickSort</a></p><p><a href="https://selfboot.cn/2016/09/01/lost_partition/" target="_blank" rel="noopener">被忽视的partition算法</a></p><p><a href="https://en.wikipedia.org/wiki/Dutch_national_flag_problem" target="_blank" rel="noopener">Dutch national flag problem</a></p><p><a href="https://wiki.jikexueyuan.com/project/easy-learn-algorithm/fast-sort.html" target="_blank" rel="noopener">快速排序</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;QuickSort&quot;&gt;&lt;a href=&quot;#QuickSort&quot; class=&quot;headerlink&quot; title=&quot;QuickSort&quot;&gt;&lt;/a&gt;QuickSort&lt;/h1&gt;&lt;h2 id=&quot;概念及简介&quot;&gt;&lt;a href=&quot;#概念及简介&quot; class=&quot;headerlink&quot; title=&quot;概念及简介&quot;&gt;&lt;/a&gt;概念及简介&lt;/h2&gt;&lt;p&gt;快速排序是经典的排序算法，一般来说，快速排序是排序的最佳选择，得益于其出众的平均性能，同时能够就地排序，在虚拟环境中能够很好的工作。&lt;/p&gt;
&lt;p&gt;快速排序主要基于&lt;strong&gt;分治模式（divide - and - conquer）&lt;/strong&gt;。首先对数组进行划分【分解】，通过partition函数进行划分，最后将各操作合并即可。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Algorithms" scheme="https://superming.life/tags/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title>Tsingtao</title>
    <link href="https://superming.life/2020/09/20/Tsingtao/"/>
    <id>https://superming.life/2020/09/20/Tsingtao/</id>
    <published>2020-09-20T12:15:19.000Z</published>
    <updated>2020-10-15T08:27:13.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tsingtao"><a href="#Tsingtao" class="headerlink" title="Tsingtao"></a>Tsingtao</h1><p>九月，在青岛，迷人的海滨城市。</p><p><img src="https://superming.life/2020/09/20/Tsingtao/tsing.jpeg" alt="view form Tsingtao library"></p><h2 id="市井味儿、啤酒"><a href="#市井味儿、啤酒" class="headerlink" title="市井味儿、啤酒"></a>市井味儿、啤酒</h2><p>青岛啤酒无处不在，大铁桶装着的青岛啤酒从未在视线外消失过。粗浅观察了一下，啤酒对于青岛人民来说，像是矿泉水，走道的老大爷走渴了，找个转角的啤酒屋，迫切得要上一大杯，寒暄几句，吨吨喝下，生活继续。【目睹好几次，更多的是装上塑料袋，灌满一大袋回家吨吨】。</p><a id="more"></a><p>尤其喜欢市井烟火味重的地方，旅游当然也不例外。网红打卡超级海景，永远体会不到那种闲散慵懒融入这片土地的味道。找一家青岛本地人日常吃饭的小小啤酒屋，有那么些许的杂乱，点上几碗小菜，温度适宜，短袖刚好，与友谈天说地，甚好。诧异的是，每桌默认5扎青岛扎啤，喝不完退。于是，我们成了整个菜馆最怂的一桌，在阵阵海风中和老板娘的诧异的眼神中，脑袋有那么点沉重，看着别人桌少则半打，多的直接上桶，在这座城市中，突然有那么点小小的卑微。</p><p>话说回来，青岛本地菜家常菜口味着实不错，很家常，和东北菜类似，量挺大的，一定要留好肚子，某次点了三碗喝了半扎啤酒，差点爬回家。</p><img src="https://superming.life/2020/09/20/Tsingtao/beer.jpeg" alt="beer" style="zoom:50%;"><img src="https://superming.life/2020/09/20/Tsingtao/seefood.jpeg" alt="beer" style="zoom:50%;"><p>朋友在东北出生长大，告诉我青岛本地人真的很热情，balabala。对于民风这种东西，对我而言像是种玄学，很难从几个固定的角度去考察判断。在旅行途中，与各种人交流打交道，总会有让你特别温暖的陌生人，也会有一心想敲诈你的陌生人。比较崇尚多元的我，很享受和陌生人这种莫名其妙的接触，哪怕你想敲诈我。【怪不得在哪都被敲诈】至少我回忆起来还觉得挺有趣的，比如这次旅行，有满嘴跑火车的出租车的中年大哥，一个劲教唆我去青岛最繁华的CBD下面迪厅蹦迪，跑着山路吹着风耳边听着他的青岛话“年轻人要balabala”，给我乐坏了；也有沉稳温柔的网约车女司机，我们在痛苦地在车里谈论在当地海鲜市场被宰的经历，把她也乐坏了，一个劲笑… 虽然不是什么动人故事，但旅途中这微不足道甚至很傻x的故事，还是蛮有味道的。</p><p>总的来说，碰到的本地青岛人很热情，从网约车司机到餐馆老板…都让人挺温暖的。</p><h2 id="乱扯"><a href="#乱扯" class="headerlink" title="乱扯"></a>乱扯</h2><p>对青岛历史充满热情，而青岛比较有故事有味道的点都在市南和市北区，也是本次旅行的主要活动范围。青岛老城区真的太有味道了，尤其是从青岛站到五四广场这片范围附近。路很小很精致，道边的树遮天蔽日，穿行其中真的很惬意，一位本地司机告诉我们，现在这个时候是青岛最美的时候，天气刚刚好，树叶还没落，又黄又绿的，很美。</p><p><img src="https://superming.life/2020/09/20/Tsingtao/roads.jpeg" alt="roads"></p><p>关于CBD，五四广场和市政府附近，各种商务办公楼、商场及住宅区沿着海岸线扩张，以五四广场为中心，依次排开。青岛CBD的建筑群密集又高耸，而且观赏角度可以很近，更会有别样的感觉，与上海杭州那种隔江相望不同，一街之隔的CBD让手机的超广角力不从心。有被震撼到。</p><p><img src="https://superming.life/2020/09/20/Tsingtao/square1.jpeg" alt="square1"></p><p>五四广场一群人围着听小哥哥唱歌，有牵着小手或相拥取暖的靓丽情侣，有抽着烟的中年帅大哥… 歌声伴着海风吹进每个人的心里，把大家都黏在了一起。「此情此景，几乎听哭，关键他在唱张学友，还很好听」</p><p><img src="https://superming.life/2020/09/20/Tsingtao/square3.jpeg" alt="square3"></p><p><img src="https://superming.life/2020/09/20/Tsingtao/suqare.jpeg" alt="suqare"></p><p>八大关，嗯，就是那万国建筑群，我也不懂这个风格那个风格，在欧洲老式建筑间穿行，这些屋子几乎都被一些高级餐厅啥的占领了，在门口看着文物保护的牌子，肤浅的惊呼：哦～原来这以前是捷克大使馆，哇～原来这是西班牙大使馆，卧槽，那是英国的… 肤浅的在全是上下坡的山路走着，自觉俗不可耐。景色不错，坐拥第一第二第三海水浴场，媲美大连滨海路？</p><p>中山路、栈桥、圣弥厄尔大教堂…散漫又美丽，也是我在青岛最爱逛的地方。</p><p><img src="https://superming.life/2020/09/20/Tsingtao/church.jpeg" alt="church"></p><h2 id="Coffee"><a href="#Coffee" class="headerlink" title="Coffee"></a>Coffee</h2><p>青岛咖啡店很多很杂，只要你有精力，当然还要有钱，总会找到你喜欢的。</p><p><strong>TinyCafe 晓晓咖啡</strong></p><p>关键词：无敌海景、专注意式</p><p>刚搬迁，坐落在小港码头，选址无敌，是一家无敌有趣的夫妻店。少数派的黄色潜水艇的SOE，令人惊艳的蓝莓水果味儿。小夫妻超级有趣，店内装饰都是小夫妻和咖啡之间甜甜的故事，咖啡的价格非常亲民，很难得。</p><p><img src="https://superming.life/2020/09/20/Tsingtao/tiny.jpeg" alt="beer"></p><p><img src="https://superming.life/2020/09/20/Tsingtao/tiny4.jpeg" alt="beer"></p><p><strong>十角馆</strong></p><p>关键字：个性、安静、复古、日式</p><p>老板是个异常有个性的人，说话声音很轻，给人很稳重味道，很像我以前的一个朋友，心里藏着无数个故事，内敛而又深刻，我好喜欢这样的人。</p><p>如果你不和他去交流，他真不会和你多说一句话；你慢慢和他交流到那个恰好的点，就开始慢慢展现他自己了，给我们介绍他淘的各种古董、杯子、机车模型，还会特定翻出杂志和书本来给我们看，好享受这种感觉啊。</p><p>朋友说想喝日式豆子，他掏出几款让我们挑，相中了一块日本直接进口过来的，他最后一点了，有点小小对不起他的感觉。</p><p><img src="https://superming.life/2020/09/20/Tsingtao/10angle.jpeg" alt="beer"></p><p><img src="https://superming.life/2020/09/20/Tsingtao/2.jpeg" alt="beer"></p><p><strong>77咖啡</strong></p><p>关键字：教堂、深烘</p><p>老板喜欢咖啡的那种焦苦味，一杯深烘的埃塞，有种不悦的香料味，不是我喜欢的感觉吧。怎么说呢，咖啡毕竟是很主观的东西，更多的是一种表达和态度，喜不喜欢便是你和店家之间的缘分啦。其实很喜欢这个带着京腔的爷爷，气质上就能把你征服。</p><p>他的狗狗叫拿铁，被可爱到了。我喜欢这个爷爷。</p><p><img src="https://superming.life/2020/09/20/Tsingtao/IMG_0360.jpeg" alt="IMG_0360"></p><p><strong>许国明咖啡</strong></p><p>那自己名字做咖啡店的名字，就能感受到那种气场了。整个旅途中最值得、最有价值的一次交流。对于咖啡行业的深刻洞见，眼神中无法掩盖的那种热爱，对我们问题的耐心讲解..收益匪浅，超近距离感受到了这种真正的热爱、态度和气质。</p><p>蹭了好多杯各种精品产地豆，质量真没得说。</p><p><img src="https://superming.life/2020/09/20/Tsingtao/xu1.jpeg" alt></p><p><img src="https://superming.life/2020/09/20/Tsingtao/xu5.jpeg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Tsingtao&quot;&gt;&lt;a href=&quot;#Tsingtao&quot; class=&quot;headerlink&quot; title=&quot;Tsingtao&quot;&gt;&lt;/a&gt;Tsingtao&lt;/h1&gt;&lt;p&gt;九月，在青岛，迷人的海滨城市。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://superming.life/2020/09/20/Tsingtao/tsing.jpeg&quot; alt=&quot;view form Tsingtao library&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;市井味儿、啤酒&quot;&gt;&lt;a href=&quot;#市井味儿、啤酒&quot; class=&quot;headerlink&quot; title=&quot;市井味儿、啤酒&quot;&gt;&lt;/a&gt;市井味儿、啤酒&lt;/h2&gt;&lt;p&gt;青岛啤酒无处不在，大铁桶装着的青岛啤酒从未在视线外消失过。粗浅观察了一下，啤酒对于青岛人民来说，像是矿泉水，走道的老大爷走渴了，找个转角的啤酒屋，迫切得要上一大杯，寒暄几句，吨吨喝下，生活继续。【目睹好几次，更多的是装上塑料袋，灌满一大袋回家吨吨】。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Life" scheme="https://superming.life/categories/Life/"/>
    
    
      <category term="Travel" scheme="https://superming.life/tags/Travel/"/>
    
  </entry>
  
  <entry>
    <title>世界咖啡地图</title>
    <link href="https://superming.life/2020/07/16/%E4%B8%96%E7%95%8C%E5%92%96%E5%95%A1%E5%9C%B0%E5%9B%BE/"/>
    <id>https://superming.life/2020/07/16/%E4%B8%96%E7%95%8C%E5%92%96%E5%95%A1%E5%9C%B0%E5%9B%BE/</id>
    <published>2020-07-16T10:15:19.000Z</published>
    <updated>2020-07-15T18:40:09.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《世界咖啡地图-第二版》"><a href="#《世界咖啡地图-第二版》" class="headerlink" title="《世界咖啡地图 第二版》"></a>《世界咖啡地图 第二版》</h1><p>前言：<strong>这是属于咖啡的时代，喝咖啡不仅是种享受，而且充满乐趣。</strong></p><p>《世界咖啡地图》是一本适用人群非常广的咖啡指南工具书，从小白到咖啡爱好者或是专业咖啡师，销量和很好的口碑说明了一切。是初学者眼中完美的咖啡入门指南，而对于专业选手，则是一本咖啡行业及领域的实用参考书，各种一手信息，图表对比，原产地资料等。</p><p>作者是著名的咖啡师詹姆斯 霍夫曼，2007年WBC「世界咖啡师比赛」冠军，2008年英国杯测大赛冠军。拥有一个名为<strong>Square Mile Coffee Roasters的咖啡烘焙公司</strong>，拥有17位专业人士，专注于为希望作出最好的咖啡的企业提供批发服务。而更为著名的黑鹰咖啡机VA388「少数星巴克臻选店会选用，也叫黑鹰店」出自他和另一位设计师之手，独特的重量控制系统，极大地提高了咖啡出品的稳定性，被视为划时代产品。</p><p>据说：James Hoffmann在研究咖啡的时候曾看到《世界红酒地图》这本书，想到当今还没有这样关于咖啡的书，于是这本书就诞生了。他用整整两年时间走遍了各个咖啡产区，用他的这些阅历成就了《世界咖啡地图》</p><p>本书由认识咖啡、咖啡制作、咖啡产地探源三个模块构成，并在第二版中首次将中国云南作为产地加入该咖啡地图中。</p><p>仔细阅读并作了相关笔记，打算整理一下分享出来。</p><blockquote><p>书中的内容真的很有启发很有意思，作者介绍基础的咖啡知识的同时也分享了很多自己对整个产业的思考和观察，极大引起读者的思考和兴趣。</p><p>以下记录主要为书中内容，并结合自己知识和其他书本内容辅助，旨在构建一个比较清晰明朗的咖啡知识入门框架。</p></blockquote><a id="more"></a><p><img src="https://superming.life/2020/07/16/%E4%B8%96%E7%95%8C%E5%92%96%E5%95%A1%E5%9C%B0%E5%9B%BE/jameshoffmann.png" alt="帅"></p><h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><p>咖啡产业可以被划分为两个不同的类别：商业咖啡(commodiy coffee)和精品咖啡(speciality coffee)。 本书主要聚焦于对精品咖啡的讨论，口感和品质是定义精品咖啡的标准，咖啡的产地很重要，因为产地在很大程度上决定了咖啡的风味。商业咖啡则是指不以品质来论价格，仅仅被称为咖啡的商品，对商业咖啡来说，咖啡的种植地点、采收方式及处理方式并不重要，“一种来自热带的普通商品，能让我快速获取咖啡因并保持清醒的饮品”，这是世上大多数咖啡饮用者对咖啡的认知，也可以说是商业咖啡的定义。</p><h2 id="认识咖啡"><a href="#认识咖啡" class="headerlink" title="认识咖啡　"></a>认识咖啡　</h2><p><strong>咖啡品种</strong></p><p>阿拉比卡和罗布斯塔（Arabica and Robusta）</p><p>当提及咖啡时，通常指从一个特定树种（Species）—- 咖啡树结出的果实，我们现在称这种书为阿拉比卡（Coffea arabica）。占据全球咖啡市场主要份额，在数十个咖啡生产国中种植。但目前被识别的咖啡树种超过120个，仅有一种达到阿拉比卡的普及程度，即卡内弗拉咖啡树属（Coffea canephora），也就是我们熟知的罗布斯塔（Robusta）。</p><p>罗布斯塔主要用于宣传树种特性，19世纪末最先出现于刚果。相较于阿拉比卡严苛的生产种植条件，罗布斯塔对于环境的适应程度很高，所以成本很低。问题在于，多数罗布斯塔咖啡不是很美味。但罗布斯塔咖啡全球市场率依旧占到了约40%，主要是因为速溶咖啡产业的推动，对于速溶咖啡而言，成本远大于风味，这个市场占比一般会根据市场需求浮动（全球咖啡价格等）。</p><blockquote><p>并非所有罗布斯塔豆都品质低下，制作出高质量的罗布斯塔也是可能的。</p><p>两者从基因上发现，罗布斯塔是阿拉比卡的双亲之一。</p></blockquote><p><strong>咖啡树</strong></p><p><img src="https://superming.life/2020/07/16/%E4%B8%96%E7%95%8C%E5%92%96%E5%95%A1%E5%9C%B0%E5%9B%BE/coffeetree.jpg" alt></p><blockquote><p>笔者研究较少，仅做少量摘录补充。</p></blockquote><p>咖啡生产者在选择栽培哪个品类时，风味优劣并非主要考量因素；对将种植咖啡作为日常生机来源的生产者来说，品类是否高产或有较强的抗病性更为重要。并不是说所有咖啡生产者的种植标准都源于此，但重要的一点是，我们必须有心理准备，明白生产者的抉择与他们的获利和收入息息相关。</p><p>咖啡树种植条件苛刻，一般需要年均温度20度，成长期需要充足的降水。咖啡树广泛种植在赤道附近的热带、亚热带地区。</p><p>从<strong>种子到成树</strong>，需要6-12个月，种苗可以从育苗区移植到正式咖啡园区。从种植到收获，至少需要三年时间。所以种植咖啡豆是一件需要严肃对待的事情。</p><p><strong>咖啡果实</strong></p><p>不同品种咖啡果实、大小会有很到不同，总的来说，咖啡果实体积像小号的葡萄。与葡萄不同的是，咖啡果实中心的种子占据了整颗果实的绝大部分，表皮及其底下的一层果肉占比很低。果实的<strong>成熟度</strong>通常与其含糖量的多寡直接相关，这正是种出美味咖啡的决定性因素。</p><p><strong>咖啡的种子也就是咖啡豆</strong>，结构有许多层，大部分都会在生豆精致处理阶段被去除，留下用来研磨以及冲煮的咖啡豆。种子的外壳有保护作用，称为内果皮（parchment），里面还有一层薄膜，称为银皮（silverskin）。</p><p>大部分咖啡浆果内有两对生种子，相连的一面会随着果实的生长呈平面。偶尔浆果中只有一颗种子，称为小圆豆(peaberry)，他不像平豆那样有一面是平的，而是呈椭圆形，这种情况占总体产量的5%左右。小圆豆通常会被特意分出来，因为有些人相信他有特别讨喜的特质，也有人认为小圆豆必须用不同于平豆的烘焙方式处理。</p><blockquote><p>什么是圆豆：一般来说一颗咖啡果中会有两颗平豆，只有极少数咖啡果中有一颗圆形种子。</p></blockquote><h2 id="咖啡品种（Coffee-Varieties）"><a href="#咖啡品种（Coffee-Varieties）" class="headerlink" title="咖啡品种（Coffee Varieties）"></a>咖啡品种（Coffee Varieties）</h2><blockquote><p>人工栽种的咖啡树起源于埃塞俄比亚，这一称为帝比卡(Typica)的品种直到今日仍被广泛种植；现今还有许多其他品种，一些自然突变的品种和其他杂交品种。某些品种具有明确的风味特质，有些则因生长环境细微的风土条件、栽种方式和生豆精致处理方式等因素产生不同的风味特质。</p></blockquote><p>注意：在介绍不同品种时，除非有十分明确、独特风味关联性，一般不会主动描述风味，风味受到多种因素影响，缺乏系统性研究来佐证其中的联系，容易造成误导。</p><p><strong>帝比卡（Typica）</strong></p><p>该品种是所有咖啡变种或基因筛选的原型。</p><p>荷兰是第一个将咖啡传播到世界各地并进行商业化种植的国家，帝比卡就是当时的咖啡品种。</p><p>果实通常红色，杯中风味突出，果实产量相对较少。</p><p><strong>波旁（Bourbon）</strong></p><p>留尼汪岛由帝比卡自然突变得到的品种，果实产量相对帝比卡略多。</p><p>许多专业人士认为波旁有一股独特的甜味，因此常在比赛中获奖，风味愉悦，抗虫害能力弱。</p><p>果实颜色：红果皮、黄果皮甚至橘果皮。</p><p><strong>蒙多诺沃（Mundo Novo）</strong></p><p>帝比卡及波旁的自然杂交品种。风味接近波旁。</p><p>20世纪40年代发现于巴西，以当地地名命名。</p><p>果实产量相对较高，体制较强以及较佳的抗病性被广泛种植，且能够适应巴西1000 - 1200米的海拔高度。</p><p><strong>卡杜拉(Caturra)</strong></p><p>1937年发现于巴西的波旁突变种。</p><p>果实产量较高，果实产量会超过植物的负荷，容易压断枝干导致枯萎。</p><p>高度在各品种中属于较低矮的，因此也称“侏儒品种”或“半侏儒品种”。</p><p>在哥伦比亚和中美洲特别受欢迎，巴西也很常见。</p><p>杯中风味表现优秀，随着海拔上升质量提升，产量随之递减。</p><p>果实由红色和黄色之分，高度较矮。</p><p><strong>卡图艾（Catuai）</strong></p><p>20世纪50～60年代由巴西农艺研究机构栽培的卡杜拉及蒙多诺沃的杂交品种。主要结合了卡杜拉的侏儒基因和蒙多诺沃的高产量和抗病性。</p><p>果实有红黄之分。</p><p><strong>马拉戈日皮（Maragogype）</strong></p><p>马拉戈日皮是帝比卡变种中较容易辨认的品种之一，最先发现于巴西。</p><p>豆体巨大，树叶宽大，但果实产量较少，也被称为“象豆”。</p><p>通常红色果皮。</p><p><strong>SL-28</strong></p><p>20世纪30年代，在肯尼亚的斯科特实验室（Scott Lavoratories）中由坦桑尼亚一种耐旱品种选育出来。果实成熟时呈红色，种子一般品种略大。</p><p>一般认为可以制作出水果风味明显的咖啡。</p><p>容易感染叶锈病，适合在高海拔地区种植。</p><p><strong>SL-34</strong></p><p>由法国传教士波旁（French Mission Bourbon）选育，自波旁岛带入非洲，一开始出现在坦桑尼亚，稍后被引入肯尼亚。</p><p>具有明显的水果风味，但一般认为风味略逊于SL-28。</p><p>对叶锈病抵抗力很弱，红色果皮。</p><p><strong>瑰夏(Geisha/Gesha)</strong></p><p>今天种植于巴拿马境内的瑰夏是从哥斯达黎加引进的，一般认为源头是埃塞俄比亚一个名为Gesha的小镇。</p><p>一般可以制作出有特别芳香的花朵风味咖啡，近年来因市场需求度高而价格暴涨。</p><p><strong>帕卡斯（Pacas）</strong></p><p>帕卡斯为波旁变种，与1949年在萨尔瓦多被帕卡斯家族发现。</p><p>帕卡斯品种的果皮为红色，较低矮的树丛有利于人工采收。</p><p>风味近似波旁，属于较为讨喜的类型。</p><p><strong>维拉 萨尔奇(Villa Sarchi)</strong></p><p>哥斯达黎加一个小镇被发现，因此得名。</p><p>波旁的另一个自然突变种，与帕斯卡一样有着侏儒般的低矮树丛。</p><p>目前被培育成产量极高的咖啡品种。</p><p>风味优异，红色果皮。</p><p><strong>帕卡马拉(Pacamara)</strong></p><p>1958年在萨尔瓦多人工培育出的混血品种，双亲为帕卡斯和马拉戈日皮。与马拉戈日皮一样具有较大的叶片、果实及种子，风味也有许多明显、优质的独特属性。</p><p>有巧克力和水果氛围，但可能带不讨喜的草本、洋葱的风味。</p><p>红色果皮。</p><p><strong>肯特(Kent)</strong></p><p>20世纪20年代在印度的一项选种计划中一位咖啡农的姓氏得名。</p><p>为提高抗叶锈病的能力而培育的品种。</p><p><strong>S795</strong></p><p>印度配虚的品种，肯特和S288杂交，较早被选育、具有抗叶锈病能力的品种，在印度和印尼广泛种植。</p><p><strong>野生阿拉比卡品类(Wild Arabica Varieties)</strong></p><p>以上品种基因相似度较高，因为几乎源于单一品种的帝皮卡。</p><p>而埃塞俄比亚具有很多不是人工培育的原生品类（heirloom varieties），由不同树种品类之间各种杂交，很难更具种类来分类并研究风味上的差异。</p><h2 id="采收咖啡-Harvesting-Coffee"><a href="#采收咖啡-Harvesting-Coffee" class="headerlink" title="采收咖啡(Harvesting Coffee)"></a>采收咖啡(Harvesting Coffee)</h2><p>采收咖啡是一个很基本又非常重要的环节。在咖啡果实达到最佳成熟度时采收，制作出的咖啡通常味道最棒。专家将采收阶段视为影响咖啡品质的关键。采收之后的各阶段只能保持品质而无法改变品质。</p><p>采收高质量咖啡果实面临最大挑战大概就是所在的地形了，高质量的咖啡必须种植在海拔相对较高的地区，许多咖啡庄园就位于多山区域的陡峭斜坡上。</p><p><strong>机械采收</strong></p><p>巴西境内有许多高海拔又地势平坦的区域，适合大量种植咖啡，大型庄园会将大型机械开进整齐划一的咖啡树列中，发出震动，使浆果松脱后掉落。</p><p>使用机械采收最法的问题是会采收到未完全成熟的果实。意味着采收完后必须进行分离成熟果和未熟果的工序，随着果皮掉落的断枝与树叶也必须剔除。</p><p>机械采收可以大大降低成本，但同时也会降低质量。</p><p><strong>速剥采收法</strong></p><p>一次将整个枝条上所有果实以熟练的手法快速剥除，像机械收割般快速，但相对不精确。采收的结果是成熟的果实与未熟的果实混杂，需要进一步筛选。</p><p><strong>手摘采收法</strong></p><p>为了制作高质量的咖啡，该方法依旧是最有效率的采收方式。 采收工采收成熟的浆果，未成熟的果实等成熟后再收，这是一种高强度的劳动。</p><h2 id="生豆处理-Processing"><a href="#生豆处理-Processing" class="headerlink" title="生豆处理(Processing)"></a>生豆处理(Processing)</h2><p>咖啡在采收后进行精制处理的方式对一杯咖啡的风味有很大影响，因此如何描述和推销精致处理法越来越重要。精致处理对咖啡质量影响甚巨，越来越多老练的咖啡生产者开始通过操纵精制处理流程的差异来制作特定质量的产品。</p><p>采收后，所有咖啡浆果会送到湿处理厂，在这里进行从剥除外果皮到晒干咖啡豆等系列程序，才能达到合适的存储状态。「咖啡豆的含水率从60%到11%～12%，防止运送过程中腐坏」</p><p><img src="https://superming.life/2020/07/16/%E4%B8%96%E7%95%8C%E5%92%96%E5%95%A1%E5%9C%B0%E5%9B%BE/process.jpg" alt></p><p><strong>日晒处理法(dry process)</strong></p><p>最古老的生豆精制处理法：将采收后的咖啡浆果直接铺成薄薄一层，接受阳光暴晒。有些产区会将浆果放在砖制的露台上，有些则使用特质的架高式日晒专用桌，让浆果享受更多空气对流，干燥效果更均匀。日晒过程中不断翻动浆果，避免发霉，过度发酵或腐败。当浆果达到适当含水率时（11%）用机器将外果皮及硬壳脱除，在出口前以生豆的状态保存。</p><p>日晒处理偶尔会添加宜人的好味道，但多数是令人不舒服的气味。</p><p>在全世界的产区中，日晒处理法通常被视为用来制作质量非常低或未成熟果较多批次的方式。多数选择用日晒处理高质量咖啡豆的人会发现，用日晒处理更昂贵，因为要照顾好这些豆子需要付出更多专注力以及劳动力。</p><p>不论哪个品种或在哪个微气候区域，日晒处理通常为为咖啡增加水果般的风味。所谓水果风味通常为蓝莓、草莓、热带水果等，但有时候也会产生负面风味，比如谷仓边的土地味，野性风味，过度发酵及粪便味等。</p><p>日晒处理法是一种相对难以预测的精致处理法，经过高质量采收批次有可能因为这一处理法而变质，造成难以挽回的失败和生产者的重大经济损失。</p><p><strong>水洗处理法</strong></p><p>水洗处理法的目的是在干燥程序之前去除咖啡豆上黏糊糊的果肉层，如此可大大降低干燥程序中可能出现的变量，因此咖啡豆可能会有较高的经济价值。不过会花费更多成本。</p><p>在采收后浆果会用去皮机将外果皮及大部分果肉从咖啡豆上分离，随后被引导至一个干净的水槽，浸泡水中进行发酵。</p><p>发酵程序所需的时间与许多因素有关，包括海拔高度以及周围环境的温度，温度越高的环境发酵越快。如果咖啡豆在发酵过程中浸泡太久，负面风味就会增加。</p><p>发酵完成后进行干燥，基本与日晒相同。</p><p>相较别的处理法，水洗处理法往往使得咖啡豆呈现出酸味稍高、复杂度较强及更干净的杯中特质。</p><p>干净是个非常重要的词，意指一杯咖啡没有负面风味，，如瑕疵风味或者不寻常的尖锐感（harshness）及涩感（astringency）</p><blockquote><p>水洗处理法发酵过后的污水可能产生危害环境的毒性。</p></blockquote><p><strong>以下为混合式处理法：</strong></p><p><strong>去果皮日晒处理法</strong></p><p>主要在巴西使用的处理法，由设备制造商Pinhalese经过多次实验研发出来的成果，实验方向就是用比水洗法更少的水制作出高质量的咖啡豆。</p><p>在采收之后，咖啡果实用去果皮机剥除外果皮会大部分的果肉层，直接送至露台或高架式日晒专用桌进行干燥。保留的果肉越少，越能降低瑕疵豆的风险，但小部分的果肉仍会给咖啡豆贡献更多的甜味与风味的厚实度。需要留意脱除果皮、果肉后的干燥程序。</p><p><strong>蜜处理法</strong></p><p>接近果皮日晒处理，主要在哥斯达黎加和萨尔瓦多等为数不少的中美洲国家使用。采收后的咖啡果实一样用去果皮机剥除外果皮，但会比果皮日晒处理法使用更少的水。</p><p>去果皮机可以控制让多少果肉层保留在豆表硬壳上，因此该制作可以称为100%蜜处理或20%蜜处理等。</p><p>保留越多果肉层，进行干燥程序时产生过度发酵风味的瑕疵风险就越高。</p><p><strong>半水洗处理 / 湿磨处理法</strong></p><p>印度尼西亚常用的处理法，当地称为giingbasah。采收后的浆果脱除果皮后，会进行短时间的干燥程序。</p><p>与其他处理法不同的是，这一处理法不直接将咖啡豆晒到含水量11%～12%的程度，而是晒到含水率30～35%时先脱去内果皮，让生豆表面直接暴露出来，之后继续晒干，直到达到不易腐坏、方便存储的含水率，这两次干燥方式赋予咖啡豆沼泽般的深绿色外观。</p><p>半水洗处理法使咖啡豆具备较低的酸度，同时具有更醇厚的特性，这一处理法也制作出很多不同的风味。</p><h2 id="咖啡烘培-Coffee-Roasting"><a href="#咖啡烘培-Coffee-Roasting" class="headerlink" title="咖啡烘培(Coffee Roasting)"></a>咖啡烘培(Coffee Roasting)</h2><p>在咖啡产业里，烘焙是很吸引人的一个环节。咖啡生豆几乎没有风味可言，甚至有一种不讨喜的蔬菜味。但烘焙后的就会转变为不可思议的芳香而又风味复杂的咖啡熟豆。</p><p>总的来说，全世界的精品咖啡烘焙商都依靠自我训练，其中许多通过不断试错而学到精品咖啡贸易的精髓。不同的咖啡烘焙商有各自的风格，、美学理念和烘焙哲学，对如何重视他们想要的咖啡质量十分清楚，但不见得了解烘焙全貌，因为要烘焙出不同风格可能存在困境。</p><p>简言之，咖啡烘焙指的是咖啡豆最后的颜色烘到多深，要花多长时间，轻描淡写的说某种咖啡是浅烘的，这样不够，因为这种咖啡可能是快炒也可能是慢炒，不同的烘焙速率会带来截然不同的风味体现，尽管颜色相近。</p><p>咖啡在烘焙时会发生一系列不同的化学反应，很多反应让重量减少，当然也会造成水分流失。慢炒（14～20分钟完成烘焙）会有较高的失重量比（16% ～ 18%），快炒最快可以在90s内完成。对于一杯昂贵的咖啡而言，慢炒的方式会呈现出更好的风味。</p><p>三个决定咖啡最终风味的要素必须控制得当：酸味、甜味、苦味。一般而言，总体烘焙时间越久，最后留下的酸味就越少，相反，苦味则随着烘焙时间增加而增强，也深烘焙的咖啡越苦。甜味的发展呈现钟形曲线状，介于酸味和苦味高峰之间，好的咖啡烘焙商知道如何让咖啡豆达到每个烘焙度中的甜度峰值。但无论使用酸甜程度皆强的烘法还是甜度极高，酸度较弱的烘法，如果你使用的咖啡豆质量差，调整烘焙手法可能也无济于事。</p><p><strong>咖啡烘焙阶段：</strong></p><p>第一阶段：去除水分</p><p>咖啡生豆含有7% - 11%的水分，均匀分布与整颗咖啡哦度紧密的结构中，水分较多时，咖啡豆不会变成褐色。</p><p>第二阶段：转黄</p><p>多余水分被带出咖啡豆后，褐化反应第一阶段就开始了。咖啡豆在这个阶段结构依然紧实，且带有类似印度香米及烤面包的香气。</p><p>以上阶段至关重要，如果咖啡豆水分没有被适当去除，咖啡豆在之后的烘焙阶段无法实现均匀烘焙。即使咖啡豆表面看起来无碍，内部却可能没有熟透，冲煮风味令人不悦。</p><p>第三阶段：第一爆</p><p>褐化反应加速时，咖啡豆内开始产生大量气体及水蒸气。当内部压力变大时，咖啡豆开始爆裂，发出清脆异响。同时膨胀至两倍大小。这是烘豆师就可以自行选择何时结束烘焙。</p><p>第四阶段：风味发展初期</p><p>第一爆结束后，咖啡豆表面看上去会较为平滑，但仍有少许褶皱。这个阶段决定咖啡最终上色的深度和烘焙的实际深度。</p><p>第五阶段：第二爆</p><p>到这个阶段，咖啡豆再次发出爆裂声，不过声音较为细微和密集。这个阶段内部的油脂会容易被带到豆表，大部分酸味会消退，并产生一种新的风味，称为“烘焙味”。这种风味不会因为豆子种类不同而存在差异，因为成因为炭化或焦化作用，而非来自内部固有风味成分。</p><p>将咖啡豆烘焙到第二爆阶段更深的程度是很危险的，有时可能导致火灾。</p><p>其中“法式烘焙”和“意式烘焙”等烘培程度是烘焙到很深的的咖啡豆，有典型的高浓郁度、强烈的苦味，但多数豆子自身的个性会消失。如果你想认识来自不同产地的高品质咖啡的风味及个性，建议不要选择重度烘焙的豆子。</p><p>咖啡内的糖分：</p><p>咖啡生豆含有一定的单糖成分，在烘焙温度的催化下很容易发生反应。一旦咖啡豆内大部分水分蒸发以后，糖类就会与热量开始发生不同的反应，有些会产生焦糖化作用，使某些咖啡豆产生焦糖似得调性。但焦糖化之后，糖类的甜度会降低，最终变为苦味的来源之一；此外，有些糖类会与咖啡豆内的蛋白质相互作用，产生所谓的美拉德反应(Maillard reactions)，这种反应也包括肉类在烤箱内转变为褐色的现象以及烘焙可可豆时变色现象。</p><p>一爆后，单糖基本不存在了，可能都参与了不同的化学反应，最后转变为更多不同类型的咖啡芳香化合物。</p><p><img src="https://superming.life/2020/07/16/%E4%B8%96%E7%95%8C%E5%92%96%E5%95%A1%E5%9C%B0%E5%9B%BE/bean.jpg" alt></p><p>咖啡内的酸成分：</p><p>咖啡豆中有许多酸，有些讨喜，有些不美味。对于烘豆师而言，最重要的是绿原酸(CGAs),烘焙咖啡时，重点目标是完全除去不够完美的酸，同时避免制造出更多负面风味因子，而保留更多讨喜的芳香成分。此外，有些酸在烘焙后保持稳定状态，例如：奎宁酸，会增加讨喜，干净的风味质感。</p><p>咖啡内芳香化合物：<br> 大多数咖啡的香气来自烘焙时的三大反应：美拉德反应，焦糖化反应以及斯特雷克降解反应。这些反应在咖啡烘焙时因受热而催化，最后产生超过800种不同的易挥发性芳香化合物，这就是咖啡风味的来源。</p><p>在咖啡烘焙完成后，必须快速将咖啡豆冷却，以免过度烘焙或是让咖啡豆发展出负面风味。</p><h2 id="咖啡的研磨（Grinding-Coffee"><a href="#咖啡的研磨（Grinding-Coffee" class="headerlink" title="咖啡的研磨（Grinding Coffee)"></a>咖啡的研磨（Grinding Coffee)</h2><p>研磨咖啡的目的是让咖啡豆在冲煮之前产生足够的表面积，以便萃取出封存于咖啡内部的成分。咖啡豆磨的越细，理论上就会有更大的表面积，可以用更快的速度煮出咖啡的味道，因为水有更多机会带出咖啡风味因子。</p><p>研磨机器：</p><p>螺旋桨刀片研磨机：电动研磨机十分常见，价格也不贵，机器构造是在电动马达上连接一组金属刀片，借助旋转的力量击碎咖啡豆，会产生极细和极粗的颗粒，冲泡时会导致风味很怪异。</p><p>磨盘式磨豆机：分电动和手动版本。磨盘式磨豆机有两个面对面的切割盘，通过调整切割盘的间距，可以调整研磨粗细。当咖啡豆被切割成符合间距的大小时，咖啡粉才能更均匀，同时可以调整粗细，对煮一杯好咖啡来说相当有帮助。如果你很喜欢咖啡，磨豆机的投资带给你的回报是无法以价格衡量的。冲煮意式浓缩咖啡时，颗粒大小非常重要，即使百分之一毫米的粗细差异也会造成影响。</p><p>不同机器制造商会使用不同材质制造的切割盘，比如钢或者陶瓷。一段时间后，磨盘上的刻痕会变钝，此时磨豆机不会以切割的方式磨豆子，而是以碾压的方式，这样会造成很多极细的粉末，导致咖啡乏味又苦涩。根据制造商的建议，定期更换磨盘是一项很小却很值得的投资。</p><blockquote><p>很多咖啡爱好者想升级设备，第一建议就是磨豆机。是非常值得的一项投资，一台低劣的磨豆机，很容易拉低一款咖啡豆的上限。</p></blockquote><p>研磨度调整：磨豆机并不能将咖啡豆磨成同样的大小，更具自己需求多做实验，调整到合适的研磨度。深烘焙的咖啡豆质较脆，因此必须将刻度调粗一些。同样要研磨海拔产地较高的咖啡豆，比如从巴西豆转换到肯尼亚，需要把刻度调细。</p><p><img src="https://superming.life/2020/07/16/%E4%B8%96%E7%95%8C%E5%92%96%E5%95%A1%E5%9C%B0%E5%9B%BE/grid.jpg" alt></p><p>冲煮用水：</p><p>水的角色：在意式浓缩咖啡中，水占了90%，在滤泡式咖啡中，水占了98.5%；如果冲泡咖啡的水不美味，那么咖啡也绝对不可能好喝。</p><p>在冲煮过程中，水扮演着溶剂的角色，负责萃取出咖啡粉内的风味成分，因为水的硬度以及矿物质含量会影响咖啡的萃取效率，所以水质相当重要。</p><p>硬度：水的硬度指水中含有多少水垢（碳酸钙）数值。硬水会改变咖啡粉内可溶出物质的比例，进而改变咖啡的化学成分比例，理想的水硬度较低，如果含量过高甚至极高，不适合泡咖啡。矿物质含量：不希望水中有太多其他东西：即含量很低的矿物质。</p><hr><p>UPDATING…</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;《世界咖啡地图-第二版》&quot;&gt;&lt;a href=&quot;#《世界咖啡地图-第二版》&quot; class=&quot;headerlink&quot; title=&quot;《世界咖啡地图 第二版》&quot;&gt;&lt;/a&gt;《世界咖啡地图 第二版》&lt;/h1&gt;&lt;p&gt;前言：&lt;strong&gt;这是属于咖啡的时代，喝咖啡不仅是种享受，而且充满乐趣。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;《世界咖啡地图》是一本适用人群非常广的咖啡指南工具书，从小白到咖啡爱好者或是专业咖啡师，销量和很好的口碑说明了一切。是初学者眼中完美的咖啡入门指南，而对于专业选手，则是一本咖啡行业及领域的实用参考书，各种一手信息，图表对比，原产地资料等。&lt;/p&gt;
&lt;p&gt;作者是著名的咖啡师詹姆斯 霍夫曼，2007年WBC「世界咖啡师比赛」冠军，2008年英国杯测大赛冠军。拥有一个名为&lt;strong&gt;Square Mile Coffee Roasters的咖啡烘焙公司&lt;/strong&gt;，拥有17位专业人士，专注于为希望作出最好的咖啡的企业提供批发服务。而更为著名的黑鹰咖啡机VA388「少数星巴克臻选店会选用，也叫黑鹰店」出自他和另一位设计师之手，独特的重量控制系统，极大地提高了咖啡出品的稳定性，被视为划时代产品。&lt;/p&gt;
&lt;p&gt;据说：James Hoffmann在研究咖啡的时候曾看到《世界红酒地图》这本书，想到当今还没有这样关于咖啡的书，于是这本书就诞生了。他用整整两年时间走遍了各个咖啡产区，用他的这些阅历成就了《世界咖啡地图》&lt;/p&gt;
&lt;p&gt;本书由认识咖啡、咖啡制作、咖啡产地探源三个模块构成，并在第二版中首次将中国云南作为产地加入该咖啡地图中。&lt;/p&gt;
&lt;p&gt;仔细阅读并作了相关笔记，打算整理一下分享出来。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;书中的内容真的很有启发很有意思，作者介绍基础的咖啡知识的同时也分享了很多自己对整个产业的思考和观察，极大引起读者的思考和兴趣。&lt;/p&gt;
&lt;p&gt;以下记录主要为书中内容，并结合自己知识和其他书本内容辅助，旨在构建一个比较清晰明朗的咖啡知识入门框架。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Books" scheme="https://superming.life/categories/Books/"/>
    
    
      <category term="Coffee" scheme="https://superming.life/tags/Coffee/"/>
    
      <category term="Books" scheme="https://superming.life/tags/Books/"/>
    
  </entry>
  
  <entry>
    <title>Apple保修政策</title>
    <link href="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/"/>
    <id>https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/</id>
    <published>2020-06-29T10:15:19.000Z</published>
    <updated>2020-10-15T08:28:07.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Apple-保修政策-「更新至Mac、iPhone、AirPods」"><a href="#Apple-保修政策-「更新至Mac、iPhone、AirPods」" class="headerlink" title="Apple 保修政策-「更新至Mac、iPhone、AirPods」"></a>Apple 保修政策-「更新至Mac、iPhone、AirPods」</h1><p>自从用上Apple全家桶之后，日常生活已逐渐离不开Apple生态的产品了，而从产品角度来讲，不可避免会有所损伤或故障，这时候就很有必要了解一下相关产品的保修政策了。借此机会梳理一下Apple主要产品的保修政策。</p><blockquote><p>AppleCare+ 简称AC+。</p></blockquote><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>很多Apple用户对于Apple提供的相关保修政策可能不是很了解，先介绍一下。若了解可直接跳过。</p><p>以下讨论为国行机器，虽然Apple产品全球联保，但经过与Apple Store相关店员确认，因为每个国家都有其保修政策，具体实施上会根据硬件产品的相关差别产生很大的影响「配件不通用等问题」，可能无法保证服务质量。</p><p>Apple原话：</p><blockquote><p>当你购买 Apple 硬件产品时，你还将获得 Apple 一年有限保证项下的保修服务。通过购买可选的 AppleCare Protection Plan 全方位服务计划，你还可以获得其他额外益处。 根据三包规定，Mac 和 iPad 的主要部件将获得自购买日起两年的保修服务。 Apple 尊重中国的国家法律和地方法规。根据浙江的地方三包规定，浙江省的 Mac 台式电脑产品享有整机三年保修服务。</p></blockquote><a id="more"></a><p>据描述，若是在中国购买的Apple产品，Apple提供的以下保修服务：</p><ul><li>中国三包政策</li><li>Apple 一年有限保修服务</li><li>（可选）AppleCare Protection Plan 全方位服务计划</li></ul><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/2.png" alt="1"></p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/3.png" alt="3"></p><p><strong>如何区分以上几个政策：</strong></p><p><strong>中国三包政策</strong>：是政府为保障消费者权益而设立的政策，对相关电子产品的保修服务等作出强制的售后规定。苹果要卖电子产品必须遵守的。可以简单理解为是<strong>国内的标准三包</strong>，仅适合国内保修。</p><p><strong>Apple 一年有限保修服务</strong>：这个可以理解为<strong>Apple自己设立标准的三包</strong>，包含90天的电话技术支持，保修期限为一年，适合全球联保。</p><p><strong>AppleCare Protection Plan 全方位服务计划</strong>：即是AppleCare+服务计划，钱购买Apple的保险服务，主要特点在于延长了保修期限，Apple技术支持，<strong>最主要的是包含了因意外使用导致设备损坏，可以大大降低维修费用</strong>，且支持全球联保，可以在全球任何Apple门店享受以上服务。</p><blockquote><p>除了AC+之外的保修服务主要是Apple产品因为质量问题导致的故障。</p></blockquote><h2 id="Mac保修政策"><a href="#Mac保修政策" class="headerlink" title="Mac保修政策"></a>Mac保修政策</h2><p>首先了解一下Appe产品在中国的官方保修政策，也就是只要你购买，就享有以下保修服务：</p><blockquote><p><strong>保修期限</strong></p><ul><li>Mac <strong>电脑整机及所含附件</strong>自原始购买之日起享有 1 年保修期。</li><li><strong>主要部件</strong>享有自购买之日起 2 年保修期。<ul><li>Mac 台式电脑所有主要部件包括：主板 (MLB)、处理器 (CPU)、内存、硬盘 (HDD/SSD)、电源和显卡。</li><li>Mac 笔记本电脑所有主要部件范围包括主板 (MLB)、处理器 (CPU)、内存、硬盘 (HDD/SSD)、电源适配器、键盘和显示屏 (LCD)。</li></ul></li></ul><p><strong>维修方式</strong></p><ul><li>根据具体的故障情况对设备进行维修。</li><li>所有更换的部件和附件都是全新的。</li><li>更换的<strong>非主要部件和附件</strong>享受原有保修期的剩余时长或自更换日起 90 天的保修期，以二者中期限较长者为准。更换后的<strong>主要部件</strong>享有重新计算的 2 年保修期。</li></ul></blockquote><p>需要注意的是主要部件和非主要部件和附件之间的区分。两者的保修策略是不同的。在部件使用保修之后，根据保修部件重置保修时长。</p><p>划重点：</p><p>Apple在保修中特别提到：<strong>如果在浙江购买的台式机电脑可以享受整机3年保修</strong>（也就是所有部件），约等于免费赠送AppleCare的延保计划。而且是整机3年保修，不再分主次部件之分。但是限制条件是：<strong>在浙江购买的Mac台式电脑只有在浙江当地指定的维修点才能享受所有部件三年的保修。</strong></p><p>该政策的问题在于Apple通过何种方式鉴别是否为浙江省购买的用户，若冲这个服务去的，最佳的方案是在Apple浙江的零售店「天一广场店、杭州万象城店、西湖店」进行产品的购买，并保留购买凭证，然后有问题去浙江的门店维修。「有反馈说官网买，浙江地区收货，店员拒绝承认是浙江购买的例子，故最保险的还是去Apple Store购买」具体的维修政策可能有很大差异，视帮你维修的店员为准。</p><h3 id="Mac的AppleCare-服务"><a href="#Mac的AppleCare-服务" class="headerlink" title="Mac的AppleCare+服务"></a>Mac的AppleCare+服务</h3><p>Mac的AppleCare服务相关政策参考链接：<a href="https://www.apple.com.cn/support/products/mac/" target="_blank" rel="noopener">AppleCare</a></p><blockquote><p>适用于 Mac 的 AppleCare+ 服务计划可提供长达 <strong>3 年的专家技术支持</strong>，以及来自 <strong>Apple 的额外硬件保修服务</strong>，包括<strong>最多两次意外损坏保修服务</strong>，每次需收取相应的服务费：对于屏幕损坏或机身外壳损坏，收取 RMB 799 的服务费；对于其他损坏，收取 RMB 2299 的服务费。服务期自购买 AppleCare+ 服务计划之日开始。</p><p>中国的消费者权益保护法包括“三包”规定，赋予了消费者自购买 Mac 之日起 2 年的主要部件质量问题保修服务。在浙江省，消费者权益保护法赋予了消费者自购买之日起 3 年的台式电脑质量问题保修服务。在此基础之上，大多数 Apple 产品也附带 90 天的免费电话技术支持，以及来自 Apple 的 1 年有限保修服务。</p></blockquote><p><strong>重点整理：</strong></p><ul><li><p>三年专家技术支持</p></li><li><p>硬件维修范围</p><ul><li><p>你的Mac电脑、所含配件、Apple内存、AirPort、Apple USB全能光驱  「<strong>以上硬件在保修范围内被鉴定损坏，可享受免费保修</strong>」</p></li><li><p>最多两次意外损坏保修服务，屏幕损坏或机身外壳损坏，收取799服务费，其他损坏，收取2299服务费。「<strong>意外损坏非产品质量问题，而是你使用不当造成的损坏，但收费远低于过保的价格</strong>」</p><blockquote><p>这边涉及的其他损坏，一般涉及主板相关的更换，我咨询过杭州湖滨银泰的Apple Store，仅仅是键盘损坏，就需要对整块主板进行更换。</p></blockquote></li></ul></li><li><p>电池维修服务</p><ul><li>当电池容量低于原规格标示的80%左右时，可以获得电池维修服务。「<strong>免费更换</strong>」</li></ul></li><li><p>软件支持</p><ul><li>masOS 和 iCloud的使用</li><li>快速解答各种Apple品牌app的使用方法问题。</li></ul></li></ul><p>对于意外损坏之外的硬件产品，只要是三年内非人为损坏，均可进行免费的维修和更换，不需要材料的维修费用和维修人工费用。而其余的人为损坏，比如倒水导致主板烧掉，屏幕摔坏等等，即可享受意外损坏保修服务。不论电池或者意外损坏，一次便可回本，对于高强度使用者，或者平日比较马大哈的朋友，是很值得考虑的一个选项。</p><blockquote><p>Mac的电池损耗次数设定为1000次。若外出需求较大，三年内即便正常使用很容易达到规定的循环次数，也就是电池容量损耗至80%以下，免费更换一下电池，继续挺几年，还是比较划算的。</p></blockquote><p>保外的电池更换费用如下「血贵」：</p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/4.png" alt="xx"></p><h3 id="不在AppleCare保修范围内的情况："><a href="#不在AppleCare保修范围内的情况：" class="headerlink" title="不在AppleCare保修范围内的情况："></a>不在AppleCare保修范围内的情况：</h3><p><strong>下列条款适用于所有AppleCare产品</strong></p><p><a href="https://www.apple.com/legal/sales-support/applecare/appmacchszh.html" target="_blank" rel="noopener">链接</a></p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/5.png" alt></p><h3 id="Apple-Care购买"><a href="#Apple-Care购买" class="headerlink" title="Apple Care购买"></a>Apple Care购买</h3><ol><li><p>AppleCare+ 服务计划可在购买新 Mac 的同时进行购买。</p></li><li><p>或可在购买 Mac 之日起 60 天内通过以下方式进行购买：</p></li><li><ul><li>前往 Apple Store零售店 (需检查你的 Mac 及其购买凭证)</li><li>致电 400-666-8800 (需运行远程诊断功能并提供购买凭证)</li></ul></li></ol><h3 id="AppleCare取消或转让"><a href="#AppleCare取消或转让" class="headerlink" title="AppleCare取消或转让"></a>AppleCare取消或转让</h3><p>只要没有超过AppleCare的保障期限，AppleCare是可以无理由退订或转让的。但是退款费用上回根据实际情况调整。</p><blockquote><ul><li>如果在购买 AppleCare 计划之日起的 30 天内取消该计划，您则将获得全额退款，但要扣除所有已提供服务的相应费用。</li><li>如果您在购买 AppleCare 计划的 30 天后取消这一计划，则会根据 AppleCare 计划保障的未到期天数按比例退款，并扣除所有已提供服务的相应费用。</li></ul></blockquote><p>费用折损计算：</p><blockquote><p>如果您在购买本计划或接受本计划的条款和条件（以后发生者为准）的三十 (30) 天内取消，您将收到在扣除已根据本计划提供服务的服务费后的全部退款。<strong>如果您在收到本计划的三十 (30) 天后取消，您将获得的退款金额为：本计划原购买价格的按比例退款（具体比例取决于自购买本计划之日算起的剩余保修期所占百分比）减去 (a) 取消手续费，即 160 元（人民币）或按比例退款金额的 10%（以二者中较低者为准）</strong></p></blockquote><p>转让手续：</p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/6.png" alt></p><h2 id="iPhone保修政策"><a href="#iPhone保修政策" class="headerlink" title="iPhone保修政策"></a>iPhone保修政策</h2><p>iPhone的AC+政策略微复杂，还包含了Apple推出的年年换新活动。<a href="https://www.apple.com.cn/support/products/iphone/" target="_blank" rel="noopener">AppleCare For iPhone</a></p><p>价格：</p><blockquote><p>iPhone11、iPhoneXR、iPhone 8 Plus：1399元</p><p>iPhone11 Pro、iPhone 11 Pro Max、iPhone 11 XS、iPhone 11 XS Max：1799元</p></blockquote><p>介绍：</p><blockquote><p>每部 iPhone 均可在有限保修期内享有 <strong>1 年的硬件保修服务</strong>和<strong>长达 90 天的免费电话技术支持</strong>。适用于 iPhone 的 AppleCare+ 服务计划可为你提供自购买该服务计划之日起为期 2 年的维修服务，还可获得最多两次意外损坏保修服务，每次需收取相应的服务费：对于屏幕损坏，收取 RMB 188 的服务费；对于其他任何损坏，收取 RMB 628 的服务费。</p></blockquote><p>具体内容：</p><blockquote><ol><li>保修从1年升至2年。</li><li>优先获得Apple专家的帮助，主要大城市提供当日服务。</li><li>硬件维修包含：iPhone整机、电池、包含的耳机和配件。</li><li>最多两次意外损坏保修服务，屏幕损坏，每次收取188元；其他损坏，每次收取628元。</li><li>电池容量低于原规格标示的80%时，可获得电池维修服务。</li><li>解决软件支持相关问题。</li></ol></blockquote><p>所有AC+如果全款购买，均可在中途退款取消或者转移。</p><h3 id="那么iPhone的AC-划算吗？"><a href="#那么iPhone的AC-划算吗？" class="headerlink" title="那么iPhone的AC+划算吗？"></a><strong>那么iPhone的AC+划算吗？</strong></h3><h4 id="电池"><a href="#电池" class="headerlink" title="电池"></a>电池</h4><p>根据朋友使用情况及查阅相关资料了解，iPhone电池在2年内用到80%以下，还是有点难度的，应该需要超级重度暴力使用才能做到，想要蹭电池免费换新看运气。</p><p>保外相关维修费用如图，</p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/9.png" alt="维修"></p><h4 id="屏幕维修"><a href="#屏幕维修" class="headerlink" title="屏幕维修"></a>屏幕维修</h4><p>部分型号屏幕更换费用如下：</p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/11.png" alt></p><p>简单算一下，如果使用的是iPhone 11，在2年内屏幕坏了一次，需要花费1399的AC+购买费用和188的屏幕维修费，总计1587元。而单次维修费用为1549元，购买AC+的成本甚至更高。</p><p>假设用户更厉害一点，一年坏了两次屏幕，则购买AC+后的维修费用为1775元，未购买AC+的费用为3098元。这种情况貌似有点划算，但前提是用户够狠。</p><h4 id="其他维修定价"><a href="#其他维修定价" class="headerlink" title="其他维修定价"></a>其他维修定价</h4><blockquote><p>是否需要针对其他问题（如<strong>主屏幕按钮、浸液损坏或配件</strong>）进行维修？</p><ul><li>如果您的 iPhone 问题在 Apple 保修、AppleCare 计划或消费者权益法的保障范围内，我们不会收取任何费用。<strong>这不包括意外损坏，意外损坏的维修会产生一定的费用。</strong></li><li>如果您的 iPhone 存在意外损坏，而您享有 AppleCare+ 服务计划保障，则<strong>可使用其中的一次意外损坏保障来将维修纳入保障范围</strong>。如下文所示，每次提供意外损坏保障时都会收取一定的 AppleCare+ 服务计划服务费。 </li><li>如果您的 iPhone 已损坏，而您不享有 AppleCare+ 服务计划保障，<strong>则维修费用会因具体的维修内容而异，最高不会超出下文所示的保外维修费用</strong>。这些保外维修价格适用于由 Apple 提供的维修。Apple 授权服务提供商可能会自行设定相应的费用。</li></ul></blockquote><p>这里就当主板维修费用，详细如下：</p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/10.png" alt></p><p>再次以iPhone11举例，使用AC+进行一次主板维护需要花费1399元的AC+购买费用以及628元的主板维修费用，总计2027元。而单次维修需要3109元。</p><p>血赚有没有？有个头。但问题是，多少用户会在使用的时候把主板都用烂，而且在两年之内，我想几率应该很小很小。你要是喜欢带着iPhone潜水，推荐购买。</p><h3 id="综上"><a href="#综上" class="headerlink" title="综上"></a>综上</h3><p>iPhone的AC+的保修条件相对比较难达到，且一般可以通过改变使用方式等进行避免。</p><p>但如果有摔手机等其他特殊癖好，对Apple屏幕、主板等质量信不过的朋友，非常推荐购买。</p><p>当然，重度使用者对电池消耗也相对较大，可以购置一个AC+以防万一。</p><p>性价比如上描述，最后根据个人情况选择即可。</p><h3 id="年年换新"><a href="#年年换新" class="headerlink" title="年年换新"></a>年年换新</h3><p>最后介绍一下Apple的年年换新活动，具体政策查看链接啊：<a href="https://www.apple.com.cn/shop/iphone/iphone-upgrade-program" target="_blank" rel="noopener">iPhone年年换新计划</a></p><p>官方介绍挺明白的：</p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/12.png" alt></p><p>年年换新购买条件之一是需要在Apple Store零售店购买手机的同时购入AppleCare+计划。应该是Apple希望回收的时候保证机子的质量。</p><p>主要<a href="https://www.apple.com.cn/legal/sales-support/iphoneupgrade_cn/" target="_blank" rel="noopener">年年换新条款</a>如下：</p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/13.png" alt="f"></p><p>需要留意的是在换购时需要保证iPhone状态完好，如第六条所示。</p><p>举个例子，如果你使用iPhone11，且满足换新条件，原价6000购入，在条件期间购买新款手机可以抵价3000元。</p><p>但一年使用的手机带AC+，按苹果二手回收价格来看，感觉不是很划算。根据需求判断。</p><h2 id="Airpods保修政策"><a href="#Airpods保修政策" class="headerlink" title="Airpods保修政策"></a>Airpods保修政策</h2><p>介绍：</p><blockquote><p>AppleCare+ 服务计划可为 AirPods、Beats 入耳式耳机或 Beats 头戴式耳机<strong>提供自购买该服务计划之日起长达 2 年的专家技术支持，以及额外硬件保修服务，还可获得最多两次意外损坏保修服务，每次收取 RMB 199 的服务费</strong>。</p><p>中国的消费者权益保护法包括“三包”规定，赋予了消费者自购买之日起 3 个月的有线耳机质量问题保修服务。在此基础之上，大多数 Apple 产品还附带 90 天的免费电话技术支持，以及来自 Apple 的1 年有限保修服务。</p></blockquote><p>Airpods默认一年保修，是针对<strong>产品本身质量问题</strong>导致的问题提供一年的保障，比如电池非正常老化，蓝牙连接不稳定，电流声严重等产品质量上的问题。</p><p>但不包含意外损坏，<strong>比如喝汤的时候耳机掉到碗里淹死了，被朋友用诺基亚砸烂，用户酷爱解剖等意外不可控因素</strong>，若日常生活中可能包含以上条件，那么AppleCare+的重要性不言而喻。</p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/8.png" alt="e"></p><p>AC+具体内容：</p><blockquote><p>1.保修延长至两年，优先获得技术支持。</p><p>2.电池容量低于80%可以<strong>免费</strong>换新。</p><p>3.若在保修的两年期限内，被诺基亚砸烂了，给耳机洗澡了，解剖了等等，我在购买AC+的时候特地问过店员，只要你把耳机尸体拿到店里，仍然能够识别出是你的耳机（序列号检测），耳机坏了就换耳机，壳子坏了换壳子，两个都坏了就都换，<strong>算一次意外保修</strong>，只需要再支付199元的服务费即可。而且他也特地强调了<strong>只换不修</strong>，因为使用了高精密的Sip封装，维修难度及成本不如换新来的方便。「具体售后为准」</p><p>4.USB充电线也包含在内，不包含在意外次数内的。</p></blockquote><p>但是需要明确的是，不能丢！！<strong>AppleCare+不为丢失或被盗的Airpods提供保障</strong>。详见：<a href="https://support.apple.com/zh-cn/airpods/repair/service" target="_blank" rel="noopener">Airpods服务和维修</a></p><p><img src="https://superming.life/2020/06/29/Apple%E4%BF%9D%E4%BF%AE%E6%94%BF%E7%AD%96/7.png" alt="x"></p><h3 id="为什么我认为这是性价比最高的AppleCare"><a href="#为什么我认为这是性价比最高的AppleCare" class="headerlink" title="为什么我认为这是性价比最高的AppleCare+"></a>为什么我认为这是性价比最高的AppleCare+</h3><ol><li>电池。根据以往几代反应的情况来看，如果你是中度或者重度使用，两年内电池是很难挺住的。假设耳机一天一次电池循环，两年内500次循环一般也挺不住。这时候就可以拿去售后检测换一个全新的耳机，还是挺香的。</li><li>因为是真无线耳机，摆脱线控之后，适用各种使用场景，场景一多，意外受损的几率就大很多，购买AC+在使用时便会舒心很多。</li><li>假设你要转卖，转卖前使用意外险换新还能卖个好价钱。</li><li>保外维修费用昂贵。AirPods Pro单只耳机和充电盒均705元 电池379元，AirPods单只耳机和无线充电盒均549元，有线的盒子479元，电池379元。「一次意外保险费用算上AC+为 299 + 199 = 499，相当于499换新」</li></ol><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>购买AC+后的凭证需要保存好，流程一般会要求提供耳机购买凭证、AC+购买凭证以及耳机尸体才可以保修。</p><p>最好通过Apple官方渠道购买AC+，看到有第三方直接用AC+的名字让消费者购买却不是Apple官方的AC+。</p><p>尽量避免极限使用获取更长久的电池续航。</p><blockquote><p>AC+并不便宜，受财力限制及各种分析未购买AC+，且打算小心使用耳机的朋友，<strong>好好充电是很重要的</strong>，Apple产品质量上出问题的可能性不是很大，但电池损耗属于物理性损耗，电池产业在技术上没有革新的情况下，即使Apple使用了较好的电池，也很难避免电池的损耗，一般消费级电子产品使用多为锂电池，切忌将电量用到极低后再进行充电（20%以下），此时对于电池寿命的损耗是很大的。</p></blockquote><hr><p>参考：</p><p><a href="https://post.smzdm.com/p/akmr45nr/" target="_blank" rel="noopener">AppleCare 扫盲帖，三年苹果狗告诉你 AppleCare 到底值不值得买？</a></p><p><a href="https://support.apple.com/zh-cn/warranties" target="_blank" rel="noopener">中国官方保修政策</a></p><p><a href="https://www.apple.com.cn/support/products" target="_blank" rel="noopener">AppleCare 产品</a>,</p><p><a href="https://www.apple.com.cn/legal/statutory-warranty/" target="_blank" rel="noopener">Apple 产品与中国消费者权益相关法律法规</a></p><p><a href="https://support.apple.com/zh-cn/repair/products" target="_blank" rel="noopener">产品服务和维修信息</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Apple-保修政策-「更新至Mac、iPhone、AirPods」&quot;&gt;&lt;a href=&quot;#Apple-保修政策-「更新至Mac、iPhone、AirPods」&quot; class=&quot;headerlink&quot; title=&quot;Apple 保修政策-「更新至Mac、iPhone、AirPods」&quot;&gt;&lt;/a&gt;Apple 保修政策-「更新至Mac、iPhone、AirPods」&lt;/h1&gt;&lt;p&gt;自从用上Apple全家桶之后，日常生活已逐渐离不开Apple生态的产品了，而从产品角度来讲，不可避免会有所损伤或故障，这时候就很有必要了解一下相关产品的保修政策了。借此机会梳理一下Apple主要产品的保修政策。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AppleCare+ 简称AC+。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;很多Apple用户对于Apple提供的相关保修政策可能不是很了解，先介绍一下。若了解可直接跳过。&lt;/p&gt;
&lt;p&gt;以下讨论为国行机器，虽然Apple产品全球联保，但经过与Apple Store相关店员确认，因为每个国家都有其保修政策，具体实施上会根据硬件产品的相关差别产生很大的影响「配件不通用等问题」，可能无法保证服务质量。&lt;/p&gt;
&lt;p&gt;Apple原话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当你购买 Apple 硬件产品时，你还将获得 Apple 一年有限保证项下的保修服务。通过购买可选的 AppleCare Protection Plan 全方位服务计划，你还可以获得其他额外益处。 根据三包规定，Mac 和 iPad 的主要部件将获得自购买日起两年的保修服务。 Apple 尊重中国的国家法律和地方法规。根据浙江的地方三包规定，浙江省的 Mac 台式电脑产品享有整机三年保修服务。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="https://superming.life/categories/Tech/"/>
    
    
      <category term="Apple" scheme="https://superming.life/tags/Apple/"/>
    
      <category term="Tech" scheme="https://superming.life/tags/Tech/"/>
    
  </entry>
  
  <entry>
    <title>Mapreduce</title>
    <link href="https://superming.life/2020/05/18/Mapreduce/"/>
    <id>https://superming.life/2020/05/18/Mapreduce/</id>
    <published>2020-05-18T01:58:58.000Z</published>
    <updated>2020-10-15T08:27:39.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mapreduce"><a href="#Mapreduce" class="headerlink" title="Mapreduce"></a>Mapreduce</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>分布式并行编程可以大幅提高程序性能，实现高效的批量数据处理。分布式程序运行在大规模计算机集群上，集群中包含大量廉价服务器，能够并行执行大规模数据处理任务，从而获得海量的计算能力。MapReduce就是一种并行编程模型，用于大规模数据集的并行运行，将复杂的，运行于大规模集群上的并行计算高度抽象到两个函数<strong>Map</strong>和<strong>Reduce</strong>，两个函数及其核心思想源自函数式编程语言。</p></blockquote><p>谷歌最先提出了分布式并行编程模型MapRecude，Hadoop MapReduce是其开源实现。前者运行在DFS上，后者运行在HDFS上。</p><p>在MapReduce中，一个存储在分布式文件系统中的大规模数据集会被切分为许多独立的小数据块，这些小数据块可以被多个Map任务并行处理。<u>MapReduce框架会为每个Map任务输入一个<strong>数据子集</strong>，Map任务生成的结果会继续作为Reduce任务的输入，最终由Reduce任务输出最后结果，并写入分布式文件系统。</u>「适合用MapReduce来处理的数据集需要满足一个前提条件：待处理的数据集可以分解成许多小的数据集，而且每个小数据集都可以完全并行进行处理。」</p><p>MapReduce的一个设计理念为<strong>“计算向数据靠拢”</strong>而非“数据向计算靠拢”。主要是因为移动数据需要大量的网络传输开销，尤其在大规模数据环境下，移动计算比移动数据更加经济。所以在集群中，MapReduce框架会将每个Map程序就近在HDFS数据所在的节点运行，即将计算节点和存储节点一起运行，减少移动数据开销。</p><p>综上，MapReduce是一个<strong>基于集群的高性能并行计算平台</strong>，MapReduce是一个<strong>并行计算软件框架</strong>，MapReduce是一个<strong>并行程序设计模型与方法</strong>。</p><h2 id="模型介绍"><a href="#模型介绍" class="headerlink" title="模型介绍"></a>模型介绍</h2><p>MapReduce核心是Map函数和Reduce函数，开发者只需要关注Map和Reduce函数的实现即可，不需要处理其他复杂的问题，比如分布式存储、工作调度、负载均衡等。</p><p>MapReduce使用列表和键值对&lt;key, value&gt;作为主要的数据模式。</p><p><img src="https://superming.life/2020/05/18/Mapreduce/structure.png" alt></p><h3 id="Map函数"><a href="#Map函数" class="headerlink" title="Map函数"></a>Map函数</h3><p>Map函数的输入来自分布式文件系统的文件快，这些文件块的格式是任意的，可以是文档，也可以是二进制格式的。文件块是一系列元素的集合，这些元素也是任意类型的。Map函数将输入元素转化为键值对，<strong>键和值的类型也是任意的</strong>，其中键不同于一般的标志属性，键没有唯一性，不能作为输出身份标识。即使是同一输入元素也可以通过Map任务生成具有相同键的多个&lt;key, value&gt;。</p><h3 id="Reduce函数"><a href="#Reduce函数" class="headerlink" title="Reduce函数"></a>Reduce函数</h3><p>Reduce函数的任务就是将输入的一系列具有相同键的键值对以某种方式组合起来，输出处理后的键值对，输出结果会合并成一个文件。用户可指定Reduce任务个数，通知实现系统，然后主控进程通常选择一个Hash函数，Map任务输出的每个键都会经过Hash函数计算，并更具哈希结果将该键值对输入相应的Reduce任务处理。</p><p><img src="https://superming.life/2020/05/18/Mapreduce/process.png" alt></p><h3 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h3><p><img src="https://superming.life/2020/05/18/Mapreduce/workflow.png" alt></p><p>MapReduce的核心思想可以用“分而治之”描述，如上流程图可知，即将一个大的数据集拆分成多个小数据块在多台机器上并行处理。Map任务一般在数据节点上运行，以减少多余开销。只有在Map任务结束后，中间结果会被分发到多个Reduce中。</p><p>需要注意的是：不同的Map任务之间不会进行通讯，不同的Reduce任务之间也不会发生任何信息交换；用户不能显式地从一台机器向另一台机器发送消息，所有数据交换都通过MapReduce自身去实现的。</p><p>在执行过程中，Map任务输入文件，Reduce任务的处理结果保存在分布式文件系统中，而Map任务处理得到的中间结果则保存在本地磁盘中，只有Map任务处理结束后，Reduce过程才开始；所以Map任务需要考虑到数据的局部性。</p><h3 id="任务执行"><a href="#任务执行" class="headerlink" title="任务执行"></a>任务执行</h3><p>MapReduce执行阶段如下：</p><p><img src="https://superming.life/2020/05/18/Mapreduce/phase.png" alt></p><ol><li>MapReduce使用<strong>InputFormat</strong>模块作为Map的预处理；然后将输入文件切分为逻辑上的多个<strong>InputSplit</strong>，<em>InputSplit是MapReduce对文件进行处理和运算的输入单位。</em>「实际上InputSplit并没有对文件进行切割，而是记录了需要处理数据的位置和长度」</li><li>通过<strong>RecordReader</strong>（RR）根据InputSplit里面的信息处理具体数据，加载数据并转换为适合的Map任务读取的键值对，输入给Map任务。</li><li>Map根据用户自定义的映射规则，输出一些列键值对作为中间结果。</li><li>为了让Reduce可以并行处理Map的结果，需要对Map的输出进行一定的分区(Portition)、排序(Sort)、合并(Combine)、归并(Merge)等操作，得到中间结果，然后交给对应的Reduce处理，该过程为<strong>Shuffle</strong>。从无序的键值对到有序的键值对。</li><li>Reduce以一系列中间结果作为输入，执行用户定义的逻辑，输出结果给OutputFormat模块。</li><li><strong>OutputFormat</strong>模块验证输出目录是否已经存在以及输出结果类型是否符合配置文件中的配置类型，如果都满足，就输出Reduce结果到分布式文件系统。</li></ol><h3 id="Shuffle过程"><a href="#Shuffle过程" class="headerlink" title="Shuffle过程"></a>Shuffle过程</h3><p>Shuffle是MapReduce的核心环节。Shuffle过程即对Map输出结果进行分区、排序、合并等处理交给Reduce过程，故分为Map端操作和Reduce端操作，Shuffle过程如下图。</p><p><img src="https://superming.life/2020/05/18/Mapreduce/Shuffle1.png" alt></p><p>Map的输出结果首先被写入缓存，缓存满后进行溢写操作，即把缓存中的数据写入磁盘文件，清空缓存。当启动溢写操作时，首先把缓存中的数据写入分区，然后对每个分区的数据进行排序、合并，之后再写入磁盘文件。每次溢写操作生成一个新的磁盘文件，随着Map任务执行，磁盘中就会有多个溢写文件，任务结束后，这些文件被归并（Merge）为一个大的磁盘文件。然后通知Reduce任务领取属于自己处理的数据。Reduce任务领取数据后，将其归并写入磁盘后交给Reduce处理。</p><h4 id="Map端的Shuffle过程"><a href="#Map端的Shuffle过程" class="headerlink" title="Map端的Shuffle过程"></a>Map端的Shuffle过程</h4><ol><li>输入数据和执行Map任务</li></ol><p>Map任务的输入数据保存在分布式文件系统的文件块中，文件格式任意。Map任务接收&lt;key , value&gt;作为输入后，按一定的映射规则转换成一批&lt;key , value&gt;进行输出。</p><ol start="2"><li>写入缓存</li></ol><p>每个Map任务都会分配一个缓存，Map输出结果先写入缓存中，在缓存满后才写入磁盘。可以大大降低开销。</p><ol start="3"><li>溢写（分区、排序和合并）</li></ol><p>提供给MapReduce的缓存容量时有限的，一旦占满缓存就执行溢写（Spill）操作，把缓存中的内容一次性写入磁盘并清空缓存。在溢写到磁盘前，缓存中的数据先被分区（Partition），以键值对形式存储；对于每个分区的键值对，后台线程根据其Key对其进行内存排序（Sort），排序是MapReduce默认操作，排序结束后执行合并（Combine）操作，合并操作根据用户定义的执行。</p><ol start="4"><li>文件归并</li></ol><p>在Map任务全部结束之前，系统会对所有溢写文件中的数据进行归并（Merge），生成一个大的溢写文件。这个大的溢写文件中所有键值对也是经过分区和排序的。</p><p>综上，Map端的Shuffle过程全部完成，最终生成一个大文件存放在本地磁盘上。其中JobTracker会一直检测Map任务执行，当检测到一个Map任务完成后，立即通知相关Reduce任务来领取数据。</p><h4 id="Reduce端的Shuffle过程"><a href="#Reduce端的Shuffle过程" class="headerlink" title="Reduce端的Shuffle过程"></a>Reduce端的Shuffle过程</h4><p>Reduce端的Shuffle过程相对简单，从Map端读取Map结果，然后进行归并，最后输送给Reduce进行处理。</p><ol><li>领取数据</li></ol><p>Map端的Shuffle过程结束后，Reduce任务把这些数据领取回来，</p><ol start="2"><li>归并数据</li></ol><p>归并过程与Map端类似</p><ol start="3"><li>把数据给Reduce任务</li></ol><p>磁盘经过多轮归并后得到若干大文件，不再继续归并，直接输入给Reduce任务，减少磁盘读写开销。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mapreduce&quot;&gt;&lt;a href=&quot;#Mapreduce&quot; class=&quot;headerlink&quot; title=&quot;Mapreduce&quot;&gt;&lt;/a&gt;Mapreduce&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Bigdata" scheme="https://superming.life/tags/Bigdata/"/>
    
  </entry>
  
  <entry>
    <title>JDBC基本概念</title>
    <link href="https://superming.life/2020/05/16/JDBC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://superming.life/2020/05/16/JDBC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
    <published>2020-05-16T14:30:05.000Z</published>
    <updated>2020-10-15T08:28:18.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JDBC基本概念"><a href="#JDBC基本概念" class="headerlink" title="JDBC基本概念"></a>JDBC基本概念</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>JDBC（Java Database Connectivity）是一组用来按照统一方式访问数据库的API。向程序员提供了独立于数据库的<strong>统一接口</strong>，开发人员只需要学习JDBC结构，并通过JDBC加载具体驱动，就可以对数据库进行连接及操作。「组成JDBC的两个包：java.sql和javax.sql」</p><p>JDBC一共有四种驱动类型，参见<a href="https://en.wikipedia.org/wiki/JDBC_driver" target="_blank" rel="noopener">维基百科</a>。</p><a id="more"></a><p>JDBC API：</p><p><img src="https://superming.life/2020/05/16/JDBC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/jdbcapi.png" alt="jdbcapi"></p><h2 id="基本编程操作"><a href="#基本编程操作" class="headerlink" title="基本编程操作"></a>基本编程操作</h2><p>连接数据库分为以下7步：</p><blockquote><p>第一步：加载正确的数据库驱动程序</p><p>第二步：定义所要连接数据库的地址</p><p>第三步：建立与数据库的连接</p><p>第四步：声明SQL语句并创建语句对象</p><p>第五步：执行SQL语句</p><p>第六步：对执行结果进行处理</p><p>第七步：关闭打开的资源</p></blockquote><ol><li>创建数据库脚本</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ----------------------------</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Table structure for user</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ----------------------------</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span>  (</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="string">`ident`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'0普通用户\r\n1管理员'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="string">`telephone`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="string">`address`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>) <span class="keyword">USING</span> BTREE,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> <span class="string">`unique-username`</span>(<span class="string">`username`</span>) <span class="keyword">USING</span> BTREE</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> AUTO_INCREMENT = <span class="number">17</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = Dynamic;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ----------------------------</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Records of user</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ----------------------------</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'admin'</span>, <span class="string">'123'</span>, <span class="string">'1'</span>, <span class="string">'0'</span>, <span class="string">'0'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'user1'</span>, <span class="string">'123'</span>, <span class="string">'0'</span>, <span class="string">'041184835202'</span>, <span class="string">'大连东软信息学院A3座117室'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">'user2'</span>, <span class="string">'123'</span>, <span class="string">'0'</span>, <span class="string">'041184835207'</span>, <span class="string">'大连理工大学计算机系'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">'user3'</span>, <span class="string">'123'</span>, <span class="string">'0'</span>, <span class="string">'041184832264'</span>, <span class="string">'新新园100号2门103'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span></pre></td></tr></table></figure><p>数据表结构如下：</p><p><img src="https://superming.life/2020/05/16/JDBC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/tablestu.png" alt="tablestu"></p><ol start="2"><li>新建Java工程并在web资源中导入数据库驱动</li></ol><p><img src="https://superming.life/2020/05/16/JDBC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/connector.png" alt="connector"></p><ol start="3"><li>编写注册页面<code>register.html</code>，用于输入信息并提交至RegisterServlet。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"register"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>用户注册<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"un"</span> <span class="attr">size</span>=<span class="string">"20"</span> <span class="attr">placeholder</span>=<span class="string">"请输入"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pw"</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>电话：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"tel"</span> <span class="attr">size</span>=<span class="string">"20"</span> <span class="attr">placeholder</span>=<span class="string">"请输入"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>地址：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"addr"</span> <span class="attr">rows</span>=<span class="string">"3"</span> <span class="attr">cols</span>=<span class="string">"20"</span> <span class="attr">placeholder</span>=<span class="string">"请输入"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></pre></td></tr></table></figure><p>页面如下：</p><p><img src="https://superming.life/2020/05/16/JDBC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/register.png" alt="register"></p><ol start="4"><li>编写<code>RegisterServlet</code>，只放doGet部分代码。</li></ol><blockquote><p>使用JDBC连接数据库，将注册页面填写的信息插入数据表中，并给出提示。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">PrintWriter out = response.getWriter();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">String un = request.getParameter(<span class="string">"un"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">String pw = request.getParameter(<span class="string">"pw"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">String tel = request.getParameter(<span class="string">"tel"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">String addr = request.getParameter(<span class="string">"addr"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(un==<span class="keyword">null</span> || pw==<span class="keyword">null</span>|| tel==<span class="keyword">null</span> ||addr==<span class="keyword">null</span>||un.equals(<span class="string">""</span>)||pw.equals(<span class="string">""</span>)||tel.equals(<span class="string">""</span>)||addr.equals(<span class="string">""</span>)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">out.println(<span class="string">"注册信息不全！"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">out.println(<span class="string">"请输入完整的&lt;a href=register.html&gt;注册&lt;/a&gt;信息！"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="comment">//end if 注册信息不全</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Connection con=<span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt=<span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">ResultSet rs = <span class="keyword">null</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//1加载驱动程序</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//2定义url连接数据库</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">String url=<span class="string">"jdbc:mysql://127.0.0.1:3306/meal?serverTimezone=UTC"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//3 建立与DB的连接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">con = DriverManager.getConnection(url,<span class="string">"root"</span>,<span class="string">""</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//4写SQL语句，查询用户名是否可用</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"select * from user where username=?"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//5创建语句对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">pstmt = con.prepareStatement(sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//6给❓ 赋值，执行SQL</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">pstmt.setNString(<span class="number">1</span>, un);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">rs=pstmt.executeQuery();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//7对结果集进行处理</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"====rs"</span>+rs);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(rs.next()) &#123;<span class="comment">//如果结果集不为空，说明注册用户名在数据库中已存在</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">out.println(<span class="string">"用户名不可用"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">out.println(<span class="string">"&lt;a href=register.html&gt;返回&lt;/a&gt;"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="comment">//end if用户名已存在，不可用</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">pstmt.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//4 写sql语句，完成插入操作</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">sql=<span class="string">"insert into user values(null,?,?,0,?,?)"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">pstmt = con.prepareStatement(sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">1</span>, un);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">2</span>, pw);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">3</span>, tel);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">pstmt.setString(<span class="number">4</span>, addr);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">r=pstmt.executeUpdate();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="comment">//end else用户名可用</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="comment">//end try</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">catch</span>(ClassNotFoundException ex) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">ex.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">catch</span>(SQLException ex) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">ex.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">finally</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//8关闭连接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">rs.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(pstmt!=<span class="keyword">null</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">pstmt.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(con!=<span class="keyword">null</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">con.close();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(r==<span class="number">1</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">out.println(<span class="string">"注册成功！"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">out.println(<span class="string">"注册失败！"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">&#125;out.println(<span class="string">"&lt;a href=register.html&gt;返回&lt;/a&gt;"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="comment">//end if 注册信息完整</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>以上，代码编写且执行均可正常运行，JDBC也连接ok。</p><h3 id="步骤拆分"><a href="#步骤拆分" class="headerlink" title="步骤拆分"></a>步骤拆分</h3><ol><li>加载正确的数据库驱动程序</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);<span class="comment">//声明后即正确加载驱动程序</span></span></pre></td></tr></table></figure><p>如果抛出<code>ClassNotFoundException</code>异常表明所需驱动未在<code>classpath</code>中。</p><p>不同数据库驱动程序的名称是不同的，声明内的代码也是不同的。</p><ol start="2"><li>定义url连接数据库</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//2定义url连接数据库</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">String url=<span class="string">"jdbc:mysql://127.0.0.1:3306/meal?serverTimezone=UTC"</span>;</span></pre></td></tr></table></figure><p>不同数据库连接的地址不同，URL一般由三个部分组成，用冒号隔开。<code>jdbc:子协议：子名称</code></p><blockquote><p>jdbc：JDBC中的协议就是jdbc。</p><p>&lt;子协议&gt;：数据库驱动程序名或数据库连接机制的名称。</p><p>&lt;子名称&gt;：一种标记数据库的方法。子名称根据子协议的不同而不同，使用子名称的目的是为定位数据库。</p></blockquote><p>常用数据库URL地址写法：</p><blockquote><p>String ODBCURL = “jdbc:odbc:dbName”;</p><p>String oracleURL = “jdbc:oracle:thin:@host:port:dbName”;</p><p>String mysqlURL = “jdbc:mysql://host:port/dbName”;</p><p>String sqlURL = “jdbc:microsoft:sqlserver://host:port;DatabaseName=dbName “;</p></blockquote><p><img src="https://superming.life/2020/05/16/JDBC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/url.png" alt="url"></p><ol start="3"><li>建立与DB的连接</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//3 建立与DB的连接,url,user,password</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Connection connetion = DriverManager.getConnection(url,username,password);</span></pre></td></tr></table></figure><p><strong>DriverManager类</strong></p><p>驱动程序管理类负责管理JDBC驱动程序。在使用JDBC驱动程序，在使用JDBC驱动程序前，需要向DriverManager注册才可使用，调用<code>Class.forName()</code>方法。</p><p>常用方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">registerDriver</span><span class="params">(Driver driver)</span> <span class="comment">//向 DriverManager 注册给定驱动程序。</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Connection <span class="title">getConnection</span><span class="params">(String url,String user,String password)</span> <span class="keyword">throws</span> SQLException<span class="comment">//获得url对应数据库的一个连接</span></span></span></pre></td></tr></table></figure><p><strong>Connection接口</strong></p><p>Connection对象是通过DriverManager.getConnection()方法获得，代表与数据库的连接，也就是在已经加载的驱动程序和数据库之间建立连接，是数据库编程中非常重要的一个对象，客户端和数据库之间的交互全是通过Connection对象完成的。</p><p>常用方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function">Statement <span class="title">createStatement</span><span class="params">()</span> <span class="keyword">throws</span> SQLException<span class="comment">//创建一个Statement对象</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function">PreparedStatement <span class="title">prepareStatement</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException<span class="comment">//创建一个Preparestatement对象，并能把SQL语句提交到数据库进行预编译。</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setAutoCommit</span><span class="params">(Boolean autocommit)</span> <span class="keyword">throws</span> SQLException<span class="comment">//设置事务提交的模式</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span> <span class="keyword">throws</span> SQLException<span class="comment">//提交对数据库的更改，使更改生效</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span> <span class="keyword">throws</span> SQLException<span class="comment">//放弃当前事务开始以来对数据库所作的修改</span></span></span></pre></td></tr></table></figure><ol start="4"><li>声明SQL语句并创建语句对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"select * from tablename"</span> ；</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt = connection.prepareStatement(sql);</span></pre></td></tr></table></figure><p><strong>Statement类</strong></p><p>Statement用于执行静态SQL语句。</p><p>执行<code>insert</code>，<code>update</code>，<code>delete</code>语句等，调用<code>executeUpdate(String sql)</code>方法。</p><p>执行<code>select</code>语句可以调用<code>executeQuery(String sql)</code>方法，返回<code>ResultSet</code>对象。</p><p>常用方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function">ResultSet <span class="title">executeQuery</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException<span class="comment">//执行一个查询语句并返回结果集</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException<span class="comment">//执行更新操作，返回更新的行数</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException<span class="comment">//执行更新或查询语句，返回是否有结果集 [任意结果集]</span></span></span></pre></td></tr></table></figure><p><strong>PreparedStatement类</strong></p><p>PreparedStatement 是预编译的语句对象，可以用来执行带占位符的SQL语句。</p><p>数据库对他们事先进行编译，因此，客户端需要做的只是传送占位符位置所需要的数据。</p><p><strong>Statement对象执行的SQL语句，只有在程序运行时才对他们进行编译，因此PreparedStatement运行的速度更快。</strong></p><p>常用方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setXXX</span><span class="params">(<span class="keyword">int</span> parameterIndex,XXX x)</span> <span class="comment">//为第1参数指定的占位符设置第2参数指定的值</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function">ResultSet <span class="title">executeQuery</span><span class="params">()</span><span class="comment">//执行 SQL 查询，并返回该查询生成的 ResultSet 对象。 </span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">()</span> <span class="comment">//执行 SQL 语句，该语句必须是一个 SQL 数据操作语言（Data Manipulation Language，DML）语句，比如 INSERT、UPDATE 或 DELETE 语句；或者是无返回内容的 SQL 语句，比如 DDL 语句。 </span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">execute</span><span class="params">()</span> <span class="comment">//执行 SQL 语句，该语句可以是任何种类的 SQL 语句。</span></span></span></pre></td></tr></table></figure><p>例如编程基本操作处使用的代码使用的就是PreparedStatement类。</p><p><strong>CallableStatement类</strong></p><p>CallableStatement是JDBC用来调用数据库中存储过程的机制。</p><p>具体的使用和PreparedStatement相似。</p><p>需要注意的是：要调用的存储过程必须在数据库中存在，否则将抛出异常。</p><ol start="5"><li>执行SQL语句</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">pstmt = con.prepareStatement(sql);</span></pre></td></tr></table></figure><p>执行查询类SQL语句：使用语句对象的executeQuery()方法，返回 ResultSet结果集（一个二维表）。</p><p>执行更新类SQL语句：使用语句对象的executeUpdate()方法，返回被更新记录的条数。</p><p>执行各种类型的SQL语句：使用语句对象的execute()方法，当SQL语句的执行结果是一个ResultSet时，方法返回true，并可以通过语句对象的getResultSet()方法得到返回的结果集；当SQL语句的执行没有返回的结果集时，该方法返回false。</p><ol start="6"><li>处理结果</li></ol><p>ResultSet用于代表Sql语句执行结果。Resultset封装执行结果时，采用类型表格的方式。维护了一个指向表格数据行的游标，游标在第一行之前，调用<code>ResultSet.next()</code>方法，可以使游标指向具体数据行。</p><p>ResultSet提供了getXxx()方法，用于获取当前行中某列的值，其中“XXX”与列的数据类型有关，例如，如要获取的列是String类型，则使用getString()方法获取该列的值。getXxx()方法如下所示：getString()，getInt()，getFloat()，getDouble()，getDate()和getBoolean() </p><p>应用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ResultSet rs = statement.executeQuery();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">String name = rs.getString(<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">String phone = rs.getString(<span class="number">2</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">System.out.println(name+<span class="string">","</span>+phone);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">通过指定列名(getXxx(String)) 或列号的方式(getXxx(<span class="keyword">int</span>)) 调用getXxx()方法将对应列的内容获取出来。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">通过first(), (), previous(), next(), absolute(<span class="keyword">int</span>), … 方法滚动结果集中的内容。</span></pre></td></tr></table></figure><p><img src="https://superming.life/2020/05/16/JDBC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/sql&java.png" alt="sql&amp;java"></p><ol start="7"><li>释放资源</li></ol><p>JDBC程序运行完后，一定要释放程序中创建的一些交互对象，通常为ResultSet、Statement和Connection对象，尤其是Connection对象，非常稀有的资源，用完后需要立即释放，否则容易造成系统宕机。</p><p>资源释放代码一定要放在finally语句中执行。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JDBC基本概念&quot;&gt;&lt;a href=&quot;#JDBC基本概念&quot; class=&quot;headerlink&quot; title=&quot;JDBC基本概念&quot;&gt;&lt;/a&gt;JDBC基本概念&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;JDBC（Java Database Connectivity）是一组用来按照统一方式访问数据库的API。向程序员提供了独立于数据库的&lt;strong&gt;统一接口&lt;/strong&gt;，开发人员只需要学习JDBC结构，并通过JDBC加载具体驱动，就可以对数据库进行连接及操作。「组成JDBC的两个包：java.sql和javax.sql」&lt;/p&gt;
&lt;p&gt;JDBC一共有四种驱动类型，参见&lt;a href=&quot;https://en.wikipedia.org/wiki/JDBC_driver&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="JavaWeb" scheme="https://superming.life/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>Hive MacOS配置</title>
    <link href="https://superming.life/2020/05/16/Hive%20MacOS%20%E9%85%8D%E7%BD%AE/"/>
    <id>https://superming.life/2020/05/16/Hive%20MacOS%20%E9%85%8D%E7%BD%AE/</id>
    <published>2020-05-16T01:00:00.000Z</published>
    <updated>2020-10-15T08:27:53.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hive-MacOS-配置"><a href="#Hive-MacOS-配置" class="headerlink" title="Hive MacOS 配置"></a>Hive MacOS 配置</h2><p>环境：</p><p>Hadoop3.2.1</p><p>Hive 3.1.2</p><h2 id="Hive-3-1-2-安装"><a href="#Hive-3-1-2-安装" class="headerlink" title="Hive 3.1.2 安装"></a>Hive 3.1.2 安装</h2><p>使用brew安装Hive</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">brew update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">brew install hive</span></pre></td></tr></table></figure><p>Hive的默认安装目录为：<code>/usr/local/Cellar/hive/3.1.2</code></p><p>添加环境变量至shell配置文件, 我使用<code>zshrc</code>，故执行<code>vim .zshrc</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">export HIVE_HOME=/usr/local/Cellar/hive/3.1.2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:$HIVE_HOME/bin</span></pre></td></tr></table></figure><p>保存退出后使配置生效<code>source .zshrc</code>。</p><h3 id="创建Hive的HDFS目录"><a href="#创建Hive的HDFS目录" class="headerlink" title="创建Hive的HDFS目录"></a>创建Hive的HDFS目录</h3><figure class="highlight plain"><figcaption><span>shell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;Create warehouse folder under hive and provide permission</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir -p &#x2F;user&#x2F;hive&#x2F;warehouse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -chmod g+w &#x2F;user&#x2F;hive&#x2F;warehouse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;Create tmp folder in root and provide permission</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir -p &#x2F;tmp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -chmod g+w &#x2F;tmp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir -p &#x2F;tmp&#x2F;hive</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -chmod 777 &#x2F;tmp&#x2F;hive</span></pre></td></tr></table></figure><h3 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd /usr/local/Cellar/hive/3.1.2/libexec/conf</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mv hive-default.xml.template hive-default.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">vim hive-site.xml</span></pre></td></tr></table></figure><p>进入<code>/usr/local/Cellar/hive/3.1.2/libexec/conf</code>目录创建<code>hive-site.xml</code>，在其中添加如下配置信息：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>JDBC connect string for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hive<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>username to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hive<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>password to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></pre></td></tr></table></figure><p>其中UserName为数据库名称，Password为数据库密码，其中Password与下面mysql创建的hive账户密码一致。</p><h2 id="MySQL配置"><a href="#MySQL配置" class="headerlink" title="MySQL配置"></a>MySQL配置</h2><blockquote><p>本文默认安装MySQL。</p></blockquote><h3 id="jdbc包下载"><a href="#jdbc包下载" class="headerlink" title="jdbc包下载"></a>jdbc包下载</h3><p>下载地址：<a href="https://downloads.mysql.com/archives/c-j/" target="_blank" rel="noopener">地址</a>，选择Platform Independent，下载。</p><p>下载完成后，将mysql的jdbc包移入hive的lib目录下<code>/usr/local/Cellar/hive/3.1.2/libexec/lib</code>。</p><h3 id="创建sql表"><a href="#创建sql表" class="headerlink" title="创建sql表"></a>创建sql表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mysql&gt; create database hive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">mysql&gt; USE hive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER &#39;hive&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;hive&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">mysql&gt; grant SELECT,INSERT,UPDATE,DELETE,ALTER,CREATE ON hive.* TO &#39;hive&#39;@&#39;localhost&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; grant all on hive.* to &#39;hive&#39;@&#39;localhost&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">mysql&gt; FLUSH PRIVILEGES;</span></pre></td></tr></table></figure><h2 id="启动Hive-并测试"><a href="#启动Hive-并测试" class="headerlink" title="启动Hive 并测试"></a>启动Hive 并测试</h2><p>先执行以下命令，使用 schematool工具初始化Hive版本的Metastore架构。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">schematool -initSchema -dbType mysql</span></pre></td></tr></table></figure><p>最后会出现<code>Initialization script completed schemaTool completed</code></p><p>启动Hive</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hive</span></pre></td></tr></table></figure><p>hive启动完成后会出现如下命令提示符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hive&gt;</span></pre></td></tr></table></figure><p>可以简单执行以下命令尝试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hive&gt; show databases;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hive&gt; show tables;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hive&gt; create table test (id int, name string);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">hive&gt; insert into test values (1, &#39;John Smith&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">hive&gt; select * from test;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">hive&gt; drop table test;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">hive&gt; exit;</span></pre></td></tr></table></figure><p><img src="https://superming.life/2020/05/16/Hive%20MacOS%20%E9%85%8D%E7%BD%AE/hive.png" alt="hive"></p><p>Hive安装成功后在MySql会有如下表格：</p><p><img src="https://superming.life/2020/05/16/Hive%20MacOS%20%E9%85%8D%E7%BD%AE/hivetable.png" alt="hivetable"></p><h2 id="Hive常见Bug汇总"><a href="#Hive常见Bug汇总" class="headerlink" title="Hive常见Bug汇总"></a>Hive常见Bug汇总</h2><h3 id="guava版本不一致问题"><a href="#guava版本不一致问题" class="headerlink" title="guava版本不一致问题"></a>guava版本不一致问题</h3><p>在使用hive命令后，出现如下报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">LF4J: Class path contains multiple SLF4J bindings.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">SLF4J: Found binding in [jar:file:/usr/local/Cellar/hive/3.1.2/libexec/lib/log4j-slf4j-impl-2.10.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">SLF4J: Found binding in [jar:file:/usr/local/Cellar/hadoop/3.2.1/libexec/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Exception in thread "main" java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkArgument(ZLjava/lang/String;Ljava/lang/Object;)V</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.conf.Configuration.set(Configuration.java:1357)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.conf.Configuration.set(Configuration.java:1338)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.mapred.JobConf.setJar(JobConf.java:536)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.mapred.JobConf.setJarByClass(JobConf.java:554)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.mapred.JobConf.&lt;init&gt;(JobConf.java:448)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.hive.conf.HiveConf.initialize(HiveConf.java:5141)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.hive.conf.HiveConf.&lt;init&gt;(HiveConf.java:5099)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.hive.common.LogUtils.initHiveLog4jCommon(LogUtils.java:97)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.hive.common.LogUtils.initHiveLog4j(LogUtils.java:81)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:699)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:683)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    at java.lang.reflect.Method.invoke(Method.java:498)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.util.RunJar.run(RunJar.java:323)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</span></pre></td></tr></table></figure><p>修复：</p><p>查阅资料后，是因为<code>com.google.common.base.Preconditions.checkArgument</code>依赖包在hive内部以及hadoop内部版本不一致导致的。</p><p>使用如下命令解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看版本</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls /usr/<span class="built_in">local</span>/Cellar/hadoop/3.2.1/libexec/share/hadoop/common/lib/guava*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">/usr/local/Cellar/hadoop/3.2.1/libexec/share/hadoop/common/lib/guava-27.0-jre.jar</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls /usr/<span class="built_in">local</span>/Cellar/hive/3.1.2/libexec/lib/guava* </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">/usr/local/Cellar/hive/3.1.2/libexec/lib/guava-19.0-jre.jar</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> hadoop 版本比 hive 高，替换之</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mv /usr/<span class="built_in">local</span>/Cellar/hive/3.1.2/libexec/lib/guava-19.0.jar /tmp <span class="comment"># 保留下副本</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp /usr/<span class="built_in">local</span>/Cellar/hadoop/3.2.1/libexec/share/hadoop/common/lib/guava-27.0-jre.jar /usr/<span class="built_in">local</span>/Cellar/hive/3.1.2/libexec/lib/ <span class="comment"># 替换</span></span></span></pre></td></tr></table></figure><h3 id="Metastore-Server未正常启动"><a href="#Metastore-Server未正常启动" class="headerlink" title="Metastore Server未正常启动"></a>Metastore Server未正常启动</h3><p>报错如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Exception in thread "main" java.lang.RuntimeException: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        at org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:444)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:672)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:616)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        at java.lang.reflect.Method.invoke(Method.java:597)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        at org.apache.hadoop.util.RunJar.run(RunJar.java:221)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        at org.apache.hadoop.util.RunJar.main(RunJar.java:136)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">Caused by: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient</span></pre></td></tr></table></figure><p>解决：启动Hive的MetaStoreServer服务进程即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># hive --service metastore &amp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[1] 52460</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Starting Hive Metastore Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">SLF4J: Found binding in [jar:file:&#x2F;root&#x2F;hadoop&#x2F;hadoop-2.6.0&#x2F;share&#x2F;hadoop&#x2F;common&#x2F;lib&#x2F;slf4j-log4j12-1.7.5.jar!&#x2F;org&#x2F;slf4j&#x2F;impl&#x2F;StaticLoggerBinder.class]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">SLF4J: Found binding in [jar:file:&#x2F;root&#x2F;hadoop&#x2F;apache-hive-0.14.0-bin&#x2F;lib&#x2F;hive-jdbc-0.14.0-standalone.jar!&#x2F;org&#x2F;slf4j&#x2F;impl&#x2F;StaticLoggerBinder.class]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">SLF4J: See http:&#x2F;&#x2F;www.slf4j.org&#x2F;codes.html#multiple_bindings for an explanation.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]</span></pre></td></tr></table></figure><p><img src="https://superming.life/2020/05/16/Hive%20MacOS%20%E9%85%8D%E7%BD%AE/metastore.png" alt="metastore"></p><p>Hive启动报错</p><p>参见：<a href="https://stackoverflow.com/questions/52783323/hive-throws-wstxparsingexception-illegal-character-entity-expansion-character" target="_blank" rel="noopener">参考</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Exception in thread "main" java.lang.RuntimeException: com.ctc.wstx.exc.WstxParsingException: Illegal character entity: expansion character (code 0x8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr></table></figure><p>解决：</p><p>在hive-site.xml中删除下面描述</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">     Ensures commands with OVERWRITE (such as INSERT OVERWRITE) acquire Exclusive locks for </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">     transactional tables. This ensures that inserts (w/o overwrite) running concurrently</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     are not hidden by the INSERT OVERWRITE.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></pre></td></tr></table></figure><hr><p>参考：</p><p><a href="https://blog.csdn.net/freedomboy319/article/details/44828337" target="_blank" rel="noopener">常见问题汇总</a></p><p><a href="https://www.datageekinme.com/setup/setting-up-my-mac-hive/" target="_blank" rel="noopener">hive configuration</a></p><p><a href="https://luckymrwang.github.io/2018/03/14/Install-hive-on-Mac-with-Homebrew/" target="_blank" rel="noopener">https://luckymrwang.github.io/2018/03/14/Install-hive-on-Mac-with-Homebrew/</a></p><p><a href="https://dbmstutorials.com/hive/hive-setup-on-mac.html" target="_blank" rel="noopener">hive set up on mac</a></p><p><a href="https://www.datageekinme.com/setup/setting-up-my-mac-hive/" target="_blank" rel="noopener">set up hive</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hive-MacOS-配置&quot;&gt;&lt;a href=&quot;#Hive-MacOS-配置&quot; class=&quot;headerlink&quot; title=&quot;Hive MacOS 配置&quot;&gt;&lt;/a&gt;Hive MacOS 配置&lt;/h2&gt;&lt;p&gt;环境：&lt;/p&gt;
&lt;p&gt;Hadoop3.2.1&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Bigdata" scheme="https://superming.life/tags/Bigdata/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop集群配置安装：MacOS+Ubuntu尝试</title>
    <link href="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/"/>
    <id>https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/</id>
    <published>2020-05-11T16:17:58.000Z</published>
    <updated>2020-10-15T08:28:11.195Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hadoop集群配置安装：MacOS-Ubuntu-尝试"><a href="#Hadoop集群配置安装：MacOS-Ubuntu-尝试" class="headerlink" title="Hadoop集群配置安装：MacOS+Ubuntu 尝试"></a>Hadoop集群配置安装：MacOS+Ubuntu 尝试</h1><p>关于Hadoop集群配置，教程基本都是都是Ubuntu之间的相互配置，很少MacOs与Ubuntu之间的分布式教程，相信很多同学为了做实验受限于机器等条件限制，本文可能会有所帮助。</p><h2 id="环境准备："><a href="#环境准备：" class="headerlink" title="环境准备："></a>环境准备：</h2><p>MacOS 【Catalina 10.15.3 】： 作为从节点，节点名称为superming。</p><p>Ubuntu 【19.04】：作为主节点，节点命名ZKM-Master。【为方便理解，文章中使用Master替换】</p><p>两者位于同一网络环境下，ZKM-Master 节点局域网IP为<strong>192.168.1.106</strong>，superming节点局域网IP为<strong>192.1.1.101</strong>。</p><p><strong>说明：</strong></p><p>两者安装的Hadoop版本均为3.2.1。</p><p>Ubuntu机器使用hadoop用户进行hadoop的相关操作，而Mac机器上为了方便使用，并未创建hadoop用户，而是使用我原来的用户superming进行相关操作，在配置集群之前，所有机器上的hadoop配置均按照伪分布式配置，并可以运行。</p><a id="more"></a><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><p>为了便于区分节点名称，修改Master的主机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hostname</span></pre></td></tr></table></figure><p>在文件hostname文件中写入自己指定的机器名称并保存即可。</p><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/hadoop4.png" alt="hadoop4"></p><h3 id="域名映射"><a href="#域名映射" class="headerlink" title="域名映射"></a>域名映射</h3><p>在每台机器上修改节点对应的IP映射。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hosts</span></pre></td></tr></table></figure><p>按照我的机器命名及IP，添加如下映射：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">192.168.1.106 ZKM-Master</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">192.168.1.101 superming</span></pre></td></tr></table></figure><h2 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h2><blockquote><p>⚠️：SSH是配置中需要变通的一处，因为我的机器之间的用户等配置并不完全对等，需要进行一些多余配置消除这些影响。</p></blockquote><p>SSH主要是让Master节点可以通过SSH无密码登录到各Slave节点上。</p><p>本步骤用于Master可以通过SSH无密码访问各Slave节点。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd ~/.ssh               # 如果没有该目录，先执行一次ssh localhost</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">rm ./id_rsa*            # 删除之前生成的公匙「因为主机名修改了」</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa       # 回车到底</span></pre></td></tr></table></figure><p>截止该步骤，SSH密钥生成完毕，需要SSH能够免密访问机器，需要将生成的公钥保存到Anutorized_key文件中。</p><blockquote><p>扩展：<a href="https://abcdabcd987.com/ssh/" target="_blank" rel="noopener">SSH基本用法</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cat ./id_rsa.pub &gt;&gt; ./authorized_keys</span></pre></td></tr></table></figure><p>将本机的SSH公钥保存到本机的anthoroized_keys文件中，执行<code>ssh ZKM-Master</code>免密码访问本机，详情如下：</p><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/1.png" alt="1"></p><p>然后将本机的SSH公钥加入从节点的授权中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">scp ~/.ssh/id_rsa.pub superming@superming:./ #发送公钥至从机器./目录下  解释：&lt;superming:superming&gt;:机器名：用户名 scp为ssh的传输命令，即通过ssh传输文件。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 以下在从机执行</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">mkdir ~/.ssh       # 如果不存在该文件夹需先创建，若已存在则忽略</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">rm ~/id_rsa.pub    # 用完就可以删掉了</span></pre></td></tr></table></figure><p>如果有多余节点，按照以上步骤进行传输并授权。该操作后，Master节点可以无密码访问各从节点。</p><p><strong>问题解决</strong>：以上配置后，在Master 节点执行<code>ssh superming</code>，默认使用hadoop用户访问ssh，而我的从节点使用的是superming用户，因此需要为SSH配置别名以确定默认登录用户名。</p><p>需要在.ssh/文件下创建一个config文件，用来指定ssh指定的访问方式。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd .ssh/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">touch config</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">vim config</span></pre></td></tr></table></figure><p>config文件内容如下，Host指定访问名称，Hostname指定访问IP地址，User指定访问用户。</p><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/2.png" alt="1"></p><p>经过以上配置后，在Master执行<code>ssh superming</code>就指定用户superming访问Hostname为<code>192.168.1.101</code>。</p><h2 id="分布式集群环境配置"><a href="#分布式集群环境配置" class="headerlink" title="分布式集群环境配置"></a>分布式集群环境配置</h2><p>一共需要配置五个文件，配置文件目录在<code>/usr/local/hadoop/etc/hadoop</code>下</p><p><code>Slave</code>文件：</p><p>注：3.2.1版本slave文件即worker，编辑该文件即可。</p><p>Slave文件需要列出节点名称，默认为<code>localhost</code>，本节点仅有一个Datanode，名称为superming，故删除原来的localhost文件并添加superming。</p><p>修改<code>core-site.xml</code>文件:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://Master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">description</span>&gt;</span>Abase for other temporary directories.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></pre></td></tr></table></figure><p>注：以上为<strong>标准格式</strong>，需要根据个人情况进行修改，比如我的机器名为<code>ZKM-Master</code>，需要将fs.defaultFS的值改为<code>hdfs://ZKM-Master:9000</code>。</p><p>修改<code>hdfs-site.xml</code>文件，集群中有几个slave节点，将<code>dfs.replication</code>的值改为多少：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>Master:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop/tmp/dfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop/tmp/dfs/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></pre></td></tr></table></figure><p>修改<code>mapred-site.xml</code>文件：【第一次设置需要将<code>mapred-site.xml.template</code>文件重命名】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>Master:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>Master:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></pre></td></tr></table></figure><p>修改<code>yarn-site.xml</code>文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>Master<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></pre></td></tr></table></figure><blockquote><p>如果是两台ubuntu机器，按以下命令即可将配置好的文件分发到各个节点上，并完成配置。</p></blockquote><p>因为以前跑过伪分布式模式，在切换到集群模式前删除之前的临时文件，<strong>并在Master节点上执行</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd /usr/local</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo rm -r ./hadoop/tmp     # 删除 Hadoop 临时文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sudo rm -r ./hadoop/logs/*   # 删除日志文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">tar -zcf ~/hadoop.master.tar.gz ./hadoop   # 先压缩再复制</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">cd ~</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">scp ./hadoop.master.tar.gz superming:/home/hadoop # superming为从节点用户名称，根据自己配置情况修改</span></pre></td></tr></table></figure><p><strong>Slave节点执行：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo rm -r /usr/local/hadoop    # 删掉旧的（如果存在）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo tar -zxf ~/hadoop.master.tar.gz -C /usr/local</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sudo chown -R hadoop /usr/local/hadoop</span></pre></td></tr></table></figure><p>以上，Hadoop节点的配置基本完成。</p><h2 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h2><p>问题解决：</p><p>因为Hadoop在Mac上的文件以及安装目录与Ubuntu上有很大不同，按以上配置启动，在Ubuntu上启动的Namenode启动正常，但是在Mac上启动的Datanode会碰到很多问题，很多报错忘记截图了，总结了一下大致上是默认安装目录的冲突引起的问题。</p><blockquote><p>本来想根据报错一个个解决的，修改Master上寻找Datanode路径的配置的，但操作过于麻烦，还是选择了相对简单的方法。</p></blockquote><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/3.png" alt="1"></p><p>如上，在启动datanode节点时不能找到对应目录<code>/usr/local/haoop/etc/hadoop</code>目录，就是因为Mac的目录冲突导致的。所以作为Datanode，需要确保有/usr/local/hadoop/这个目录能够让Master节点访问到，如果没有就创建一个。</p><p>解决：将原本安装于<code>/usr/local/Cellar/hadoop/3.2.1</code>下的Hadoop相关文件复制到该目录下<code>/usr/local/hadoop/</code>下。同时又因为ubuntu的hadoop配置文件在<code>./etc/hadoop/</code>下，而Mac在<code>./libexec/share/hadoop/</code>下，故需要在hadoop目录下创建etc文件，将<code>./libexec/share/hadoop/</code>下的配置文件复制到etc文件下。</p><blockquote><p>截止该步，将Mac的配置文件与Ubuntu文件的冲突解决。</p></blockquote><p>在该目录下创建tmp文件，用于存储数据。tmp文件下创建<code>dfs/data/</code>目录以及<code>dfs/name/</code>目录。</p><blockquote><p>综上，Mac作为数据节点配置完毕。</p></blockquote><p>在Master节点上使用以下命令启动集群：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hdfs namenode -format       # 首次运行需要执行初始化</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">start-dfs.sh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">start-yarn.sh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">mr-jobhistory-daemon.sh start historyserver</span></pre></td></tr></table></figure><p>如下图，Master上的执行过程：</p><blockquote><p>hdfs dfsadmin -report 用于查看节点状态。</p></blockquote><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/4.png" alt="1"></p><p>Slave节点上应该有Datanode运行：</p><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/5.png" alt="1"></p><p>开启成功后。可以在web页面查看节点状态：<code>localhost:9870</code></p><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/web.png" alt="1">`</p><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/web2.png" alt="web2">执行分布式例子：</p><p>创建HDFS用户目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir -p /user/hadoop</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir input</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hdfs dfs -put /usr/local/hadoop/etc/hadoop/*.xml input</span></pre></td></tr></table></figure><p>执行MapReduce作业：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-*.jar grep input output 'dfs[a-z.]+'</span></pre></td></tr></table></figure><p><img src="https://superming.life/2020/05/12/Hadoop%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85--MacOS+Ubuntu%E5%B0%9D%E8%AF%95/hadoop2.png" alt="hadoop2"></p><p>节点关闭也是在Master上执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">stop-yarn.sh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">stop-dfs.sh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">mr-jobhistory-daemon.sh stop historyserver</span></pre></td></tr></table></figure><hr><p>参考：</p><p><a href="https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/ClusterSetup.html" target="_blank" rel="noopener">Hadoop Cluster Setup</a></p><p><a href="https://www.linode.com/docs/databases/hadoop/how-to-install-and-set-up-hadoop-cluster/" target="_blank" rel="noopener">How to Install and Set Up a 3-Node Hadoop Cluster</a></p><p><a href="http://dblab.xmu.edu.cn/blog/install-hadoop-cluster/" target="_blank" rel="noopener">Hadoop集群安装配置教程_Hadoop2.6.0_Ubuntu/CentOS</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hadoop集群配置安装：MacOS-Ubuntu-尝试&quot;&gt;&lt;a href=&quot;#Hadoop集群配置安装：MacOS-Ubuntu-尝试&quot; class=&quot;headerlink&quot; title=&quot;Hadoop集群配置安装：MacOS+Ubuntu 尝试&quot;&gt;&lt;/a&gt;Hadoop集群配置安装：MacOS+Ubuntu 尝试&lt;/h1&gt;&lt;p&gt;关于Hadoop集群配置，教程基本都是都是Ubuntu之间的相互配置，很少MacOs与Ubuntu之间的分布式教程，相信很多同学为了做实验受限于机器等条件限制，本文可能会有所帮助。&lt;/p&gt;
&lt;h2 id=&quot;环境准备：&quot;&gt;&lt;a href=&quot;#环境准备：&quot; class=&quot;headerlink&quot; title=&quot;环境准备：&quot;&gt;&lt;/a&gt;环境准备：&lt;/h2&gt;&lt;p&gt;MacOS 【Catalina 10.15.3 】： 作为从节点，节点名称为superming。&lt;/p&gt;
&lt;p&gt;Ubuntu 【19.04】：作为主节点，节点命名ZKM-Master。【为方便理解，文章中使用Master替换】&lt;/p&gt;
&lt;p&gt;两者位于同一网络环境下，ZKM-Master 节点局域网IP为&lt;strong&gt;192.168.1.106&lt;/strong&gt;，superming节点局域网IP为&lt;strong&gt;192.1.1.101&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;两者安装的Hadoop版本均为3.2.1。&lt;/p&gt;
&lt;p&gt;Ubuntu机器使用hadoop用户进行hadoop的相关操作，而Mac机器上为了方便使用，并未创建hadoop用户，而是使用我原来的用户superming进行相关操作，在配置集群之前，所有机器上的hadoop配置均按照伪分布式配置，并可以运行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="Hadoop" scheme="https://superming.life/tags/Hadoop/"/>
    
      <category term="BigData" scheme="https://superming.life/tags/BigData/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB</title>
    <link href="https://superming.life/2020/04/20/MongoDB/"/>
    <id>https://superming.life/2020/04/20/MongoDB/</id>
    <published>2020-04-19T16:17:58.000Z</published>
    <updated>2020-10-15T08:27:30.180Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="使用tar包进行安装"><a href="#使用tar包进行安装" class="headerlink" title="使用tar包进行安装"></a>使用tar包进行安装</h3><p>前提：</p><p>MongoDB4.2社区版支持macOS 10.12及后续版本。</p><p>下载tar包：<a href="https://www.mongodb.com/download-center/community?tck=docs_server" target="_blank" rel="noopener">地址</a></p><ol><li><p>OS选择macOSx64，包选择TGZ，点击下载。</p></li><li><p>把下载文件移至<code>/usr/local</code>下，进行解压缩。</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">tar -zxvf mongodb-macos-x86_64-4.2.5.tgz</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo mv mongodb-osx-x86_64-4.2.5/ mongodb  //重命名</span></pre></td></tr></table></figure><ol start="3"><li>将bin目录下的文件放入<code>/usr/local/bin</code>下</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo cp /usr/local/mongodb/bin/* /usr/local/bin/</span></pre></td></tr></table></figure><a id="more"></a><p>建立存放数据目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /usr/local/var/mongodb    //mongod进程写入数据文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /usr/local/var/log/mongodb//创建mongod进程产生的log文件</span></pre></td></tr></table></figure><p>注意：在macOS 10.15 Catalina后，Apple限制了MongDB存放数据的默认地址<code>/data/db</code>。所以我们必须使用不同的数据目录。比如<code>/usr/local/var/mongodb</code>。</p><p>设置文件的拥有者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo chown my_mongodb_user /usr/local/var/mongodb</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo chown my_mongodb_user /usr/local/var/log/mongodb</span></pre></td></tr></table></figure><p>运行</p><p>使用命令行开启mongod</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork</span></pre></td></tr></table></figure><p>使用config文件开启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mongod --config /usr/local/etc/mongod.conf</span></pre></td></tr></table></figure><blockquote><p>使用tar包安装的mongod没有创建<code>mongod.conf</code>文件。</p></blockquote><p>查看是否开启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ps aux | grep -v grep | grep mongod</span></pre></td></tr></table></figure><p>确认完毕在终端输入mongo即可开启mongoDB</p><h3 id="使用Brew安装"><a href="#使用Brew安装" class="headerlink" title="使用Brew安装"></a>使用Brew安装</h3><p>准备：</p><p>需要Xcode、Homebrew。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">brew tap mongodb/brew</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">brew install mongodb-community@4.2</span></pre></td></tr></table></figure><p>使用brew安装，会自动创建如下文件及目录</p><blockquote><p>the configuration file(<code>/usr/local/etc/mongod.conf</code>)</p><p>the log directory path(<code>/usr/local/var/log/mongodb</code>)</p><p>the data directory path (<code>/usr/local/var/mongodb</code>)</p></blockquote><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>可以使用brew运行MongoDB作为macOS服务，或者手动将其作为后台程序运行。</p><ul><li>使用brew运行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">brew services start mongodb-community@4.2   //开启Mongod进程</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">brew services stop mongodb-community@4.2//停止Mongod进程</span></pre></td></tr></table></figure><ul><li>作为后台程序手动开启</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mongod --config /usr/local/etc/mongod.conf --fork</span></pre></td></tr></table></figure><p>以上都使用<code>usr/local/etc/mongod.conf</code>文件。</p><p>同样可以使用以下命令验证mongod是否运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ps aux | grep -v grep | grep mongod</span></pre></td></tr></table></figure><p>日志文件存放于：<code>/usr/local/var/log/mongodb/mongo.log</code></p><p>键入mongo即可使用mongoDB。</p><h2 id="MongoDB概述"><a href="#MongoDB概述" class="headerlink" title="MongoDB概述"></a>MongoDB概述</h2><p>MongoDB是一个面向文档的NoSQL数据库，由C++编写，使用类JSON的BSON格式进行数据编码和传输。具有高性能、高可用、可伸缩、易部署等特性，目前非常火爆。</p><h2 id="概念解析"><a href="#概念解析" class="headerlink" title="概念解析"></a>概念解析</h2><h3 id="文档数据库"><a href="#文档数据库" class="headerlink" title="文档数据库"></a>文档数据库</h3><p>记录在MongoDB中是一个文档，是一个由键值对组成的数据结构。</p><p><img src="https://superming.life/2020/04/20/MongoDB/exp.png" alt="exp"></p><p>优势：</p><blockquote><p>文档可以适应多种本地文件的数据类型</p><p>使用嵌入式的文档组织模式减少了表之间的连接需求</p><p>很好的动态伸缩性</p></blockquote><p>MongoDB单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同数据库克放在不同文件内。</p><h3 id="集合-Collections"><a href="#集合-Collections" class="headerlink" title="集合(Collections)"></a>集合(Collections)</h3><p>集合是MongoDB的文档组(Collections)，类似RDBMS中的表格。集合存储于数据库中，没有固定的结构，可以在集合中插入不同格式的数据。如下为一个集合，其中包括多个文档(Documents)。</p><p><img src="https://superming.life/2020/04/20/MongoDB/colletions.png" alt="colletions"></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><img src="https://superming.life/2020/04/20/MongoDB/data.png" alt="DataType"></p><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><h3 id="主从模式（Master-Slaver）"><a href="#主从模式（Master-Slaver）" class="headerlink" title="主从模式（Master-Slaver）"></a>主从模式（Master-Slaver）</h3><p><img src="https://superming.life/2020/04/20/MongoDB/Master.png" alt="Master"></p><p>由一个主节点和多个从节点组成。</p><p>主节点运行MongoDB实例，完成数据存储、查询和修改操作。</p><p>从节点不提供任何服务，但可通过设置是其具有查询服务，从而减轻主节点压力。</p><p>主节点出现故障，只能人工介入，指定新的主节点，从节点不会自动升级主节点，此时集群处于只读状态。</p><h3 id="副本集模式-Replication"><a href="#副本集模式-Replication" class="headerlink" title="副本集模式(Replication)"></a>副本集模式(Replication)</h3><p>官方参考：<a href="https://docs.mongodb.com/manual/replication/" target="_blank" rel="noopener">Replication</a></p><p><img src="https://superming.life/2020/04/20/MongoDB/replication.png" alt="replication"></p><p>主节点负责数据写入和更新，负责指定其他节点为从节点，并设置从节点的可读性。</p><p>在主节点发生故障时，有额外仲裁节点会参与选举新节点作为主节点。</p><p>副本集模式可以解决主节点发生故障导致数据丢失或不可用问题，但遇到存储海量数据情况时，就束手无策了。</p><h3 id="分片模式（Sharding）"><a href="#分片模式（Sharding）" class="headerlink" title="分片模式（Sharding）"></a>分片模式（Sharding）</h3><p>官方参考: <a href="https://docs.mongodb.com/manual/sharding/" target="_blank" rel="noopener">Sharding</a></p><p><img src="https://superming.life/2020/04/20/MongoDB/sharding.png" alt="sharding"></p><p>分片服务器（Shard Server）：每个分片服务器都是一个mongod数据库实例，用于存储实际的数据块。<strong>整个数据库集合分成多个块存储在不同分片服务器中</strong>。</p><p>配置服务器（Config Server）：保存集合和分片的元数据。</p><p>路由服务器（Route Server）：在集群中作为路由使用，客户端由此介入。路由服务器本身不保存数据，启动时从配置服务器加载集群信息到缓存中，并将客户端的请求路由给每个分片服务器，将各个分片服务器的返回结果进行聚合并返回客户端。</p><h2 id="Shell操作"><a href="#Shell操作" class="headerlink" title="Shell操作"></a>Shell操作</h2><h3 id="一-创建库与集合操作"><a href="#一-创建库与集合操作" class="headerlink" title="一. 创建库与集合操作"></a>一. 创建库与集合操作</h3><ol><li>创建一个名为library的数据库</li></ol><p>创建数据库的语法为<code>use DATABASE_NAME</code></p><p><code>use library</code></p><ol start="2"><li>在library数据库中创建名为book的集合</li></ol><p>创建集合<code>db.createCollection(&quot;book&quot;)</code></p><ol start="3"><li>将集合book重命名为new_book</li></ol><p>修改集合的语法为<code>db.collection.renameCollection(target, dropTarget)</code>，其中dropTarget为可选参数，如果为true，则mongod会在先删除原有集合。</p><p><code>db.collection.renameCollection(&quot;new_book&quot;)</code></p><ol start="4"><li>查看集合new_book的信息</li></ol><p>查询数据的语法为<a href="https://docs.mongodb.com/manual/reference/method/db.collection.find/#db.collection.find" target="_blank" rel="noopener"><code>db.collection.find(query, projection)</code></a>；query，document类型，使用查询操作符指定的查询条件；projection，document类型，使用投影操作副返回的键。</p><p><code>db.collection.find()</code></p><ol start="5"><li>删除集合new_books</li></ol><p>删除集合的语法为<a href="https://docs.mongodb.com/manual/reference/method/db.collection.drop/" target="_blank" rel="noopener"><code>db.collection.drop()</code></a>，</p><p><code>db.new_book.drop()</code></p><p>6.删除数据库library</p><p>删除数据库语法为<code>db.dropDatabase(&lt;option&gt;)</code></p><p><code>db.dropDatabase()</code></p><h3 id="二：文档插入"><a href="#二：文档插入" class="headerlink" title="二：文档插入"></a>二：文档插入</h3><p>文档插入有三种方式，分别为<a href="https://docs.mongodb.com/manual/reference/method/db.collection.insert/" target="_blank" rel="noopener"><code>db.collection.insert()</code></a>，<a href="https://docs.mongodb.com/manual/reference/method/db.collection.insertOne/" target="_blank" rel="noopener"><code>db.collection.insertOne()</code></a>，[<code>db.collection.insertMany()</code>()]；</p><p>insert( )语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"> db.collection.insert(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &lt;document or array of documents&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     writeConcern: &lt;document&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     ordered: &lt;boolean&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Example</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">db.products.insert( &#123; item: "card", qty: 15 &#125; )</span></pre></td></tr></table></figure><p>insertone( )语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.collection.insertOne(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &lt;document&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      writeConcern: &lt;document&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Examples:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">try &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">   db.products.insertOne( &#123; item: "card", qty: 15 &#125; );</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125; catch (e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">   print (e);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure><p>insertmany( )语法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.collection.insertMany(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   [ &lt;document 1&gt; , &lt;document 2&gt;, ... ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      writeConcern: &lt;document&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      ordered: &lt;boolean&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Examples：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">try &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">   db.products.insertMany( [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">      &#123; _id: 10, item: "large box", qty: 20 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">      &#123; _id: 11, item: "small box", qty: 55 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">      &#123; _id: 12, item: "medium box", qty: 30 &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">   ] );</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125; catch (e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">   print (e);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><img src="https://superming.life/2020/04/20/MongoDB/insert.png" alt="insert"></p><p>在插入文档时注意<code>[ ]</code>的使用，例如：</p><ol><li>在school数据库中按下表创建表示班级grade_1_2的集合，并插入相应文档：</li></ol><table><thead><tr><th>name</th><th>sex</th><th>age</th><th>hobby</th><th>telephone</th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td>fixed</td><td>mobile</td></tr><tr><td>Tom</td><td>M</td><td>18</td><td>Football, skiing</td><td>84833380</td><td>13840957289</td></tr><tr><td>Lisi</td><td>M</td><td>18</td><td>Swimming</td><td></td><td>15543789567</td></tr><tr><td>Jack</td><td>M</td><td>20</td><td>Baseball</td><td>84833380</td><td>17656775563</td></tr><tr><td>Joan</td><td>F</td><td>22</td><td></td><td>84832281</td><td>13840957289</td></tr><tr><td>Marry</td><td>F</td><td>25</td><td>Table tennis</td><td></td><td>15543789567</td></tr></tbody></table><p>其中hobby部分设计多个项目，如果使用<code>{name:&quot;Zhangsan&quot;,sex:&quot;M&quot;,age:20,hobby:&quot;Swimming&quot;,&quot;basketball&quot;,telephone:{fixed:&quot;84833380&quot;,mobile:&quot;13840957289&quot;}}</code>，后期会导致查询方面的问题。</p><p>应该使用<code>[ ]</code>将其中的内容括起来:<code>{name:&quot;Zhangsan&quot;,sex:&quot;M&quot;,age:20,hobby:[&quot;Swimming&quot;,&quot;basketball&quot;],telephone:{fixed:&quot;84833380&quot;,mobile:&quot;13840957289&quot;}}</code></p><p>上述插入操作如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.insertMany([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;name:"Tom",sex:"M",age:18,hobby:["Football","Skiing"],telephone:&#123;fixed:"84833380",mobile:"13840957289"&#125;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;name:"Lisi",sex:"M",age:18,hobby:"Swimming",telephone:&#123;fixed:"84833380",mobile:"17656775563"&#125;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#123;name:"Jack",sex:"M",age:20,hobby:"Swimming",telephone:&#123;fixed:"84832281",mobile:"13840957289"&#125;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#123;name:"Joan",sex:"F",age:22&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#123;name:"Marry",sex:"F",age:25,hobby:"Table tennis",telephone:&#123;mobile:"15543789567"&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">]);</span></pre></td></tr></table></figure><h3 id="三：简单文档增查"><a href="#三：简单文档增查" class="headerlink" title="三：简单文档增查"></a>三：简单文档增查</h3><p>文档查询一般使用<a href="https://docs.mongodb.com/manual/reference/method/db.collection.find/" target="_blank" rel="noopener"><code>db.collection.find(query, projection)</code></a></p><p>query：document类型，可选，使用查询操作运算符；</p><p>project：document类型，指定投影操作符返回字段，{ field1: <value>, field2: <value> … }，value为0不显示，1显示。</value></value></p><p>查询选择器参考：<a href="https://docs.mongodb.com/manual/reference/operator/query/#query-selectors" target="_blank" rel="noopener">Query Selectors</a></p><p><strong>多条件查询</strong>：</p><p><img src="https://superming.life/2020/04/20/MongoDB/Multiple.png" alt="multiple"></p><p><strong>查询数组元素参考</strong>：</p><p><img src="https://superming.life/2020/04/20/MongoDB/arrary.png" alt="array"></p><p><strong>其中对查询数据进行重新整理的行为参考如下</strong>：</p><p><img src="https://superming.life/2020/04/20/MongoDB/cusorbehavior.png" alt="cusorbehavior"></p><p><strong>练习内容：</strong></p><ol><li>查看一年级二班grade_1_2中所有年龄大于 20 岁并且小于25 岁的学生</li></ol><p><code>db.grade_1_2.find({age:{$gt:20,$lt:25}})</code></p><ol start="2"><li>查看一年级二班grade_1_2中所有年龄大于 20 岁并且性别值为M的学生</li></ol><p><code>db.grade_1_2.find({age:{$gt:20},&quot;sex&quot;:&quot;M&quot;})</code></p><ol start="3"><li>查看一年级二班grade_1_2中所有兴趣爱好为Football的学生</li></ol><p><code>db.grade_1_2.find({&quot;hobby&quot;:&quot;Football&quot;})</code></p><ol start="4"><li>查看一年级二班grade_1_2中所有兴趣爱好既包括Football又包括Skiing的学生</li></ol><p><code>db.grade_1_2.find({&quot;hobby&quot;:{$all:[&quot;Football&quot;,&quot;Sking&quot;]}})</code></p><ol start="5"><li>扩展：查看一年级二班grade_1_2中所有兴趣爱好既包括Football或Skiing的学生</li></ol><p><code>db.grade_1_2.find({&quot;hobby&quot;:{$in:[&quot;Football&quot;,&quot;Sking&quot;]}})</code></p><ol start="6"><li>查看一年级二班grade_1_2中所有兴趣爱好两个以上的学生</li></ol><p><code>db.grade_1_2.find({hobby:{$size:2}})</code></p><ol start="7"><li>查看一年级二班grade_1_2中所有兴趣爱好两个以上的学生的数量</li></ol><p><code>db.grade_1_2.find({hobby:{$size:2}}).count()</code></p><ol start="8"><li><p>查看一年级二班grade_1_2的第二位学生</p></li><li><p>使用skip跳过第一个同学</p></li></ol><p><code>db.grade_1_2.find().limit(1).skip(1)</code></p><ol start="10"><li>查看一年级二班grade_1_2的学生，按年纪升序</li></ol><p><code>db.grade_1_2.find().sort({&quot;age&quot;: 1})</code> [ -1 为降序 ]</p><h3 id="四：数据删除相关"><a href="#四：数据删除相关" class="headerlink" title="四：数据删除相关"></a>四：数据删除相关</h3><p>数据删除主要使用<a href="https://docs.mongodb.com/manual/reference/method/db.collection.remove/" target="_blank" rel="noopener"><code>db.collection.remove()</code></a>，语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.collection.remove(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &lt;query&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     justOne: &lt;boolean&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     writeConcern: &lt;document&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     collation: &lt;document&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> justone: 默认<span class="literal">false</span>，删除所有匹配条件的数据，若改为<span class="literal">true</span>，则仅删除第一条。</span></span></pre></td></tr></table></figure><p><strong>练习内容：</strong></p><ol><li>删除一年级二班grade_1_2所有 20 岁的学生</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.remove(&#123;age:20&#125;)</span></pre></td></tr></table></figure><ol start="2"><li>删除一年级二班grade_1_2第一位18岁的学生</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.remove(&#123;"age": 18&#125;, &#123;justOne: 1&#125;)</span></pre></td></tr></table></figure><ol start="3"><li>删除一年级三班grade_1_3所有爱好football的学生</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.remove(&#123;"hobby":"football"&#125;)</span></pre></td></tr></table></figure><h3 id="五：更新文档"><a href="#五：更新文档" class="headerlink" title="五：更新文档"></a>五：更新文档</h3><p>对文章内容进行更新修改，一般使用<a href="https://docs.mongodb.com/manual/reference/method/db.collection.update/" target="_blank" rel="noopener"><code>db.collection.update()</code></a></p><blockquote><p>Modifies an existing document or documents in a collection. The method can modify specific fields of an existing document or documents or replace an existing document entirely, depending on the <a href="https://docs.mongodb.com/manual/reference/method/db.collection.update/#update-parameter" target="_blank" rel="noopener">update parameter</a>.</p></blockquote><p>语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.collection.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &lt;query&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &lt;update&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     upsert: &lt;boolean&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     multi: &lt;boolean&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">     writeConcern: &lt;document&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">     collation: &lt;document&gt;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">     arrayFilters: [ &lt;filterdocument1&gt;, ... ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">     hint:  &lt;document|string&gt;        // Available starting in MongoDB 4.2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><p>Update的操作符：<a href="https://docs.mongodb.com/manual/reference/operator/update/#id1" target="_blank" rel="noopener">Update Operators</a></p><p><strong>Fields</strong></p><table><thead><tr><th align="left">Name</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/currentDate/#up._S_currentDate" target="_blank" rel="noopener"><code>$currentDate</code></a></td><td align="left">Sets the value of a field to current date, either as a Date or a Timestamp.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/inc/#up._S_inc" target="_blank" rel="noopener"><code>$inc</code></a></td><td align="left">Increments the value of the field by the specified amount.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/min/#up._S_min" target="_blank" rel="noopener"><code>$min</code></a></td><td align="left">Only updates the field if the specified value is less than the existing field value.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/max/#up._S_max" target="_blank" rel="noopener"><code>$max</code></a></td><td align="left">Only updates the field if the specified value is greater than the existing field value.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/mul/#up._S_mul" target="_blank" rel="noopener"><code>$mul</code></a></td><td align="left">Multiplies the value of the field by the specified amount.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/rename/#up._S_rename" target="_blank" rel="noopener"><code>$rename</code></a></td><td align="left">Renames a field.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/set/#up._S_set" target="_blank" rel="noopener"><code>$set</code></a></td><td align="left">Sets the value of a field in a document.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/setOnInsert/#up._S_setOnInsert" target="_blank" rel="noopener"><code>$setOnInsert</code></a></td><td align="left">Sets the value of a field if an update results in an insert of a document. Has no effect on update operations that modify existing documents.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/unset/#up._S_unset" target="_blank" rel="noopener"><code>$unset</code></a></td><td align="left">Removes the specified field from a document.</td></tr></tbody></table><p><strong>Array</strong></p><p>Operators</p><table><thead><tr><th align="left">Name</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/addToSet/#up._S_addToSet" target="_blank" rel="noopener"><code>$addToSet</code></a></td><td align="left">Adds elements to an array only if they do not already exist in the set.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/pop/#up._S_pop" target="_blank" rel="noopener"><code>$pop</code></a></td><td align="left">Removes the first or last item of an array.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/pull/#up._S_pull" target="_blank" rel="noopener"><code>$pull</code></a></td><td align="left">Removes all array elements that match a specified query.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/push/#up._S_push" target="_blank" rel="noopener"><code>$push</code></a></td><td align="left">Adds an item to an array.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/pullAll/#up._S_pullAll" target="_blank" rel="noopener"><code>$pullAll</code></a></td><td align="left">Removes all matching values from an array.</td></tr></tbody></table><p><strong>Modifiers</strong></p><table><thead><tr><th align="left">Name</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/each/#up._S_each" target="_blank" rel="noopener"><code>$each</code></a></td><td align="left">Modifies the <a href="https://docs.mongodb.com/manual/reference/operator/update/push/#up._S_push" target="_blank" rel="noopener"><code>$push</code></a> and <a href="https://docs.mongodb.com/manual/reference/operator/update/addToSet/#up._S_addToSet" target="_blank" rel="noopener"><code>$addToSet</code></a> operators to append multiple items for array updates.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/position/#up._S_position" target="_blank" rel="noopener"><code>$position</code></a></td><td align="left">Modifies the <a href="https://docs.mongodb.com/manual/reference/operator/update/push/#up._S_push" target="_blank" rel="noopener"><code>$push</code></a> operator to specify the position in the array to add elements.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/slice/#up._S_slice" target="_blank" rel="noopener"><code>$slice</code></a></td><td align="left">Modifies the <a href="https://docs.mongodb.com/manual/reference/operator/update/push/#up._S_push" target="_blank" rel="noopener"><code>$push</code></a> operator to limit the size of updated arrays.</td></tr><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/sort/#up._S_sort" target="_blank" rel="noopener"><code>$sort</code></a></td><td align="left">Modifies the <a href="https://docs.mongodb.com/manual/reference/operator/update/push/#up._S_push" target="_blank" rel="noopener"><code>$push</code></a> operator to reorder documents stored in an array.</td></tr></tbody></table><p><strong>Bitwise</strong></p><table><thead><tr><th align="left">Name</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><a href="https://docs.mongodb.com/manual/reference/operator/update/bit/#up._S_bit" target="_blank" rel="noopener"><code>$bit</code></a></td><td align="left">Performs bitwise <code>AND</code>, <code>OR</code>, and <code>XOR</code> updates of integer values.</td></tr></tbody></table><p>以官方为例，创建Collections如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.books.remove(&#123;&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">db.books.insertMany([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    "_id" : 1,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    "item" : "TBD",</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    "stock" : 0,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    "info" : &#123; "publisher" : "1111", "pages" : 430 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    "tags" : [ "technology", "computer" ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    "ratings" : [ &#123; "by" : "ijk", "rating" : 4 &#125;, &#123; "by" : "lmn", "rating" : 5 &#125; ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    "reorder" : false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">   &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    "_id" : 2,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    "item" : "XYZ123",</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    "stock" : 15,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    "info" : &#123; "publisher" : "5555", "pages" : 150 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    "tags" : [ ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    "ratings" : [ &#123; "by" : "xyz", "rating" : 5 &#125; ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    "reorder" : false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">]);</span></pre></td></tr></table></figure><p>inc 与 set 操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.books.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &#123; _id: 1 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     $inc: &#123; stock: 5 &#125;,   # stock增加5</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     $set: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">       item: "ABC123",# 修改item</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">       "info.publisher": "2222",# 修改info下的publisher</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">       tags: [ "software" ],# 修改tags</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">       "ratings.1": &#123; by: "xyz", rating: 3 &#125;# 修改rating的第一部分</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">     &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><p>push操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.books.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &#123; _id: 2 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     $push: &#123; ratings: &#123; "by" : "jkl", "rating" : 2 &#125; &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><p>unset操作，移除某filed操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.books.update(&#123;_id:2&#125;,&#123;$unset: &#123;tags:""&#125;&#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">same as : db.books.update( &#123; _id: 1 &#125;, &#123; <span class="variable">$unset</span>: &#123; tags: 1 &#125; &#125; )</span></span></pre></td></tr></table></figure><p>与SQL语句类似，即：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE books</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">DROP COLUMN tags</span></pre></td></tr></table></figure><p>文档覆盖操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.books.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &#123; _id: 2 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     item: "XYZ123",</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     stock: 10,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     info: &#123; publisher: "2255", pages: 150 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">     tags: [ "baking", "cooking" ]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">   &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><p><strong>练习内容：</strong></p><ol><li>修改一年级二班grade_1_2中名为Joan的学生，年龄为 22 岁，兴趣爱好为 dance和drawing</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;"name":"Joan"&#125;,&#123;$set:&#123;age:22,"hobby":["dancing","drawing"]&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><ol start="2"><li>追加一年级二班grade_1_2中，名为Joan的学生的兴趣爱好sing</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;“name”:Joan&#125;,&#123;$push:&#123;“hobby”:sing&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><ol start="3"><li>追加一年级二班grade_1_2中，名为Joan的学生的兴趣爱好sing和basketball，要保证hobby数组不重复；</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;"name":"Joan"&#125;,&#123;$addToSet:&#123;"hobby":&#123;$each:["sing","basketball"]&#125;&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><ol start="4"><li>新学年，给一年级二班所有学生的年龄都增加一岁</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;$inc:&#123;"age":1&#125;&#125;,&#123;multi:true&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><ol start="5"><li>删除一年级二班grade_1_2中，名为Joan的学生的sex属性</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_2.update(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;"name":"Joan"&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;$unset:&#123;"sex":1&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">)</span></pre></td></tr></table></figure><h3 id="六：文档聚合"><a href="#六：文档聚合" class="headerlink" title="六：文档聚合"></a>六：文档聚合</h3><p>文档聚合主要用于处理数据并返回计算结果，聚合操作将来自多个文档的值聚合在一起，按条件分组后，再进行一系列操作（求和、平均值、最大值、最小值）以返回单个结果。</p><p><strong>聚合管道</strong>是最常用的一种聚合方法，将前一条语句的结果作为第二条语句的输入。</p><p>MongoDB聚合管道由阶段组成，每个阶段在文档通过管道时转换文档。</p><p>使用<code>db.collection.aggregate(pipeline, options)</code></p><p>aggregate( )的阶段参考：<a href="https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/" target="_blank" rel="noopener">db.collection,aggregate()Stages</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建聚合示例</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">db.orders.insertMany([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123; "_id": 1, "cust_id": "abc1", "ord_date": ISODate("2012-11-02T17:04:11.102Z"), "status": "A", "amount": 50 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#123;" _id": 2, "cust_id": "xyz1", "ord_date": ISODate("2013-10-01T17:04:11.102Z"), "status": "A", "amount": 100 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#123; "_id": 3, "cust_id": "xyz1", "ord_date": ISODate("2013-10-12T17:04:11.102Z"), "status": "D", "amount": 25 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#123;" _id": 4, "cust_id": "xyz1", "ord_date": ISODate("2013-10-11T17:04:11.102Z"), "status": "D", "amount": 125 &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#123;" _id": 5, "cust_id": "abc1", "ord_date": ISODate("2013-11-12T17:04:11.102Z"), "status": "A", "amount": 25 &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">])</span></pre></td></tr></table></figure><p>分组计算总和：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.orders.aggregate([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">                     &#123; $match: &#123; status: "A" &#125; &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">                     &#123; $group: &#123; _id: "$cust_id", total: &#123; $sum: "$amount" &#125; &#125; &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">                     &#123; $sort: &#123; total: -1 &#125; &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">                   ])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 统计所有状态为‘A’，按cust_id分组，计算总价</span></span></pre></td></tr></table></figure><p><strong>练习内容：</strong></p><ol><li>统计每名学生在考试中的总分</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_4.aggregate([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;$group:&#123;_id:"$name",score:&#123;$sum:&#123;$sum:["$score.chinese","$score.math","$score.english"]&#125;&#125;&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">])</span></pre></td></tr></table></figure><ol start="2"><li>统计每名男生在考试中的总分及平均分</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_4.aggregate([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;$match:&#123;sex:"M"&#125;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;$group:&#123;_id:"$name",score:&#123;$sum:&#123;$sum:["$score.chinese","$score.math","$score.english"]&#125;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">avg:&#123;$avg:&#123;$avg:["$score.chinese","$score.math","$score.english"]&#125;&#125;&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">])</span></pre></td></tr></table></figure><ol start="3"><li>根据姓名分组，并统计人数</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_4.aggregate([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;$group:&#123;_id:"$name",numbers:&#123;$sum:1&#125;&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">])</span></pre></td></tr></table></figure><ol start="4"><li>根据姓名分组，并统计人数，过滤人数大于2的学生</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_4.aggregate([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;$group:&#123;_id:"$name",numbers:&#123;$sum:1&#125;&#125;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;$match:&#123;numbers:&#123;$gt:2&#125;&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">])</span></pre></td></tr></table></figure><ol start="5"><li>统计每名男生在考试中的总分</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">db.grade_1_4.aggregate([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;$match:&#123;sex:"M"&#125;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;$group:&#123;_id:"$name",score:&#123;$sum:&#123;$sum:["$score.chinese","$score.math","$score.english"]&#125;&#125;&#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">])</span></pre></td></tr></table></figure><p>参考：</p><p><a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x-tarball/#run-mongod-with-a-configuration-file" target="_blank" rel="noopener">MongoDB官方安装教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MongoDB&quot;&gt;&lt;a href=&quot;#MongoDB&quot; class=&quot;headerlink&quot; title=&quot;MongoDB&quot;&gt;&lt;/a&gt;MongoDB&lt;/h1&gt;&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;h3 id=&quot;使用tar包进行安装&quot;&gt;&lt;a href=&quot;#使用tar包进行安装&quot; class=&quot;headerlink&quot; title=&quot;使用tar包进行安装&quot;&gt;&lt;/a&gt;使用tar包进行安装&lt;/h3&gt;&lt;p&gt;前提：&lt;/p&gt;
&lt;p&gt;MongoDB4.2社区版支持macOS 10.12及后续版本。&lt;/p&gt;
&lt;p&gt;下载tar包：&lt;a href=&quot;https://www.mongodb.com/download-center/community?tck=docs_server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;OS选择macOSx64，包选择TGZ，点击下载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把下载文件移至&lt;code&gt;/usr/local&lt;/code&gt;下，进行解压缩。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf mongodb-macos-x86_64-4.2.5.tgz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mv mongodb-osx-x86_64-4.2.5/ mongodb  //重命名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;将bin目录下的文件放入&lt;code&gt;/usr/local/bin&lt;/code&gt;下&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo cp /usr/local/mongodb/bin/* /usr/local/bin/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="BigData" scheme="https://superming.life/tags/BigData/"/>
    
      <category term="MongoDB" scheme="https://superming.life/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>NoSQL</title>
    <link href="https://superming.life/2020/04/14/NoSQL/"/>
    <id>https://superming.life/2020/04/14/NoSQL/</id>
    <published>2020-04-13T16:17:58.000Z</published>
    <updated>2020-10-15T08:28:23.007Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>NoSQL( Not only SQL ) 是非关系型数据库的统称，其数据模型采用类似键/值、列族、文档等非关系模型。因为没有固定的表结构，故不存在连接操作，也无ACID约束。</p><p><strong>主要特点：</strong></p><p>可扩展性：传统的关系型数据库由于其设计约束，很难实现“横向扩展”，只能通过升级硬件来实现“纵向拓展”。而NoSQL数据库的设计初衷就是为了满足“横向扩展”，因此具有很好的水平扩展能力。</p><p>数据模型：关系模型是关系数据库的基石，以完备的关系代数理论为基础，保证了业务系统对数据一致性需求，但过多的束缚条件很难满足各新兴业务需求。而NoSQL摒弃各种束缚条件，采用新的模型，允许在一个数据元素中存储不同类型的数据。</p><p>云计算：云计算具有很好的水平扩展能力，根据资源使用情况进行自由伸缩，各种动态资源可以动态加入或退出。NoSQL凭良好的横向扩展能力，很好融入云计算环境中，构建基于NoSQL的云数据库服务。</p><a id="more"></a><h3 id="为何兴起？"><a href="#为何兴起？" class="headerlink" title="为何兴起？"></a>为何兴起？</h3><p>随着Web2.0时代以及大数据时代的带来。关系数据库暴露出很多缺陷「在银行、电信等各类商业公司具有较好的需求」，为了满足新兴业务和市场需求，NoSQL应运而生。</p><p>关系数据库无法满足Web2.0的需求：无法满足海量数据的管理需求，无法满足数据高并发的需求，无法满足高可扩展性和高可用性需求。</p><p>Web2.0特性：通常不要求严格的数据库事务，不要求严格的读写实时性，不包含大量复杂的SQL查询。</p><h2 id="NOSQL-vs-RDBMS"><a href="#NOSQL-vs-RDBMS" class="headerlink" title="NOSQL vs RDBMS"></a>NOSQL vs RDBMS</h2><p><img src="https://superming.life/2020/04/14/NoSQL/nosqlvssql.png" alt="nosqlvssql"></p><p>以下为NoSQL与关系数据库(Relatioal DataBase Management System)之间的比较。</p><p><img src="https://superming.life/2020/04/14/NoSQL/compare1.png" alt="compare1"></p><p><img src="https://superming.life/2020/04/14/NoSQL/compare2.png" alt="compare1"></p><p><img src="https://superming.life/2020/04/14/NoSQL/compare3.png" alt="compare1"></p><p>由上图比较可见，<strong>关系数据库</strong>优势在于以完善的关系代数理论作为基础，具有严格的标准，支持ACID四性并且可以实现高效的查询，技术成熟且开发环境支持良好。劣势在于其可扩展性较差，无法较好支持海量的数据存储，数据模型过于死板，无法很好支持Web2.0应用。事务机制影响系统整体性能等。    <strong>NoSQL数据库</strong>的明显优势在于，可以支持超大规模的数据存储，灵活的数据模型，同时具备良好的横向扩展能力。其劣势在于：很难实现数据完整性，缺乏数学理论基础，复杂性查询性能不高，一般不能实现事务的强一致性，维护较为困难。很重要的一个局限在于NoSQL没有一个统一的查询语言，各自独立，这将拖慢NoSQL发展。</p><p>综上，两者各有所长，都具有各自的用户群体和市场，根据需求选择。</p><h2 id="NoSQL四大类型"><a href="#NoSQL四大类型" class="headerlink" title="NoSQL四大类型"></a>NoSQL四大类型</h2><p>NoSQL数据库数量众多，主要分为四大类型：<strong>键值数据库、列族数据库、文档数据库和图数据库</strong>。</p><p><img src="https://superming.life/2020/04/14/NoSQL/type.png" alt="compare1"></p><p><img src="https://superming.life/2020/04/14/NoSQL/NoSQLfamily.png" alt="NoSQLfamily"></p><h3 id="键值数据库"><a href="#键值数据库" class="headerlink" title="键值数据库"></a>键值数据库</h3><p>键值数据库（Key-Value Database）使用一个哈希表，表中有一个特定Key和一个指针指向特定的Value。Key可以定位Value，即检索具体的Value。<strong>适合大量写操作的情况</strong>。</p><p><img src="https://superming.life/2020/04/14/NoSQL/keyvalue.png" alt="compare1"></p><h3 id="列族数据库"><a href="#列族数据库" class="headerlink" title="列族数据库"></a>列族数据库</h3><p>一般采用列族数据模型，数据库由多个行构成，每个数据包括多个列族，不同的行可以有不同数量的列族，属于统一列族的数据会存放在一起。每行数据通过行键进行定位，与这个行键对应的是一个列族，从该角度看，列族数据库可被视为键值数据库。</p><p><img src="https://superming.life/2020/04/14/NoSQL/column.png" alt="compare1"></p><h3 id="文档数据库"><a href="#文档数据库" class="headerlink" title="文档数据库"></a>文档数据库</h3><p>文档是文档数据库最小单位。文档数据库通过键来进行定位一个文档，为键值数据库的衍生品，比键值数据库有更好的查询效率。一个文档可以包含非常复杂的数据结构，如嵌套对象，且不需要特定的数据模式。**文档数据库即可以根据键（Key）构建索引，也可以基于文档内容构建索引，后者为其与键值数据库的主要差别。</p><p><img src="https://superming.life/2020/04/14/NoSQL/doc.png" alt="compare1"></p><h3 id="图数据库"><a href="#图数据库" class="headerlink" title="图数据库"></a>图数据库</h3><p>图数据库以图论为基础，一个图表示一个对象集合，包括顶点以及连接顶点的边。可以高效地存储不同顶点之间的关系。图数据库专门用于处理具有高度相互关联关系的数据，可以高效处理实体之间的关系，适合社交网络、模式识别、依赖分析等问题。</p><p><img src="https://superming.life/2020/04/14/NoSQL/map.png" alt="compare1"></p><h2 id="NoSQL三大基石"><a href="#NoSQL三大基石" class="headerlink" title="NoSQL三大基石"></a>NoSQL三大基石</h2><p>NoSQL三大基石包括CAP、BASE和最终一致性。</p><h3 id="CAP"><a href="#CAP" class="headerlink" title="CAP"></a>CAP</h3><p><strong>C(Consistency)</strong>:一致性，是指任何一个读操作总是能够读到之前完成的写操作的结果，也就是在分布式环境中，多点的数据是一致的，即<strong>所有节点在同一时间具有相同的数据。</strong></p><p><strong>A(Availability)</strong>:可用性，是指快速获取数据，可以在确定的时间内返回操作结果，<strong>保证每个请求不管成功或者失败都有响应**</strong>。</p><p><strong>P(Tolerance of Network Partition)</strong>:分区容错性，是指当出现网络分区的情况时(即系统中的一部分节点无法和其他节点进行通信)，分离的系统也能够正常运行，即<strong>系统中任意信息的丢失或失败不会影响系统的继续运作。</strong></p><p>但是一个分布式系统不可能同时满足以上三个需求，最多只能满足其中的两个。</p><p><img src="https://superming.life/2020/04/14/NoSQL/cap.png" alt="cap"></p><h3 id="BASE"><a href="#BASE" class="headerlink" title="BASE"></a>BASE</h3><p>BASE: Basically Availble, Soft-state, Eventual consistency。</p><p>Basically Availble：基本可用。指允许一个分布式系统的一部分发生问题变得不可用时，其余部分仍可以正常使用，即允许分区失败的情形出现。</p><p>Soft-state:软状态。指的是状态有一段时间不同步，允许一定的滞后性。</p><p>Eventual Consistency：最终一致性。分为强一致性和弱一致性。区别在于高并发数据访问的情况下，后续操作能否<strong>及时</strong>获得最新数据。最终一致性是弱一致性的一种特例，允许后续的访问操作可以暂时读不到更新后的数据，但一段时间后，必须读到更新后的数据。</p><blockquote><p>最常见的实现最终一致性的系统是DNS(域名系统)。一个域名更 新操作根据配置的形式被分发出去，并结合有过期机制的缓存;最终所有的客户端可以看到最新的值。</p></blockquote><h3 id="Eventual-consistency"><a href="#Eventual-consistency" class="headerlink" title="Eventual consistency"></a>Eventual consistency</h3><p>最终一致性，需要从两个角度来考虑。<strong>从服务端看</strong>，一致性指更新如何复制分布到整个系统，以保证数据的最终一致。<strong>从客户端来看</strong>，一致性主要指高并发的数据访问操作下，后续操作能否获得最新数据。「关系数据库通常实现强一致性，即一个更新完成，后续访问可立即读取更新后的数据。」弱一致而言，则无法保证。</p><p><strong>最终一致性要求很低，只要经过一段时间后能够访问到更新数据即可。</strong></p><p>最终一致性根据更新数据后各进程访问到数据的时间和方式的不同， 又可以区分为:</p><blockquote><p>因果一致性：如果进程A通知进程B它已更新了一个数据项，那么进程B 的后续访问将获得A写入的最新值。而与进程A无因果关系的进程C的访问， 仍然遵守一般的最终一致性规则 。</p><p>“读己之所写”一致性：可以视为因果一致性的一个特例。当进程A自 己执行一个更新操作之后，它自己总是可以访问到更新过的值，绝不会看 到旧值 。</p><p>单调读一致性：如果进程已经看到过数据对象的某个值，那么任何后续 访问都不会返回在那个值之前的值。</p><p>会话一致性：它把访问存储系统的进程放到会话(session)的上下文中， 只要会话还存在，系统就保证“读己之所写”一致性。如果由于某些失败 情形令会话终止，就要建立新的会话，而且系统保证不会延续到新的会话 。</p><p>单调写一致性：系统保证来自同一个进程的写操作顺序执行。系统必须 保证这种程度的一致性，否则就非常难以编程了。</p></blockquote><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>简单介绍了NoSQL数据库相关知识以及与传统数据库的对比。但并非可以偏袒或夸大某方，两者各有所长，为了满足市场的差异化需求而存在。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;NoSQL&quot;&gt;&lt;a href=&quot;#NoSQL&quot; class=&quot;headerlink&quot; title=&quot;NoSQL&quot;&gt;&lt;/a&gt;NoSQL&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;NoSQL( Not only SQL ) 是非关系型数据库的统称，其数据模型采用类似键/值、列族、文档等非关系模型。因为没有固定的表结构，故不存在连接操作，也无ACID约束。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要特点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可扩展性：传统的关系型数据库由于其设计约束，很难实现“横向扩展”，只能通过升级硬件来实现“纵向拓展”。而NoSQL数据库的设计初衷就是为了满足“横向扩展”，因此具有很好的水平扩展能力。&lt;/p&gt;
&lt;p&gt;数据模型：关系模型是关系数据库的基石，以完备的关系代数理论为基础，保证了业务系统对数据一致性需求，但过多的束缚条件很难满足各新兴业务需求。而NoSQL摒弃各种束缚条件，采用新的模型，允许在一个数据元素中存储不同类型的数据。&lt;/p&gt;
&lt;p&gt;云计算：云计算具有很好的水平扩展能力，根据资源使用情况进行自由伸缩，各种动态资源可以动态加入或退出。NoSQL凭良好的横向扩展能力，很好融入云计算环境中，构建基于NoSQL的云数据库服务。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CS" scheme="https://superming.life/categories/CS/"/>
    
    
      <category term="BigData" scheme="https://superming.life/tags/BigData/"/>
    
  </entry>
  
</feed>
