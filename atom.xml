<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Superming&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-04T08:13:37.677Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>SuperMing</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo 个人博客高级配置</title>
    <link href="http://yoursite.com/2020/01/21/Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2020/01/21/Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/</id>
    <published>2020-01-21T14:12:37.000Z</published>
    <updated>2020-02-04T08:13:37.677Z</updated>
    
    <content type="html"><![CDATA[<p>本文简单介绍我搭建博客时考虑到或直接用上的几个集成功能。</p><h2 id="访问统计"><a href="#访问统计" class="headerlink" title="访问统计"></a>访问统计</h2><h3 id="站点访问量统计"><a href="#站点访问量统计" class="headerlink" title="站点访问量统计"></a>站点访问量统计</h3><p>访问统计功能由<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a>提供，详细使用参见其个人网站。</p><ul><li><p>效果如下：【前者为uv算法显示，后者为pv算法显示】</p><p><img src="Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/busuanzi.png" alt="valine"></p></li></ul><p>我所使用的Next主题已经集成此功能，只需添加脚本和开启功能即可。</p><p>访问主题下的footer.swig文件添加代码，<code>path:themes/next/layout/_partials/footer.swig</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">async</span> </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></pre></td></tr></table></figure><a id="more"></a><p>然后打开<strong>主题</strong>配置文件，搜索找到busuanzi对应配置页面进行如下配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># count values only if the other configs are false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># custom uv span for the whole site</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">site_uv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-user"&gt;&lt;/i&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">site_uv_footer:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># custom pv span for the whole site</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">site_pv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-eye"&gt;&lt;/i&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">site_pv_footer:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># custom pv span for one page only</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">page_pv:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">page_pv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-file-o"&gt;&lt;/i&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">page_pv_footer:</span></span></pre></td></tr></table></figure><p>插件提供了两种不同的算法：</p><p>算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量；配置<code>site_pv:ture</code>开启。</p><p>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数；配置<code>site_uv:ture</code>开启。</p><p>不蒜子还提供了单页面点击量的统计，配置<code>page_pv:ture</code>开启。</p><h3 id="文章访问量统计"><a href="#文章访问量统计" class="headerlink" title="文章访问量统计"></a>文章访问量统计</h3><p>文章统计基于LeanCloud所提供的后端数据支持。</p><ul><li>效果如下：</li></ul><p><img src="Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/count.png" alt="valine"></p><p>需要在LeanCloud上注册一个账号并且创建一个应用，需要进行实名认证，创建一个Counter的Class，开放所有的权限。</p><p><img src="Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/leancloud.png" alt="valine"></p><p>然后找到控制台中的设置，然后点击应用Keys，App ID 和 App Key 填入到主题配置文件中。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">appid:</span> <span class="string">//</span> <span class="string">your</span> <span class="string">appid</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">appkey:</span> <span class="string">//</span> <span class="string">your</span> <span class="string">appkey</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># comment box placeholder</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># gravatar style</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span></pre></td></tr></table></figure><p>设置完毕后，在安全中心内配置网站的域名，以保护数据安全。</p><p>不蒜子能够在页面内提供文章的阅读统计次数，而不能在主页显示，所以我选择了使用LeanCloud进行站点统计。</p><h2 id="添加豆瓣插件"><a href="#添加豆瓣插件" class="headerlink" title="添加豆瓣插件"></a>添加豆瓣插件</h2><p>使用相关插件爬取你的豆瓣数据，生成单独页面进行显示。<a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">插件参考</a></p><ul><li>效果如下：</li></ul><p><img src="Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/douban.png" alt="valine"></p><p>进入根目录执行下面命令安装</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ npm install hexo-douban --save</span></pre></td></tr></table></figure><p>将以下内容写入到站点的配置文件_config.yml中，如果不想显示某些页面，注释掉即可。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">douban:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">user:</span> <span class="string">mythsman</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">builtin:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">book:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">title:</span> <span class="string">'This is my book title'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">quote:</span> <span class="string">'This is my book quote'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">movie:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">title:</span> <span class="string">'This is my movie title'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">quote:</span> <span class="string">'This is my movie quote'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">game:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">title:</span> <span class="string">'This is my game title'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">quote:</span> <span class="string">'This is my game quote'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">timeout:</span> <span class="number">10000</span></span></pre></td></tr></table></figure><ul><li><strong>user</strong>: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://www.douban.com/people/xxxxxx/&quot;" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/&quot;</a> ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>: 是否将生成页面的功能嵌入<code>hexo s</code>和<code>hexo g</code>中，默认是<code>false</code>,另一可选项为<code>true</code></li><li><strong>title</strong>: 该页面的标题.</li><li><strong>quote</strong>: 写在页面开头的一段话,支持html语法.</li><li><strong>timeout</strong>: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul><p>配置完毕后进入<strong>主题</strong>对菜单进行配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">Home:</span> <span class="string">/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">Books:</span> <span class="string">/books</span>     <span class="comment">#This is your books page</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">Movies:</span> <span class="string">/movies</span>   <span class="comment">#This is your movies page</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">Games:</span> <span class="string">/games</span>   <span class="comment">#This is your games page</span></span></pre></td></tr></table></figure><p>然后在根目录下执行下列命令生成所有的页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo douban</span></pre></td></tr></table></figure><p>生成指定页面需要添加Options参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo douban -h</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Usage: hexo douban</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Description:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Generate pages from douban</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Options:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  -b, --books   Generate douban books only</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  -g, --games   Generate douban games only</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  -m, --movies  Generate douban movies only</span></pre></td></tr></table></figure><p>即<code>hexo douban -b</code>仅生成书本页面，其余同理。</p><p><strong>Warning：</strong></p><p>一般大家都喜欢使简化命令用<code>hexo g</code>和<code>hexo d</code>来进行部署，但安装此插件后与简化命令冲突，不能使用<code>hexo d</code>了，coz<code>hexo douban</code>和<code>hexo deploy</code>前缀都为<code>hexo d</code>。</p><h2 id="文章评论功能"><a href="#文章评论功能" class="headerlink" title="文章评论功能"></a>文章评论功能</h2><p>Next主题支持很多主流的评论系统。</p><p><a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a>：超喜欢的欧美风，主流社交媒体登陆。</p><p><a href="https://www.hypercomments.com/" target="_blank" rel="noopener">Hypercomments</a>:简洁且风格非常漂亮，支持图片视频，收费，国外开发者。</p><p><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a>：国内开发者，简洁，符合我的审美，支持Markdown和匿名评论。</p><p><a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">Gitment</a>：使用github账号登陆，支持Markdown语法，风格类github Issue。</p><p><a href="https://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言</a>：国内开发者，没仔细研究。</p><p>面对这么选择，简单比较后，我选择了Valine作为我的blog评论插件，首先考虑到国内的上网环境，排除了Disqus和Hypercomments，其次考虑到免费和方便，同时照顾到简洁，Gitment评论登陆这个跳转我认为很影响体验，所以还是选择了Valine，免费、简洁、轻量化，支持一波。</p><ul><li>效果如下：</li></ul><p><img src="Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/valine.png" alt="valine"></p><p>直接打开<strong>主题配置</strong>，找到Valine组件，因为Valine基于Leancloud所提供的后段服务，需要配置LeanCloud的App ID和App Key。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">appid:</span> <span class="string">***&lt;app_id***</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">appkey:</span> <span class="string">***&lt;app_key&gt;***</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># comment box placeholder</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># gravatar style</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span></pre></td></tr></table></figure><p>配置完毕后，在Leancloud设置界面的安全中心添加你的域名。刷新一下即可看见评论框了。</p><p>关于Valine在Next的集成，不同版本的配置文件不同，我也是查看了bluelzy的<a href="https://bluelzy.com/articles/use_valine_for_your_blog.html" target="_blank" rel="noopener">这篇文章</a>才解决我的问题。</p><p>我的问题：主题配置中为<code>app_id</code>和<code>app_key</code>，而Valine需要的字段名为<code>appid</code>和<code>appkey</code>，去掉中间的<code>_</code>配置成功。</p><p>最后有一个Valine相关拓展的教程详见：<a href="http://www.zhaojun.im/hexo-valine-admin/" target="_blank" rel="noopener">Valine 扩展之邮件通知</a></p><hr><p>以上为我的Blog所用的几个插件，也了解了一些别的插件，比如参考链接，投票等，感觉没有很大必要，目前只集成了这几个，后续若有新发现，会继续更新～谢谢。</p><h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><ul><li><p><a href="https://io-oi.me/tech/hexo-next-optimization/" target="_blank" rel="noopener">打造个性超赞博客 Hexo + Next + Github Pages 的超深度优化</a></p></li><li><p><a href="http://yearito.cn/posts/hexo-advanced-settings.html" target="_blank" rel="noopener">Hexo 搭建个人博客系列：进阶设置篇</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文简单介绍我搭建博客时考虑到或直接用上的几个集成功能。&lt;/p&gt;
&lt;h2 id=&quot;访问统计&quot;&gt;&lt;a href=&quot;#访问统计&quot; class=&quot;headerlink&quot; title=&quot;访问统计&quot;&gt;&lt;/a&gt;访问统计&lt;/h2&gt;&lt;h3 id=&quot;站点访问量统计&quot;&gt;&lt;a href=&quot;#站点访问量统计&quot; class=&quot;headerlink&quot; title=&quot;站点访问量统计&quot;&gt;&lt;/a&gt;站点访问量统计&lt;/h3&gt;&lt;p&gt;访问统计功能由&lt;a href=&quot;http://ibruce.info/2015/04/04/busuanzi/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;不蒜子&lt;/a&gt;提供，详细使用参见其个人网站。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;效果如下：【前者为uv算法显示，后者为pv算法显示】&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;Hexo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/busuanzi.png&quot; alt=&quot;valine&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我所使用的Next主题已经集成此功能，只需添加脚本和开启功能即可。&lt;/p&gt;
&lt;p&gt;访问主题下的footer.swig文件添加代码，&lt;code&gt;path:themes/next/layout/_partials/footer.swig&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;attr&quot;&gt;async&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Next" scheme="http://yoursite.com/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建指北 Hexo+Next+GitHub Pages</title>
    <link href="http://yoursite.com/2020/01/15/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97-Hexo-Next-GitHub-Pages/"/>
    <id>http://yoursite.com/2020/01/15/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97-Hexo-Next-GitHub-Pages/</id>
    <published>2020-01-15T05:13:56.000Z</published>
    <updated>2020-02-04T08:13:37.689Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>鉴于国内各平台现状，它们张口闭口信息共享，言论自由；努力建墙造岛的也是它们，我看到了一座座的数据孤岛，且没有一点好转的迹象…</p><p>还是决定搭建个人博客。记录下一点一滴，觉得对自己、对他人乃至对社会有一点点帮助的文字。</p><p>作为渺小到不能在渺小的个体，随时可能堙灭，悄无声息。而字节一直流淌在互联网之中，只要能够被检索到，一直都会存在。</p></blockquote><p>提到搭建网页，很多朋友都会想要数据库、服务器，还要域名balabala…听着就很麻烦…</p><p>好在大家都在为如何快速搭建博客这一目标努力着，出现了有很多流行的框架，有快速简洁的Hexo、兼容性更强的JekyII，传说最好的博客平台FarBox，简单易用的Hugo…这些框架大大简化了你发布一篇文章的步骤，你负责写文章，框架负责页面的生成。</p><p>而关于服务器，良心的GitHub为你解决了这个问题，Github Pages为每个账户提供一个 {username}.github.io 的仓库，同时为其分配一个二级域名，又支持自定义域名，服务器的问题解决了。接下来就正式开始吧。</p><a id="more"></a><h2 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h2><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a><a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">Node.js</a></h3><p>Hexo安装需要依赖Node.js，安装完毕后确保能使用npm命令。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">brew install node</span></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span></pre></td></tr></table></figure><p>等待安装完毕，确认能否正常使用hexo命令</p><p>安装hexo-deployer-git，是一个支持Git部署的插件，需要通过这个插件才能将其部署到GitHub上</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></figure><h2 id="本地项目初始化"><a href="#本地项目初始化" class="headerlink" title="本地项目初始化"></a>本地项目初始化</h2><p>进入对应目录</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo init blog  <span class="comment">//blog为项目名称,可改为你自己的项目名称</span></span></pre></td></tr></table></figure><p>创建完项目后对应项目文件夹下会生成themes、sources等文件，然后我们进入生成的文件夹中，使用Hexo自带的generate命令，将文件生成对应的静态页面。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo generate <span class="comment">//hexo提供简写命令 hexo g 可达成相同效果</span></span></pre></td></tr></table></figure><p>创建完毕后使用Hexo的Server命令将站点在本地运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//出现以下输出：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">INFO  Hexo is <span class="built_in">running</span> at http:<span class="comment">//localhost:4000 . Press Ctrl+C to stop.</span></span></pre></td></tr></table></figure><p>打开浏览器查看本地4000端口就可以查看网站了<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p>到此为止，博客的本地搭建就此结束。</p><h2 id="Github-Pages创建-部署"><a href="#Github-Pages创建-部署" class="headerlink" title="Github  Pages创建+部署"></a>Github  Pages创建+部署</h2><p>创建Github仓库，命名严格按照这个格式： {username}.github.io。username改为你的Github用户名即可。同时Github需要配置下SSH。</p><p>Github Pages创建完毕。接下来我们需要将本地的网站部署到Github Pages上，首先我们需要进行配置，打开根目录下的_config.yml文件，在Deployment处的repo改为新建的GitHub Repository的地址，指定为master分支。</p><p>修改前：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Deployment</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  type: git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  repo: &#123;git repo ssh address&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  branch: master</span></pre></td></tr></table></figure><p>我的修改后如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Deployment</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  type: git </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  repo: git@github.com:Super-ming<span class="number">-666</span>/Super-ming<span class="number">-666.</span>github.io.git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  branch: master</span></pre></td></tr></table></figure><p>修改成功后将其部署到GitHub Pages上「必须安装hexo-deployer-git插件」</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo deploy <span class="comment">//部署命令，hexo d可达到相同效果</span></span></pre></td></tr></table></figure><p>等待部署完成，如果部署完成，我们就可以通过<a href="http://Super-ming-666.github.io来访问我们的博客了，相当于hexo将编译之后的静态页面上传到了GitHub的Master分支上了。" target="_blank" rel="noopener">http://Super-ming-666.github.io来访问我们的博客了，相当于hexo将编译之后的静态页面上传到了GitHub的Master分支上了。</a></p><p>到此为止，博客的搭建和部署完成。接下来就是各种花里胡哨的站点配置和主题选择了。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>注意有<strong>两个</strong>_config.yml配置文件，一个在站点的根目录下，另一个配置文件在主题下，比如我的主题为next，其配置路径在/blog/theme/next/_config.yml。</p><p>hexo的主题选择：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo主题</a></p><p>hexo有很多漂亮的主题，将喜欢的主题clone到根目录然后稍加配置即可。</p><p>以next主题为例，将next的master分支直接clone下来</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/theme-next/hexo-theme-next themes/next</span></span></pre></td></tr></table></figure><p>clone完毕后，你会发现theme文件下多了next主题的源文件。</p><p>此时我们需要修改<strong>根目录</strong>的配置文件_config.yml，找到theme字段，修改为next即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Extensions</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">## Plugins: https:<span class="comment">//hexo.io/plugins/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">## Themes: https:<span class="comment">//hexo.io/themes/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">theme: next</span></pre></td></tr></table></figure><p>重新使用hexo server进行本地服务开启，检验主题是否切换成功。</p><h3 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h3><p>站点配置的文件在根目录下的_config.yml下，找到Site区域，，可以对站点的信息进行配置，以下是我的配置，比较简单。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">title: SuperMing<span class="number">'</span>s Blog </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">subtitle: <span class="string">''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">description: ''</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">keywords:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">author: SuperMing</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">language: en</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">timezone: <span class="string">''</span></span></pre></td></tr></table></figure><p>subtitle设置副标题等…语言如果要设置为汉语的话选择：zh-CN</p><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>所有主题配置文件在theme/next/_config.yml中进行修改。</p><p>关于主题修改参见官方文档：<a href="https://theme-next.org/docs/theme-settings/" target="_blank" rel="noopener">官方文档</a></p><p>样式：Next一共四种样式，我选择的是mist样式，大家根据喜好选择，去掉对应样式前的#即可。</p><p><img src="%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97-Hexo-Next-GitHub-Pages/themes.png" alt="themes"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta"># scheme: Muse</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">scheme: Mist</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#scheme: Pisces</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#scheme: Gemini</span></span></pre></td></tr></table></figure><h4 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h4><p>博客怎么可以没有RSS订阅呢，安装一个插件即可开启RSS订阅，插件名为hexo-generator-feed</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span></pre></td></tr></table></figure><p>安装完成后无需任何配置，站点会自动生成RSS_Feed文件。</p><h4 id="Favicon-Avatar"><a href="#Favicon-Avatar" class="headerlink" title="Favicon/Avatar"></a>Favicon/Avatar</h4><p>Favicon打开网站页面的小图标，可以更换为自己的Logo，<a href="https://realfavicongenerator.net/" target="_blank" rel="noopener">在这个网站下</a>可以定制自己喜欢的logo。</p><p>定制完毕后将图片放置在themes/next/source/images下</p><p>在favicon配置下进行相关路径等配置即可，如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">favicon:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  small: /images/favicon<span class="number">-16</span>x16.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  medium: /images/favicon<span class="number">-32</span>x32.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  apple_touch_icon: /images/apple-touch-icon.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  safari_pinned_tab: /images/safari-pinned-tab.svg</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  #android_manifest: /images/manifest.json</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  #ms_browserconfig: /images/browserconfig.xml</span></pre></td></tr></table></figure><p>同理，avatar是站点的头像，选好照片后放置在themes/next/source/images/avatar.jpg ，在avatar字段下进行配置，如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">avatar: /images/avatar.jpg</span></pre></td></tr></table></figure><p>效果如下：</p><p><img src="%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97-Hexo-Next-GitHub-Pages/avatar.png" alt="avatar"></p><h4 id="Social-Links"><a href="#Social-Links" class="headerlink" title="Social Links"></a>Social Links</h4><p>社交网站的配置,涵盖多数社交网站，| | 后面的为对应Font Awesome的图标，这个版本不用像以前的版本在social_icons下进行图标的配置，以下是我的配置：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Social Links.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">social:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  GitHub: https:<span class="comment">//github.com/Super-ming-666 || github</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  E-Mail: mailto:supermingzero@gmail.com || envelope</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  #Google: https:<span class="comment">//plus.google.com/yourname || google</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  Twitter: https:<span class="comment">//twitter.com/SuperMing7 || twitter</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  #FB Page: https:<span class="comment">//www.facebook.com/yourname || facebook</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  #VK Group: https:<span class="comment">//vk.com/yourname || vk</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  #StackOverflow: https:<span class="comment">//stackoverflow.com/yourname || stack-overflow</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  #YouTube: https:<span class="comment">//youtube.com/yourname || youtube</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  Instagram: https:<span class="comment">//instagram.com/super_minnng || instagram</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  #Skype: skype:yourname?call|chat || skype</span></pre></td></tr></table></figure><p>国内社交网站的配置：</p><p>同理将链接放置在Social Link下，一行一个链接，例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Social Links.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">social:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  zhihu: https:<span class="comment">//www.zhihu.com/people/zzz-65-21-31/activities || zhihu</span></span></pre></td></tr></table></figure><p>某些版本的链接的图标对应字段为social_icons。键值的格式为匹配键：<a href="https://fontawesome.com/cheatsheet/free/brands" target="_blank" rel="noopener">Font Awesome</a>图标的名称，严格按照Font Awesome的图标进行匹配，大小写等,例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">social_icons:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  enable: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  icons_only: <span class="literal">true</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  transition: <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  # Icon Mappings</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  zhihu: zhihu</span></pre></td></tr></table></figure><p>以上简单介绍几个配置，很多有趣的配置参照官方文档大家自己发现吧。</p><h4 id="阅读全文设置"><a href="#阅读全文设置" class="headerlink" title="阅读全文设置"></a>阅读全文设置</h4><p>即在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面的需求。</p><p>NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 <strong>阅读全文</strong> 按钮，可以通过以下方法：</p><ol><li><p>在文章中使用 `` 手动进行截断，Hexo 提供的方式 <strong>推荐</strong></p></li><li><p>在文章的 <a href="https://hexo.io/docs/front-matter.html" target="_blank" rel="noopener">front-matter</a> 中添加 <code>description</code>，并提供文章摘录</p></li><li><p>自动形成摘要，在 <strong>主题配置文件</strong> 中添加：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  enable: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  length: <span class="number">150</span></span></pre></td></tr></table></figure><p>默认截取的长度为 <code>150</code> 字符，可以根据需要自行设定</p></li></ol><p>建议使用 （即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。</p><h3 id="目录配置"><a href="#目录配置" class="headerlink" title="目录配置"></a>目录配置</h3><p>文章发布前，需要对目录进行设置，找到menu字段进行设置。我配置了标签页，分类页，归档页…前面对应的是目录的路径，|| 后面的是对应的图标，也是按照Font Awesone图标名称的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">menu:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">home</span>: /|| <span class="built_in">home</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  about: /about/|| user</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  tags: /tags/|| tags</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  categories: /categories/|| th</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  archives: /archives/|| archive</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="meta">#schedule: /schedule/ || calendar</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="meta">#sitemap: /sitemap.xml || sitemap</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="meta">#commonweal: /404/ || heartbeat</span></span></pre></td></tr></table></figure><p>创建这些目录页操作类似，例如创建标签页</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page tags</span></pre></td></tr></table></figure><p>此命令会自动在source文件夹下生成tags文件，同时创建一个index.md文件，用户标签的保存。</p><p>分类页，归档页也是如果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page catagories <span class="comment">//创建分类页</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page archives <span class="comment">//创建归档页</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page about <span class="comment">//创建about介绍页</span></span></pre></td></tr></table></figure><p>对相关页面的修改只需进入对应的文件夹修改对应文件即可。</p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>目录等配置完毕，如何发布文章呢？</p><p>很简单，使用Hexo提供的命令即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"文章标题"</span></span></pre></td></tr></table></figure><p>创建的markdown格式的文章会保存在source/_posts文件夹下，只需对文章进行编辑即可发布，使用以下命令：</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"文章标题"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo generate <span class="comment">//hexo g</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hexo deploy <span class="comment">//hexo d</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//以上步骤发布一遍文章</span></span></pre></td></tr></table></figure><p>经过以上步骤，hexo就完成了相关部署，即将本地的修改等部署到GitHub Pages上，直接查看github分配的域名即可访问你的博客。</p><h2 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h2><p>由于Github Pages的域名都是统一的your_name.github.io，如果想使用自己的域名，GitHub Pages也是支持的。</p><ol><li>拥有一个自己的域名</li></ol><p>国内有阿里云、腾讯云等购买一个域名，阿里云相对贵一点，但个人觉得更靠谱一点。假设你得到一个域名xxx.com。</p><ol start="2"><li>创建CNAME文件</li></ol><p>最好在本地博客的source下创建CNAME文件，内容为xxx.com。然后执行hexo g ;hexo d部署到GitHub上。</p><ol start="3"><li>域名绑定</li></ol><p>可以通过CNAME和A记录进行地址绑定，关于域名解析有不明白的查看文章：<a href="https://blog.csdn.net/dai451954706/article/details/37696651" target="_blank" rel="noopener">域名解析</a></p><p>以阿里云为例，进入到阿里云的<strong>云解析DNS</strong>目录下的<strong>域名解析</strong>，找到你的域名，进行解析设置。</p><p>我使用的是CNAME解析，添加@类型数据和www类型数据，指向你的xx.github.io域名。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">记录类型    主机记录    解析线路(运营商)   记录值 MX优先级   TTL 状态  操作</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">CNAME   @   默认  xx.github.io    --  <span class="number">10</span>分钟        修改|暂停|删除|备注</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">CNAME   www 默认  xx.github.io    --  <span class="number">10</span>分钟        修改|暂停|删除|备注</span></pre></td></tr></table></figure><p>也可以使用A记录指向，也就是域名直接指向IP地址x.x.x.x</p><p>在终端Ping以下你的xx.github.io，得到IP地址。同上述操作添加两条A记录</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">记录类型    主机记录    解析线路(运营商)   记录值 MX优先级   TTL 状态  操作</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">A   @   默认  x.x.x.x     --  <span class="number">10</span>分钟        修改|暂停|删除|备注</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">A   www 默认  x.x.x.x   --  <span class="number">10</span>分钟        修改|暂停|删除|备注</span></pre></td></tr></table></figure><blockquote><p>A记录优先级高于CNAME，如果两者同时存在，优先执行A记录。</p></blockquote><p>以上配置完毕，大概等10分钟左右便可通过新域名访问你的博客了！</p><h2 id="TrobleShooting"><a href="#TrobleShooting" class="headerlink" title="TrobleShooting"></a>TrobleShooting</h2><h3 id="文章的图片显示"><a href="#文章的图片显示" class="headerlink" title="文章的图片显示"></a>文章的图片显示</h3><p>需要安装一个插件：<strong>hexo-asset-image</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install https:<span class="comment">//github.com/CodeFalling/hexo-asset-image --save</span></span></pre></td></tr></table></figure><p>然后修改根目录下的_config.yml文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span></pre></td></tr></table></figure><p>此时使用hexo创建文件时会同时自动生成一个同名文件夹用于存放文章中用到的图片，将文章中需要用到的图片放到该文件夹中。</p><p>在文章中引用照片，可以通过相对路径方式使用markdown进行编写。例如：你将a.jpg图片放到对应文件夹后，通过相对路径的markdown无法进行显示<img src="/a.jpg" alt="">，图片可以在文章中正常显示，但是不会在首页中显示。</p><p>因此可以使用图片的另一种方式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;%asset_img example.jpg examplename %&#125;</span></pre></td></tr></table></figure><h3 id="Tags标签无法显示"><a href="#Tags标签无法显示" class="headerlink" title="Tags标签无法显示"></a>Tags标签无法显示</h3><p>tags标签显示的问题,大家的问题都不太一样，<a href="https://www.zhihu.com/question/29017171" target="_blank" rel="noopener">参考知乎答案</a></p><p>我参考了虾哔哔的回答解决了问题：</p><p>1.你需要在hexo根目录的source文件夹下新建一个tags文件夹，然后在tags文件夹里面新建一个index.md文件。快捷命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"tags"</span></span></pre></td></tr></table></figure><p>2.编辑index.md文件，内容如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">---</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">title: <span class="string">"tags"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">type: tags</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">layout: <span class="string">"tags"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">---</span></pre></td></tr></table></figure><p><strong>重点！！！</strong></p><blockquote><p>注意！这里面最重要的就是 layout 选项，后面的参数对应的是你 主题文件夹下 layout文件夹下第一级的布局文件。比如，我的主题是用ejs写的，那么对应的就是layout/tags.ejs，如果没有，那么就会出现空白的现象！<br>如果你的tags文件的命名时a.ejs，那么你就应该写成 layout: “a”。</p></blockquote><p>3.编辑主题配置文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">nav:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">home</span>: /</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  about: /about</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  tags: /tags</span></pre></td></tr></table></figure><p>编辑hexo配置文件Directory选项。</p><p>4.检查一下名称是否对应</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Directory</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">tag_dir: tags</span></pre></td></tr></table></figure><p>最重要的就是看一下你的主题文件里有没有标签页或者分类页的布局文件，一般来说都是有的，只是命名和存放的位置可能不同，所以大家要根据实际情况来修改。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;鉴于国内各平台现状，它们张口闭口信息共享，言论自由；努力建墙造岛的也是它们，我看到了一座座的数据孤岛，且没有一点好转的迹象…&lt;/p&gt;
&lt;p&gt;还是决定搭建个人博客。记录下一点一滴，觉得对自己、对他人乃至对社会有一点点帮助的文字。&lt;/p&gt;
&lt;p&gt;作为渺小到不能在渺小的个体，随时可能堙灭，悄无声息。而字节一直流淌在互联网之中，只要能够被检索到，一直都会存在。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;提到搭建网页，很多朋友都会想要数据库、服务器，还要域名balabala…听着就很麻烦…&lt;/p&gt;
&lt;p&gt;好在大家都在为如何快速搭建博客这一目标努力着，出现了有很多流行的框架，有快速简洁的Hexo、兼容性更强的JekyII，传说最好的博客平台FarBox，简单易用的Hugo…这些框架大大简化了你发布一篇文章的步骤，你负责写文章，框架负责页面的生成。&lt;/p&gt;
&lt;p&gt;而关于服务器，良心的GitHub为你解决了这个问题，Github Pages为每个账户提供一个 {username}.github.io 的仓库，同时为其分配一个二级域名，又支持自定义域名，服务器的问题解决了。接下来就正式开始吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Next" scheme="http://yoursite.com/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>WhyHumanRunTheWorld</title>
    <link href="http://yoursite.com/2019/12/27/WhyHumanRunTheWorld/"/>
    <id>http://yoursite.com/2019/12/27/WhyHumanRunTheWorld/</id>
    <published>2019-12-27T10:15:19.000Z</published>
    <updated>2020-02-04T08:13:37.688Z</updated>
    
    <content type="html"><![CDATA[<p>尤瓦尔赫拉利写了三本简史系列，《人类简史》、《未来简史》以及《今日简史》，分别于14年、17年和18年。成书时间越来越短，不可避免质量也打了很多的折扣、很多观点也是旧瓶新酒。总结下来，《人类简史》终究还是三本中最值得的一本。</p><p>并不像《时简》那样，各种干货填充。仅仅作为普普通通的大众科普读物，更多起到的是抛砖引玉的作用。作者也表明自己写书的目标学者是对世界充满好奇的青年，而非专业人士。所以会有很多人说这本书结论的支撑论点很薄弱。的确如此，我认为这本书最大的价值在于作者用宏观视角去审视人类历史，结合心理学、历史学、社会学、基因学、哲学……用庞大的知识体系探讨人类从诞生至今，对自然、对人类本身、对人类未来的影响。作者把自己思考后得出的一些结论进行简单的论证分享给读者，多数知识点仅仅点到为止，不刻意论证，有意留白给读者探索的空间，比如在讲到文化宗教相关问题时，作者的相关论述极大的勾起了我的兴趣，在书海中找到了亨廷顿的《文明的冲突》，深入了解相关问题的论述。这些小细节正是这本书的价值所在。<strong>它给你提供一个看世界的角度，剩下的，交给你的好奇心去完成。</strong>不多bb，谈书中我挺喜欢的三个观点探讨一下。「智人想象的能力，为什么会产生人权，幸福是什么」</p><a id="more"></a><blockquote><p>全书结构：认知革命；农业革命；融合与统一；科学革命</p><p>时间点：135亿年，宇宙形成；38亿年前，有机体诞生；七万年前，智人创造出了“文化”，即认知革命；12000年前，农业革命，500年前，科学革命。</p><p>背景：当今世界上所有的人都属于智人范畴，而在200万年到一万年前，整个世界其实同时存在多种不同的人种。除智人外，还有尼安德特人，梭罗人，弗洛里斯人，丹尼索瓦人，鲁道夫人…</p></blockquote><h2 id="智人各个方面都不是这些人种中的佼佼者，为什么智人能够征服大陆，而其余人种陆续消失？"><a href="#智人各个方面都不是这些人种中的佼佼者，为什么智人能够征服大陆，而其余人种陆续消失？" class="headerlink" title="智人各个方面都不是这些人种中的佼佼者，为什么智人能够征服大陆，而其余人种陆续消失？"></a>智人各个方面都不是这些人种中的佼佼者，为什么智人能够征服大陆，而其余人种陆续消失？</h2><p>作者将原因归为一次偶然的基因突变，使得智人拥有了新的思维和沟通方式，由此诞生了认知革命。别的人种也有语言，那智人的特殊在哪？常见的理论：智人的语言最为灵活，虽然我们只能发出有限的声音，但组合起来就是无限的句子。在这个概念之上，更重要的在于人类自己，将语言发展成了<strong>八卦的工具</strong>。没错，就是八卦的工具，智人因为八卦走上了Human界的巅峰。作者的论证：通过八卦能够让智人知道部落里谁谁最可靠可信，帮助人类发展出了更紧密、更复杂的合作体系。就像当今世界，人类绝大所属的沟通还是八卦，就像历史学家碰面吃饭的时候，聊的往往不是一战起因。就是这么看似无厘头的结论和无厘头的推论，作者将这种“讨论虚构事物”的能力作为智人最独特的功能。看起来不靠谱，但以我目前的知识体系，还真无法完美的反驳他的观点。</p><p>说到想象，作者更进一步， 认知革命前，人类可以喊出“小心，有狮子。”之后，人类能够喊出：“狮子是我们部落的守护神。”自此，当一些想象的内容变成“一起想象”时，宗教、国家、公司等各种形式，其实都源于这个想象。人们相信金钱的存在，所以有富人穷人的概念，人权主义为了维护人权这个想象的概念，活跃各个角落…所以从认知革命以来，智人一直生活在一种双重现实之中，一方面我们相信河流，狮子等客观存在的现实，一方面，我们也有像是神、国家和企业这种想象中的现实。法国大革命很好的体现了这一点，一夜之间，从”天赋人权“到”人民做主“，<strong>一种想象的破灭，同时另一种想象的诞生。</strong></p><p>以讨论虚构事物能力的认知革命为基础，农业革命之中，人类构建了”由想象产生的秩序“，我们想象某种秩序，是因为相信他可以提升合作效率，打造更美好的社会。自然界的秩序是稳定不变的，而想象构建出的秩序，总有一夕崩溃的风险。只要人们不再相信。具体不再展开。</p><p>关于这个想象构建的能力，这个观点我表示十分赞同，就像”世上本没有路，走的人多了，变成了路。“这一切，多么顺其自然，而且几乎存在每个人的生活之中，我们构建了这个想象的世界却没有意识到这都是想象的。这个集体想象发展至今，对人类影响深刻，从阶级社会到现在的民主社会，人类是随着想象构建的制度变化而变化的。想明白了这一点，其实这个世界很多问题都可以解释了。比方说制度、学校、军队、法院等这些机构存在最初的意义是什么，一定程度是为了维护这个由想象构建的社会。再进一步，你可能会像我一样，从一个对xx处处不满的青年变成一个想尽办法适应这个社会的生物，社会法则是人为制定的，个人的力量过于渺小，主动希望渺茫，为了生存，被动适应不妨是另一种选择。有了这种想法后，生活也轻松了很多，有时候发现藏在事情背后的本质…就不会轻易被各种人为渲染出来的情绪拖着走，成为乌合之众的一份子。</p><hr><h2 id="世界本无人权，人人并不平等"><a href="#世界本无人权，人人并不平等" class="headerlink" title="世界本无人权，人人并不平等"></a>世界本无人权，人人并不平等</h2><p>作者讲到人文主义时，作者将其分为三类，自由人文、社会人文、演化人文。所谓人权的存在，也是因为人们“想象出来的。”人权出现的根源就在于美国成立初的《独立宣言》，独立宣言最著名的段落是这样的：</p><blockquote><p>我们认为下面这些真理是不言而喻的：人人生而平等，造物者赋予他们若干不可剥夺的权力，其中包括生命权、自由权和追求幸福的权力。</p></blockquote><p>其实这个概念来自于基督教，基督教认为每个人的灵魂都是上帝创造的，而所有灵魂在上帝面前一律平等。美国人说的很实在，但种族歧视到现在都没有搞定。对于人权这个虚构的概念，对于黑人的态度，他们依旧会选择性的遗忘，看一眼奥斯卡近年来提名影单就知道这事在美国社会已经不可被忽视了。作者认为黑人的其实是僵化的制度常规，并且是个非常棘手的恶性循环。作者给出的逻辑是：偶然的历史事件—&gt;白人控制了黑人—-&gt;制定了种族歧视的法律—&gt;导致黑人普遍贫穷、教育缺失—&gt;又造成人们的文化偏见。而文化偏见的加剧反过去又导致了种族歧视法律的颁布和黑人缺乏教育、贫穷。一直觉得，那时的西方，和Nazi有区别吗？就是这样一个不成文的循环与偏见造成了如今的美国社会困境。说回来人们崇尚人人平等这一观念，但心里最深处，遵循的还是生物学最基本的演化规律，演化规定中从来没有什么平等，生而平等在生物学上其实是演化各有不同。又或者关于幸福，到目前为止，生物学并没有给幸福有一个明确的定义，最直观可客观量化的幸福便是“快感”，多数研究都认可快感的存在。换句话说，幸福其实就是不断追求快感的过程。如果真是如此，那么赫胥黎反乌小说《美丽新世界》中人人靠药物获得快感，每个人都无比幸福，这个社会又有什么问题吗？（信息量过大，快崩溃了…</p><p>所以人权的产生是因为人们都崇尚自由人文与社会人文，而演化人文认为人应该遵循自然法则，优胜劣汰，这样才能演化成更优秀的人类，代表就是纳粹。其本质上（生物学）并没有问题，于此同时，科学研究发现，没有什么灵魂这些东西的存在，人类本质就是普普通通的有机体，仅此而已，和猪狗猫并没有什么区别。这就是科学与当今社会之间的一道鸿沟，而因为社会人文建立起来的一套制度对此视而不见，但这道裂缝已经存在，何时推翻，我认为只是时间问题。在有生之年或许能够见证人类历史，还是蛮期待的。而且反观人类历史，从来都不是正义的。这是书中最令我感兴趣的一段。</p><hr><h2 id="幸福？"><a href="#幸福？" class="headerlink" title="幸福？"></a>幸福？</h2><p>关于宗教的那一段论述也很精彩，过于冗长就不展开。最后作者展开对于幸福与快乐人生的探讨。人类至今都没有搞清楚幸福和快乐的来源，那又如何评判那个社会制度对人民更友好呢？资本主义会说自由市场使得经济增长，会让人自立自强，这样人们会是快乐的，民族主义者认为政治自觉会带来快乐，共产主义者认为无产阶级zz能够带来快乐…又或是关于金钱，学界普遍的一个结论：金钱确实会带来快乐，但有一个阈值，一旦超过，就没有那么明显的效果。尤其是对于经济阶层底层的人来说，钱越多越快乐。balabala作者还从婚姻、疾病等对快乐的影响探讨了一通。作者说了这么一通，又迫使我开始认识自己，思考生命的意义。又或者生命本身就没有意义，纵使地球爆炸，宇宙还在运行，那么生命的意义又是谁赋予的呢？好像也是人类自己赋予的。又或是人活着是为了追求快乐而存在的？为了尽可能只追求更多的快乐来弥补主线痛苦的人生？<strong>尼采说：只要有了活下去的理由，几乎什么都能够忍受。</strong>又或是苦中作乐的快感？咦？好像多数人的人生一生劳碌，终日烦忧，根本没时间享受平静。转瞬即逝的快乐像是逼迫我们活下去的诱饵，你必须寻找更多的快乐，以便承担更多生活的痛苦？想了这么多，感觉佛教真是真理，世间清流，佛教系统的研究了快乐的本质和成因，佛教认为，“追求”这一主观目的是所有痛苦的根源，不管你追求的是什么，你总会陷入一种负面情绪之中，因为你感受到了快乐，所以就给原本正常的生活定义为不快乐，甚至是痛苦。越是追求，越是痛苦，就像海浪一样，风平浪静或许是正常的，你偶然感受到了浪尖的快感，就认为风平浪静是痛苦的，于是想追求更多的浪尖……于是就导致了这个循环。或许放下追求本身，感受自己内心，这样生活好像会好一点。</p><hr><p>最近对于人类历史很感兴趣，就找出这本书翻了，查理芒格大致也说“活着，你最好了解一下自己生前这个世界发生了什么。”，关于历史的重要性，作者在书中有个观点:现代人只是住在了高楼大厦，而DNA还留在草原。隐晦的解释了人类历史变迁之中，最根本的东西其实并没有改变 ，很多失误决策等事件其实老祖宗们做了几百遍了，如果你思考问题的时候考虑一下历史这个维度，或多或少能够减少误判。再次就是多元思维的思考模式，作者正是掌握了多元思维，才能用上帝视角去鸟瞰人类历史，看问题的角度完全不局限在一个领域，太牛x了。总之，全书看似平淡无奇，导向性也很明显（保持清醒，作者其实很多观点都是一点点把你带进去的），但细细推敲，每一个观点背后都值得深挖。是一本会思考的书，且短时间内并不会过时，时不时翻一翻，你会发现自己对于某些观点的看法又会有所改观。这是我第二次阅读这本书，和第一次的时候完完全全是两种不同的心态和感受，我论述的观点可能不是很严谨，但书值得翻阅。四星好评。</p><blockquote><p>纵观所了解过的几个阶段的人类史，和平绝对不是人类历史的主线，动荡与血腥才是。很多人没有意识到我们这个年代有多么多么和平，战后的70多年虽阿富汗伊拉克有零星战火，但整体上还是和平的，每天起床能够享受平静的一天真的是我们这代人的福气，珍惜这来之不易的平静，希望人类能够往好处发展吧，虽然我对未来挺悲观的但还挺想看看未来到底何去何从。</p></blockquote><p>​                                                                                                    <a href="https://www.ted.com/talks/yuval_noah_harari_what_explains_the_rise_of_humans?language=en" target="_blank" rel="noopener">作者TED「值得一看」</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尤瓦尔赫拉利写了三本简史系列，《人类简史》、《未来简史》以及《今日简史》，分别于14年、17年和18年。成书时间越来越短，不可避免质量也打了很多的折扣、很多观点也是旧瓶新酒。总结下来，《人类简史》终究还是三本中最值得的一本。&lt;/p&gt;
&lt;p&gt;并不像《时简》那样，各种干货填充。仅仅作为普普通通的大众科普读物，更多起到的是抛砖引玉的作用。作者也表明自己写书的目标学者是对世界充满好奇的青年，而非专业人士。所以会有很多人说这本书结论的支撑论点很薄弱。的确如此，我认为这本书最大的价值在于作者用宏观视角去审视人类历史，结合心理学、历史学、社会学、基因学、哲学……用庞大的知识体系探讨人类从诞生至今，对自然、对人类本身、对人类未来的影响。作者把自己思考后得出的一些结论进行简单的论证分享给读者，多数知识点仅仅点到为止，不刻意论证，有意留白给读者探索的空间，比如在讲到文化宗教相关问题时，作者的相关论述极大的勾起了我的兴趣，在书海中找到了亨廷顿的《文明的冲突》，深入了解相关问题的论述。这些小细节正是这本书的价值所在。&lt;strong&gt;它给你提供一个看世界的角度，剩下的，交给你的好奇心去完成。&lt;/strong&gt;不多bb，谈书中我挺喜欢的三个观点探讨一下。「智人想象的能力，为什么会产生人权，幸福是什么」&lt;/p&gt;
    
    </summary>
    
    
      <category term="Books" scheme="http://yoursite.com/categories/Books/"/>
    
    
      <category term="human" scheme="http://yoursite.com/tags/human/"/>
    
      <category term="reading" scheme="http://yoursite.com/tags/reading/"/>
    
  </entry>
  
</feed>
